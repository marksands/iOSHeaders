//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AKAppleIDAuthenticationLimitedUIProvider.h"
#import "NSSecureCoding.h"

@class AKAnisetteData, AKDevice, NSArray, NSDictionary, NSNumber, NSObject<OS_dispatch_queue>, NSSet, NSString, NSUUID;

@interface AKAppleIDAuthenticationContext : NSObject <AKAppleIDAuthenticationLimitedUIProvider, NSSecureCoding>
{
    NSString *_generatedCode;
    NSNumber *_latitude;
    NSNumber *_longitude;
    NSString *_deviceClass;
    NSString *_deviceColor;
    NSString *_deviceEnclosureColor;
    struct __CFUserNotification *_activeSecondFactoryEntryPrompt;
    CDUnknownBlockType _secondFactoryEntryCompletion;
    NSObject<OS_dispatch_queue> *_secondFactorQueue;
    AKDevice *_proxiedDevice;
    AKDevice *_companionDevice;
    NSString *_interpolatedReason;
    unsigned long long _attemptIndex;
    _Bool _isProxyingForApp;
    _Bool _shouldSendIdentityTokenForRemoteUI;
    _Bool _shouldSendGrandSlamTokensForRemoteUI;
    _Bool _isPasswordEditable;
    _Bool _shouldSkipInitialReachabilityCheck;
    _Bool _shouldPreventInteractiveAuth;
    _Bool _shouldForceInteractiveAuth;
    _Bool _isUsernameEditable;
    _Bool _shouldAllowAppleIDCreation;
    _Bool _needsCredentialRecovery;
    _Bool _needsNewAppleID;
    _Bool _needsPasswordChange;
    _Bool _isTriggeredByNotification;
    _Bool _isEphemeral;
    _Bool _shouldOfferSecurityUpgrade;
    _Bool _needsRepair;
    _Bool _shouldPromptForPasswordOnly;
    _Bool _shouldUpdatePersistentServiceTokens;
    _Bool _shouldRequestRecoveryPET;
    _Bool _shouldRequestShortLivedToken;
    _Bool _shouldRequestConfigurationInfo;
    _Bool _supportsPiggybacking;
    _Bool _anticipateEscrowAttempt;
    _Bool _isFirstTimeLogin;
    _Bool _shouldSkipSettingsLaunchAlert;
    NSString *_proxiedAppBundleID;
    NSUUID *_identifier;
    NSString *_identityToken;
    NSString *_passwordPromptTitle;
    NSString *_proxiedAppName;
    NSString *_password;
    unsigned long long _capabilityForUIDisplay;
    NSString *_shortLivedToken;
    NSString *_message;
    NSString *_username;
    long long _serviceType;
    NSString *_reason;
    NSString *_defaultButtonString;
    long long _maximumLoginAttempts;
    NSArray *_serviceIdentifiers;
    NSString *_DSID;
    NSString *_altDSID;
    NSDictionary *_httpHeadersForRemoteUI;
    id _clientInfo;
    NSString *_title;
    NSString *_helpAnchor;
    NSString *_helpBook;
    unsigned long long _authenticationType;
    id <AKAnisetteServiceProtocol> _anisetteDataProvider;
    NSNumber *_isAppleIDLoginEnabled;
    NSNumber *_hasEmptyPassword;
    NSSet *_desiredInternalTokens;
    NSString *_securityUpgradeContext;
    AKAnisetteData *_proxiedDeviceAnisetteData;
    AKAnisetteData *_companionDeviceAnisetteData;
    NSString *_displayString;
    NSString *_displayTitle;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *displayTitle; // @synthesize displayTitle=_displayTitle;
@property(copy, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
@property(retain, nonatomic) AKAnisetteData *companionDeviceAnisetteData; // @synthesize companionDeviceAnisetteData=_companionDeviceAnisetteData;
@property(retain, nonatomic) AKAnisetteData *proxiedDeviceAnisetteData; // @synthesize proxiedDeviceAnisetteData=_proxiedDeviceAnisetteData;
@property(copy, nonatomic) NSString *securityUpgradeContext; // @synthesize securityUpgradeContext=_securityUpgradeContext;
@property(nonatomic) _Bool shouldSkipSettingsLaunchAlert; // @synthesize shouldSkipSettingsLaunchAlert=_shouldSkipSettingsLaunchAlert;
@property(nonatomic, setter=setFirstTimeLogin:) _Bool isFirstTimeLogin; // @synthesize isFirstTimeLogin=_isFirstTimeLogin;
@property(copy, nonatomic) NSSet *desiredInternalTokens; // @synthesize desiredInternalTokens=_desiredInternalTokens;
@property(nonatomic) _Bool anticipateEscrowAttempt; // @synthesize anticipateEscrowAttempt=_anticipateEscrowAttempt;
@property(nonatomic) _Bool supportsPiggybacking; // @synthesize supportsPiggybacking=_supportsPiggybacking;
@property(nonatomic) _Bool shouldRequestConfigurationInfo; // @synthesize shouldRequestConfigurationInfo=_shouldRequestConfigurationInfo;
@property(nonatomic) _Bool shouldRequestShortLivedToken; // @synthesize shouldRequestShortLivedToken=_shouldRequestShortLivedToken;
@property(nonatomic) _Bool shouldRequestRecoveryPET; // @synthesize shouldRequestRecoveryPET=_shouldRequestRecoveryPET;
@property(copy, nonatomic, setter=setHasEmptyPassword:) NSNumber *hasEmptyPassword; // @synthesize hasEmptyPassword=_hasEmptyPassword;
@property(copy, nonatomic, setter=setAppleIDLoginEnabled:) NSNumber *isAppleIDLoginEnabled; // @synthesize isAppleIDLoginEnabled=_isAppleIDLoginEnabled;
@property(retain, nonatomic) id <AKAnisetteServiceProtocol> anisetteDataProvider; // @synthesize anisetteDataProvider=_anisetteDataProvider;
@property(nonatomic) _Bool shouldUpdatePersistentServiceTokens; // @synthesize shouldUpdatePersistentServiceTokens=_shouldUpdatePersistentServiceTokens;
@property(nonatomic) _Bool shouldPromptForPasswordOnly; // @synthesize shouldPromptForPasswordOnly=_shouldPromptForPasswordOnly;
@property(nonatomic) unsigned long long authenticationType; // @synthesize authenticationType=_authenticationType;
@property(copy, nonatomic) NSString *helpBook; // @synthesize helpBook=_helpBook;
@property(copy, nonatomic) NSString *helpAnchor; // @synthesize helpAnchor=_helpAnchor;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) _Bool needsRepair; // @synthesize needsRepair=_needsRepair;
@property(nonatomic) _Bool shouldOfferSecurityUpgrade; // @synthesize shouldOfferSecurityUpgrade=_shouldOfferSecurityUpgrade;
@property(retain, nonatomic) id clientInfo; // @synthesize clientInfo=_clientInfo;
@property(copy, nonatomic) NSDictionary *httpHeadersForRemoteUI; // @synthesize httpHeadersForRemoteUI=_httpHeadersForRemoteUI;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSString *DSID; // @synthesize DSID=_DSID;
@property(nonatomic) _Bool isEphemeral; // @synthesize isEphemeral=_isEphemeral;
@property(copy, nonatomic) NSArray *serviceIdentifiers; // @synthesize serviceIdentifiers=_serviceIdentifiers;
@property(nonatomic) long long maximumLoginAttempts; // @synthesize maximumLoginAttempts=_maximumLoginAttempts;
@property(copy, nonatomic) NSString *defaultButtonString; // @synthesize defaultButtonString=_defaultButtonString;
@property(copy, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(nonatomic) long long serviceType; // @synthesize serviceType=_serviceType;
@property(nonatomic, setter=setTriggeredByNotification:) _Bool isTriggeredByNotification; // @synthesize isTriggeredByNotification=_isTriggeredByNotification;
@property(nonatomic) _Bool needsPasswordChange; // @synthesize needsPasswordChange=_needsPasswordChange;
@property(nonatomic) _Bool needsNewAppleID; // @synthesize needsNewAppleID=_needsNewAppleID;
@property(nonatomic) _Bool needsCredentialRecovery; // @synthesize needsCredentialRecovery=_needsCredentialRecovery;
@property(nonatomic) _Bool shouldAllowAppleIDCreation; // @synthesize shouldAllowAppleIDCreation=_shouldAllowAppleIDCreation;
@property(nonatomic) _Bool isUsernameEditable; // @synthesize isUsernameEditable=_isUsernameEditable;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) unsigned long long _attemptIndex; // @synthesize _attemptIndex;
@property(readonly, nonatomic) _Bool _shouldSkipInitialReachabilityCheck; // @synthesize _shouldSkipInitialReachabilityCheck;
@property(copy, nonatomic, setter=_setMessage:) NSString *_message; // @synthesize _message;
@property(copy, nonatomic, setter=_setShortLivedToken:) NSString *_shortLivedToken; // @synthesize _shortLivedToken;
@property(nonatomic) _Bool _isPasswordEditable; // @synthesize _isPasswordEditable;
@property(copy, nonatomic, setter=_setPassword:) NSString *_password; // @synthesize _password;
@property(copy, nonatomic, setter=_setProxiedAppName:) NSString *_proxiedAppName; // @synthesize _proxiedAppName;
@property(copy, nonatomic) NSString *_passwordPromptTitle; // @synthesize _passwordPromptTitle;
@property(nonatomic) _Bool _shouldSendGrandSlamTokensForRemoteUI; // @synthesize _shouldSendGrandSlamTokensForRemoteUI;
@property(nonatomic) _Bool _shouldSendIdentityTokenForRemoteUI; // @synthesize _shouldSendIdentityTokenForRemoteUI;
@property(copy, nonatomic, setter=_setIdentityToken:) NSString *_identityToken; // @synthesize _identityToken;
@property(readonly, nonatomic) NSUUID *_identifier; // @synthesize _identifier;
@property(copy, nonatomic, setter=_setProxiedAppBundleID:) NSString *_proxiedAppBundleID; // @synthesize _proxiedAppBundleID;
@property(nonatomic, setter=_setProxyingForApp:) _Bool _isProxyingForApp; // @synthesize _isProxyingForApp;
- (void).cxx_destruct;
- (id)_secondFactorQueue;
- (void)_handleSecondFactorCodeEntry;
- (void)_stopListeningForSecondFactorCodeEntryNotification;
- (void)_startListeningForSecondFactorCodeEntryNotification;
- (void)presentSecondFactorAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dismissSecondFactorUIWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentSecondFactorUIWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentLoginAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)dismissBasicLoginUIWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool _requiresPasswordInput;
- (void)presentBasicLoginUIWithCompletion:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) AKDevice *companionDevice;
@property(copy, nonatomic) AKDevice *proxiedDevice;
@property(copy, nonatomic) NSString *serviceIdentifier;
@property(readonly, nonatomic) NSString *_interpolatedReasonWithBlame;
@property(readonly, nonatomic) NSString *_interpolatedReason;
@property(nonatomic) _Bool shouldForceInteractiveAuth; // @synthesize shouldForceInteractiveAuth=_shouldForceInteractiveAuth;
@property(nonatomic) _Bool shouldPreventInteractiveAuth; // @synthesize shouldPreventInteractiveAuth=_shouldPreventInteractiveAuth;
@property(readonly, nonatomic) unsigned long long _capabilityForUIDisplay; // @synthesize _capabilityForUIDisplay;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (_Bool)_localUserHasEmptyPassword;
- (void)_updateWithValuesFromContext:(id)arg1;
- (id)_sanitizedCopy;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_initWithIdentifier:(id)arg1;
- (id)init;
- (id)authKitAccountForSilentServiceToken:(id *)arg1;
- (id)authKitAccount:(id *)arg1;
@property(copy, nonatomic) NSString *generatedCode;
@property(copy, nonatomic) NSString *deviceEnclosureColor;
@property(copy, nonatomic) NSString *deviceColor;
@property(copy, nonatomic) NSString *deviceClass;
@property(copy, nonatomic) NSNumber *longitude;
@property(copy, nonatomic) NSNumber *latitude;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

