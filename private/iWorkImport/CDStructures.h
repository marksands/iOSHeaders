//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSObject, NSSet, NSString, NSUUID, TSCH3DScene, TSCH3DShaderVariable, TSCHChartInfo, TSCHChartSeriesType, TSCHChartType, TSUCustomFormat;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTNodeArrayArchive;

struct ASTNodeArrayArchive_ASTStickyBits;

struct ASTNodeArrayArchive_ASTUidList;

struct ASTNodeArrayArchive_ASTUidTract {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive_ASTUidList *_field5;
    struct ASTNodeArrayArchive_ASTUidList *_field6;
    _Bool _field7;
    int _field8;
};

struct ASTNodeArrayArchive_ASTUidTractList {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> _field5;
    struct ASTNodeArrayArchive_ASTStickyBits *_field6;
};

struct Action;

struct ActionFinder;

struct ActiveLabelsTypeBounds {
    long long _field1;
    struct ObjcSharedPtr<NSMutableIndexSet> _field2;
    struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> _field3;
};

struct Address {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Address *_field6;
};

struct AllFootnoteSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct AnimationAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    double _field7;
    double _field8;
    struct Color *_field9;
    unsigned int _field10;
    unsigned int _field11;
    struct PathSourceArchive *_field12;
    struct PathSourceArchive *_field13;
    struct PathSourceArchive *_field14;
    double _field15;
    basic_string_a1f69cfb *_field16;
    basic_string_a1f69cfb *_field17;
    basic_string_a1f69cfb *_field18;
    _Bool _field19;
    _Bool _field20;
};

struct ArchiveInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long identifier_;
    struct RepeatedPtrField<TSP::MessageInfo> message_infos_;
    _Bool should_merge_;
};

struct ArgumentPlaceholderNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ArrayNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AttributeCollection {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> _field2;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> _field3;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> _field4;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> _field5;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field6;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> _field7;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> _field8;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> _field9;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> _field10;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> _field11;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> _field12;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> _field13;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> _field14;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> _field15;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> _field16;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> _field17;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> _field18;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> _field19;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> _field20;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> _field21;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> _field22;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> _field23;
    struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> _field24;
};

struct AttributeSpecs {
    unsigned long long stride;
    unsigned long long offset;
    unsigned long long components;
};

struct Attribution {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
};

struct AxisGridLocation {
    _Bool _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    tvec3_17f03ce0 _field4;
};

struct AxisLabelCacheItem;

struct BarElementInfo {
    _Bool _field1;
    float _field2;
    _Bool _field3;
    unsigned long long _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    _Bool hasTopBevel;
    _Bool hasBottomBevel;
    _Bool isCylindrical;
    _Bool isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BarIntercept {
    double _field1;
    id _field2;
};

struct BezierPathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Size *_field6;
    struct Path *_field7;
};

struct BookmarkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct BooleanCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
};

struct BooleanNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    _Bool _field6;
};

struct BufferStates {
    struct array<TSCH3D::GLSingleState, 2> states;
};

struct BuildArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
    double _field7;
    struct BuildAttributesArchive *_field8;
    int _field9;
};

struct BuildAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct AnimationAttributesArchive *_field4;
    double _field5;
    unsigned int _field6;
    int _field7;
    double _field8;
    double _field9;
    unsigned int _field10;
    unsigned int _field11;
    double _field12;
    double _field13;
    int _field14;
    int _field15;
    double _field16;
    struct PathSourceArchive *_field17;
    int _field18;
    int _field19;
    unsigned int _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    double _field25;
    int _field26;
    _Bool _field27;
    double _field28;
    double _field29;
    basic_string_a1f69cfb *_field30;
    basic_string_a1f69cfb *_field31;
    double _field32;
    double _field33;
    struct Color *_field34;
    basic_string_a1f69cfb *_field35;
    unsigned int _field36;
    int _field37;
};

struct BuildChunkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    double _field6;
    double _field7;
    unsigned int _field8;
    _Bool _field9;
    _Bool _field10;
    struct BuildChunkIdentifierArchive *_field11;
    struct UUID *_field12;
};

struct BuildChunkIdentifierArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    int _field6;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CC_SHA1state_st {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8[16];
    int _field9;
};

struct CFUUIDArchive;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CachedLabelBounds {
    tvec3_17f03ce0 _field1;
    box_80622335 _field2;
    tvec2_84d5962d _field3;
    struct ObjcSharedPtr<NSString> _field4;
};

struct CalloutPathSourceArchive;

struct CellBorderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    int _field7;
    int _field8;
    struct StrokeArchive *_field9;
    struct StrokeArchive *_field10;
    int _field11;
    int _field12;
};

struct CellCoordinateVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field5;
};

struct CellID;

struct CellRange;

struct CellRegion {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
};

struct CellStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CellStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CellStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    _Bool _field8;
    int _field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct PaddingArchive *_field12;
    struct StrokeArchive *_field13;
    struct StrokeArchive *_field14;
    struct StrokeArchive *_field15;
    struct StrokeArchive *_field16;
};

struct CellUIDArchive;

struct CellUIDListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    RepeatedPtrField_bfda3daa _field6;
    RepeatedField_c2891982 _field7;
    RepeatedField_c2891982 _field8;
};

struct CellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct BooleanCellValueArchive *_field5;
    struct DateCellValueArchive *_field6;
    struct NumberCellValueArchive *_field7;
    struct StringCellValueArchive *_field8;
    struct ErrorCellValueArchive *_field9;
    int _field10;
};

struct CharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct CharacterStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    float _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    basic_string_a1f69cfb *_field9;
    struct Color *_field10;
    basic_string_a1f69cfb *_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    struct Color *_field23;
    struct ShadowArchive *_field24;
    float _field25;
    float _field26;
    struct Color *_field27;
    struct Color *_field28;
    float _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct Color *_field34;
    float _field35;
    int _field36;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field37;
    basic_string_a1f69cfb *_field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    basic_string_a1f69cfb *_field44;
    int _field45;
};

struct CharacterStylePropertyChangeSetArchive;

struct Chart3DBaseImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    float _field6;
};

struct Chart3DDiffuseMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DDirectionalLightArchive;

struct Chart3DEmissiveMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DEnvironmentMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> _field6;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field7;
    _Bool _field8;
};

struct Chart3DEnvironmentPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> _field5;
};

struct Chart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DLightingModelArchive *_field5;
    basic_string_a1f69cfb *_field6;
    int _field7;
    unsigned int _field8;
};

struct Chart3DFixedFunctionLightingModelArchive;

struct Chart3DImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DBaseImageTextureTilingArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
};

struct Chart3DLightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Chart3DVectorArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    struct Chart3DVectorArchive *_field9;
    float _field10;
    unsigned int _field11;
    struct Chart3DPointLightArchive *_field12;
    struct Chart3DDirectionalLightArchive *_field13;
    struct Chart3DSpotLightArchive *_field14;
    _Bool _field15;
};

struct Chart3DLightingModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DPhongLightingModelArchive *_field5;
    struct Chart3DFixedFunctionLightingModelArchive *_field6;
    struct Chart3DEnvironmentPackageArchive *_field7;
};

struct Chart3DLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<TSCH::Chart3DLightArchive> _field6;
};

struct Chart3DModulateMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DPhongLightingModelArchive;

struct Chart3DPhongMaterialPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DEmissiveMaterialArchive *_field5;
    struct Chart3DDiffuseMaterialArchive *_field6;
    struct Chart3DModulateMaterialArchive *_field7;
    struct Chart3DSpecularMaterialArchive *_field8;
    struct Chart3DShininessMaterialArchive *_field9;
};

struct Chart3DPointLightArchive;

struct Chart3DShininessMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpecularMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DTexturesMaterialArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field6;
};

struct Chart3DSpotLightArchive;

struct Chart3DTSPImageDataTextureArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DataReference *_field5;
    struct DataReference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct Chart3DTexturesMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Chart3DVectorArchive *_field5;
    struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> _field6;
};

struct Chart3DVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct ChartArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    int _field6;
    int _field7;
    struct RectArchive *_field8;
    struct Reference *_field9;
    struct ChartGridArchive *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    RepeatedPtrField_a0d2dbe7 _field16;
    RepeatedPtrField_a0d2dbe7 _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedPtrField_a0d2dbe7 _field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    RepeatedPtrField_a0d2dbe7 _field24;
    struct SparseReferenceArray *_field25;
    struct SparseReferenceArray *_field26;
    RepeatedPtrField_a0d2dbe7 _field27;
    struct Reference *_field28;
    unsigned int _field29;
};

struct ChartAxisGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct FormatStructArchive *_field4;
    struct FormatStructArchive *_field5;
    struct StrokeArchive *_field6;
    float _field7;
    int _field8;
    struct FormatStructArchive *_field9;
    struct FormatStructArchive *_field10;
    int _field11;
    int _field12;
    float _field13;
    float _field14;
    struct ShadowArchive *_field15;
    struct StrokeArchive *_field16;
    struct ShadowArchive *_field17;
    struct StrokeArchive *_field18;
    float _field19;
    int _field20;
    struct FormatStructArchive *_field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    int _field37;
    basic_string_a1f69cfb *_field38;
    struct ChartsNSNumberDoubleArchive *_field39;
    int _field40;
    int _field41;
    struct ChartsNSNumberDoubleArchive *_field42;
    int _field43;
};

struct ChartAxisIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    unsigned int _field6;
};

struct ChartGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    int _field4;
    float _field5;
    struct Chart3DLightingPackageArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    struct Chart3DVectorArchive *_field8;
    float _field9;
    float _field10;
    struct Chart3DVectorArchive *_field11;
    struct FillArchive *_field12;
    struct StrokeArchive *_field13;
    struct ShadowArchive *_field14;
    struct StrokeArchive *_field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    int _field20;
    float _field21;
    int _field22;
    int _field23;
    float _field24;
    struct FillArchive *_field25;
    float _field26;
    float _field27;
    float _field28;
    int _field29;
    float _field30;
    float _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    struct Color *_field37;
    basic_string_a1f69cfb *_field38;
    int _field39;
    int _field40;
};

struct ChartGridArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_236b8a23 _field5;
    RepeatedPtrField_236b8a23 _field6;
    int _field7;
    _Bool _field8;
    struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> _field9;
};

struct ChartInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct ChartModelArchive *_field6;
    struct Reference *_field7;
    struct LegendModelArchive *_field8;
    struct RectArchive *_field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
    RepeatedPtrField_a0d2dbe7 _field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    int _field15;
    int _field16;
    struct SparseReferenceArray *_field17;
    struct SparseReferenceArray *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Point *_field21;
    struct Reference *_field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    int _field24;
    int _field25;
    _Bool _field26;
};

struct ChartLabelsContainingLabelRenderInfo {
    id _field1;
    tvec2_3b141483 _field2;
    tvec2_3b141483 _field3;
    id _field4;
    tvec3_17f03ce0 _field5;
    tvec3_17f03ce0 _field6;
    unsigned int _field7;
    tvec2_84d5962d _field8;
    float _field9;
    tvec2_84d5962d _field10;
    float _field11;
};

struct ChartMediatorFormulaStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field7;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field8;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field9;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field10;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field11;
    int _field12;
};

struct ChartModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    RepeatedField_27dfe32f _field7;
    struct ChartGridArchive *_field8;
    unsigned int _field9;
    unsigned int _field10;
};

struct ChartProjectedBoundsConverter {
    struct ChartProjectedBoundsSpaces *_field1;
    float _field2;
    _Bool _field3;
    tvec2_84d5962d _field4;
};

struct ChartProjectedBoundsSpaces {
    box_80622335 mChart;
    box_80622335 mOrient;
    box_80622335 mDrawing;
    box_80622335 mLayout;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayout;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
};

struct ChartReferenceLineNonStyleItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct UUID *_field6;
};

struct ChartSceneInfo {
    TSCH3DScene *scene;
    TSCHChartInfo *chartInfo;
    TSCHChartType *chartType;
    TSCHChartSeriesType *seriesType;
    CDStruct_b1c75024 layoutSettings;
};

struct ChartScenePropertyAccessor {
    id _field1;
    id _field2;
};

struct ChartSelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartSelectionPathTypeArchive *_field5;
    struct ChartSelectionPathArchive *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> _field7;
};

struct ChartSelectionPathTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
};

struct ChartSeriesGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[3];
    int _field4;
    struct FormatStructArchive *_field5;
    struct FormatStructArchive *_field6;
    float _field7;
    float _field8;
    struct LineEndArchive *_field9;
    struct LineEndArchive *_field10;
    struct StrokeArchive *_field11;
    struct FormatStructArchive *_field12;
    struct FormatStructArchive *_field13;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field14;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field15;
    int _field16;
    float _field17;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field18;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field19;
    struct LineEndArchive *_field20;
    float _field21;
    float _field22;
    struct LineEndArchive *_field23;
    float _field24;
    int _field25;
    struct ShadowArchive *_field26;
    int _field27;
    float _field28;
    struct StrokeArchive *_field29;
    float _field30;
    int _field31;
    struct StrokeArchive *_field32;
    struct FillArchive *_field33;
    int _field34;
    float _field35;
    int _field36;
    int _field37;
    struct FormatStructArchive *_field38;
    int _field39;
    float _field40;
    struct FormatStructArchive *_field41;
    int _field42;
    int _field43;
    struct ShadowArchive *_field44;
    _Bool _field45;
    _Bool _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
    _Bool _field52;
    int _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    struct StrokeArchive *_field58;
    struct FillArchive *_field59;
    struct StrokeArchive *_field60;
    float _field61;
    int _field62;
    float _field63;
    float _field64;
    basic_string_a1f69cfb *_field65;
    int _field66;
    int _field67;
    float _field68;
    float _field69;
    struct ShadowArchive *_field70;
    _Bool _field71;
    _Bool _field72;
    _Bool _field73;
    int _field74;
    struct StrokeArchive *_field75;
    float _field76;
    int _field77;
    float _field78;
    int _field79;
    int _field80;
    int _field81;
    float _field82;
    int _field83;
};

struct ChartUIState {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
};

struct ChartsNSArrayOfNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedField<double> _field5;
};

struct ChartsNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct ChartsNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
    unsigned int _field7;
    basic_string_a1f69cfb *_field8;
    int _field9;
    int _field10;
    basic_string_a1f69cfb *_field11;
    unsigned int _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned int _field18;
    double _field19;
    RepeatedPtrField_236b8a23 _field20;
    struct IndexSet *_field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    unsigned int _field25;
    basic_string_a1f69cfb *_field26;
    basic_string_a1f69cfb *_field27;
    unsigned int _field28;
};

struct ClassicStylesheetRecordArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field5;
    struct Reference *_field6;
};

struct ClassicThemeRecordArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct Collection;

struct ColorResult {
    _Bool _field1;
    struct Color {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
};

struct ColumnOrRowUuidsInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct IndexedUidsArchive *_field7;
    struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> _field8;
    struct RangeCoordinateArchive *_field9;
    struct UUID *_field10;
    _Bool _field11;
};

struct ColumnStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct ColumnStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ColumnStylePropertiesArchive;

struct ColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ColumnsArchive_EqualColumnsArchive *_field5;
    struct ColumnsArchive_NonEqualColumnsArchive *_field6;
};

struct ColumnsArchive_EqualColumnsArchive;

struct ColumnsArchive_NonEqualColumnsArchive;

struct CommentInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
};

struct CommentStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Date *_field6;
    struct Reference *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
};

struct CompletionTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TokenAttachmentArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct ComponentExternalReferenceInfo {
    long long _field1;
    _Bool _field2;
};

struct ComponentInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    RepeatedField_27dfe32f _field8;
    int _field9;
    RepeatedField_27dfe32f _field10;
    int _field11;
    RepeatedPtrField_1f1a6efb _field12;
    struct RepeatedPtrField<TSP::ComponentDataReference> _field13;
    RepeatedPtrField_c964a194 _field14;
    struct RepeatedPtrField<TSP::FeatureInfo> _field15;
    unsigned long long _field16;
    _Bool _field17;
};

struct ConnectionLineArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
};

struct ConnectionLinePathSourceArchive;

struct ContactShadowArchive;

struct ContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct CopyingFileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
};

struct CopyingOutputStream;

struct CopyingOutputStreamAdaptor {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingOutputStream *_field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    struct scoped_array<unsigned char> _field6;
    int _field7;
    int _field8;
};

struct CurvedShadowArchive;

struct DEPRECATEDChart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct Chart3DLightingModelArchive *_field6;
    basic_string_a1f69cfb *_field7;
    int _field8;
    unsigned int _field9;
};

struct Data {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
};

struct DataAttributes {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 mSize;
    unsigned long long mComponents;
    _Bool mHasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced mSize;
    unsigned long long mComponents;
};

struct DataBufferInfo {
    int componentType;
    unsigned long long components;
    unsigned long long count;
    unsigned long long byteSize;
    unsigned long long componentByteSize;
    unsigned long long elementByteSize;
};

struct DataBufferLevelData {
    void *_field1;
    tvec3_c2818ced _field2;
};

struct DataInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
    basic_string_a1f69cfb *_field10;
    basic_string_a1f69cfb *_field11;
    _Bool _field12;
    int _field13;
    struct DataAttributes *_field14;
    struct EncryptionInfo *_field15;
    basic_string_a1f69cfb *_field16;
};

struct DataMetadata {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
};

struct DataMetadataMap {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> _field5;
};

struct DataReference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
};

struct DataStore {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct HeaderStorage *_field5;
    struct Reference *_field6;
    struct TileStorage *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    unsigned int _field16;
    unsigned int _field17;
    struct TableRBTree *_field18;
    struct TableRBTree *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    unsigned int _field24;
};

struct DatabaseDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    unsigned long long _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct Date {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
};

struct DateCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
};

struct DateNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
};

struct Deprecated_StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    int _field8;
};

struct Deprecated_TableStrokeArchive;

struct Descriptor {
    basic_string_a1f69cfb *_field1;
    basic_string_a1f69cfb *_field2;
    struct FileDescriptor *_field3;
    struct Descriptor *_field4;
    struct MessageOptions *_field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct FieldDescriptor *_field9;
    int _field10;
    struct OneofDescriptor *_field11;
    int _field12;
    struct Descriptor *_field13;
    int _field14;
    struct EnumDescriptor *_field15;
    int _field16;
    struct ExtensionRange *_field17;
    int _field18;
    struct FieldDescriptor *_field19;
};

struct DesktopUILayoutArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct Dictionary {
    struct IdentifierMap _field1;
    struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> _field2;
    struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> _field3;
    struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> _field4;
};

struct DispatchDataInputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    char *_field7;
};

struct DocumentRevision;

struct DoublePoint;

struct DoubleSize;

struct DrawableArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct GeometryArchive *_field5;
    struct Reference *_field6;
    struct ExteriorTextWrapArchive *_field7;
    basic_string_a1f69cfb *_field8;
    struct Reference *_field9;
    basic_string_a1f69cfb *_field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    _Bool _field12;
    _Bool _field13;
};

struct DrawableAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    unsigned int _field6;
    float _field7;
    unsigned int _field8;
    float _field9;
};

struct DrawableSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct DropShadowArchive;

struct DurationNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>>;

struct EQKitCacheLRUCounter {
    unsigned long long _field1;
};

struct EQKitLayoutContext {
    CDUnknownFunctionPointerType *_field1;
    struct Info _field2;
    double _field3;
    double _field4;
    double _field5;
    id _field6;
    struct Collection *_field7;
    struct __CTFont *_field8;
    struct CGColor *_field9;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field10;
    CDStruct_d6fcdff4 _field11;
};

struct EQKitLayoutElementaryStack;

struct EQKitLayoutManager {
    id _field1;
    double _field2;
    struct CGSize _field3;
    struct __CFString *_field4;
    struct Manager *_field5;
    struct Config *_field6;
    struct EQKitLayoutContext _field7;
    struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> _field8;
    struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> _field9;
    struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> _field10;
    struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> _field11;
    struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field12;
    struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> _field13;
    struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> _field14;
    struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> _field15;
    struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> _field16;
    id _field17;
    struct AttributeCollection *_field18;
};

struct EQKitLayoutRow;

struct EQKitLayoutStretchedOperator;

struct EQKitLayoutTable;

struct EdgeDetectionParameters {
    _Bool detectSilhouetteEdges;
    _Bool detectSharpEdges;
    float sharpEdgeThreshold;
};

struct EdgeInsetsArchive;

struct EditableBezierPathSourceArchive;

struct ElementRenderPass {
    int _field1;
};

struct EmptyExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct EnableClipDistances {
    struct array<bool, 8> states;
};

struct EncryptionInfo;

struct Entry;

struct EnumDescriptor;

struct ErrorCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    basic_string_a1f69cfb *_field7;
    double _field8;
};

struct ExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct ExtensionRange;

struct ExtensionSet {
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> _field1;
};

struct ExteriorTextWrapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    _Bool _field10;
};

struct ExternalLabelAttribute {
    id _field1;
    tvec2_84d5962d _field2;
};

struct ExternalReferenceCompletionInfo;

struct ExternalReferenceInfo {
    long long _field1;
    struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> _field2;
};

struct FieldDescriptor;

struct FieldInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct FieldPath *path_;
    int type_;
    int rule_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
};

struct FieldPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    int _field6;
};

struct FileDescriptor;

struct FileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingFileOutputStream _field2;
    struct CopyingOutputStreamAdaptor _field3;
};

struct FillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Color *_field6;
    struct GradientArchive *_field7;
    struct ImageFillArchive *_field8;
};

struct FilterRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaPredicateArchive *_field5;
    _Bool _field6;
};

struct FilterSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    struct RepeatedPtrField<TST::FilterRuleArchive> _field8;
    RepeatedField_27dfe32f _field9;
    RepeatedField_12b14242 _field10;
};

struct FinalizeHandlerItem {
    vector_3c415888 _field1;
    long long _field2;
    struct vector<long long, std::__1::allocator<long long>> _field3;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
};

struct FindLinesContext {
    _Bool _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct __CFArray *_field4;
    _Bool _field5;
    int _field6;
};

struct FlowInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned int _field7;
};

struct FlowInfoContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned int _field6;
};

struct FormatStructArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    unsigned int _field15;
    unsigned int _field16;
    basic_string_a1f69cfb *_field17;
    unsigned int _field18;
    unsigned int _field19;
    basic_string_a1f69cfb *_field20;
    double _field21;
    unsigned int _field22;
    unsigned int _field23;
    double _field24;
    double _field25;
    double _field26;
    unsigned int _field27;
    unsigned int _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    unsigned int _field37;
    RepeatedPtrField_236b8a23 _field38;
    struct IndexSet *_field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    struct UUID *_field44;
    _Bool _field45;
    int _field46;
};

struct FormulaArchive;

struct FormulaEqualsTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
};

struct FormulaPredicateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FormulaArchive *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct FormulaRewriteSpecArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct ColumnOrRowUuidsInfoArchive *_field7;
    struct ColumnOrRowUuidsInfoArchive *_field8;
    struct RegionMovedInfoArchive *_field9;
    int _field10;
    _Bool _field11;
    struct RegionInfoArchive *_field12;
    struct RewriteTableIDInfoArchive *_field13;
    struct TableTransposeInfoArchive *_field14;
    struct MergeOriginMovedArchive *_field15;
    struct MergeSourceArchive *_field16;
};

struct FormulaStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> _field5;
    unsigned int _field6;
};

struct FrameArchive;

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    _Bool linearFilter;
    _Bool discardHint;
};

struct FreehandDrawingToolkitUIState {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    _Bool _field15;
};

struct FrustumRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FrustumSlice {
    line_190fbfc7 _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
};

struct FunctionEndNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct FunctionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct GLSingleState {
    unsigned int target;
    struct UpdatableValue<unsigned int> handle;
};

struct GQHPathEndPointInfo {
    _Bool _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    int _field6;
};

struct GQZEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct GalleryItem {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    struct ImageAdjustmentsArchive *_field8;
    struct DataReference *_field9;
    struct DataReference *_field10;
    struct Reference *_field11;
    basic_string_a1f69cfb *_field12;
    float _field13;
};

struct GeometryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct Size *_field6;
    unsigned int _field7;
    float _field8;
};

struct GeometryArrays {
    unsigned int offset;
    unsigned int count;
    unsigned int capoffset;
    unsigned int capcount;
};

struct GeometryResource {
    int _field1;
    struct ObjcSharedPtr<TSCH3DResource> _field2;
    struct GeometryArrays _field3;
    struct ObjcSharedPtr<TSCH3DGeometry> _field4;
};

struct GradientArchive;

struct GradientArchive_GradientStop {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
};

struct GridRow {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCH::GridValue> _field5;
};

struct GridValue {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct GroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct DrawableArchive *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
};

struct HeaderStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    unsigned int _field6;
};

struct HighlightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
};

struct HyperlinkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct IdentifierMap {
    unsigned short _field1;
    struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
};

struct IdentifierNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct ImageAdjustmentsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    _Bool _field17;
    _Bool _field18;
};

struct ImageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct DrawableArchive *_field6;
    struct DataReference *_field7;
    struct Reference *_field8;
    struct Size *_field9;
    struct Reference *_field10;
    struct DataReference *_field11;
    struct DataReference *_field12;
    struct Size *_field13;
    struct Path *_field14;
    struct ImageAdjustmentsArchive *_field15;
    unsigned int _field16;
    _Bool _field17;
    struct DataReference *_field18;
    struct DataReference *_field19;
    struct DataReference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    struct Path *_field24;
    struct Attribution *_field25;
};

struct ImageFillArchive;

struct ImportWarningSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ImportWarningSetArchive_FormulaImportWarning *_field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    basic_string_a1f69cfb *_field19;
};

struct ImportWarningSetArchive_FormulaImportWarning;

struct ImportWarningSetByCoordinateMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> _field5;
};

struct InNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct IndexSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
};

struct IndexedUidsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> _field5;
};

struct Info {
    unsigned long long _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    double _field6;
    int _field7;
    struct __CFString *_field8;
};

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    _Bool _field5;
};

struct LabelsMeshRendererLabelInfo {
    id _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
    tvec3_17f03ce0 _field4;
    float _field5;
    tvec2_84d5962d _field6;
    tvec2_84d5962d _field7;
    struct ExternalLabelAttribute *_field8;
};

struct LargeArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
};

struct LargeArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
};

struct LargeDictionary {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_c67bb210 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
};

struct LargeDictionarySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    _Bool _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
};

struct LargeNumberArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeNumberArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    struct RepeatedField<double> _field6;
};

struct LargeObjectArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeObjectArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct LargeStringArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeStringArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> _field6;
};

struct LargeStringToObjectDictionary {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeDictionary *_field5;
};

struct LargeStringToObjectDictionarySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeDictionarySegment *_field5;
    struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> _field6;
};

struct LargeUUIDArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArray *_field5;
};

struct LargeUUIDArraySegment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct LargeArraySegment *_field5;
    RepeatedPtrField_bfda3daa _field6;
};

struct LayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CellRange *_field5;
    struct CellID *_field6;
    struct Size *_field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    struct Size *_field11;
    unsigned int _field12;
};

struct LegendGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    int _field6;
    float _field7;
    struct ShadowArchive *_field8;
    struct StrokeArchive *_field9;
};

struct LegendModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct RectArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
};

struct LetNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct LineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Path *_field5;
    struct Point *_field6;
    int _field7;
    _Bool _field8;
    basic_string_a1f69cfb *_field9;
};

struct LineExtrusionGeometryXRangeInfo {
    tvec2_84d5962d _field1;
    _Bool _field2;
};

struct LineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
};

struct ListNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
};

struct ListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    RepeatedField_c2891982 _field6;
    RepeatedField_324622b8 _field7;
    RepeatedField_324622b8 _field8;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field9;
    RepeatedField_c2891982 _field10;
    RepeatedPtrField_236b8a23 _field11;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct ShadowArchive *_field17;
    struct Color *_field18;
    basic_string_a1f69cfb *_field19;
    RepeatedField_12b14242 _field20;
    int _field21;
};

struct Lookup;

struct MaskArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct PathSourceArchive *_field6;
};

struct MaterialShaderVariables {
    TSCH3DShaderVariable *texture;
    TSCH3DShaderVariable *intensity;
    TSCH3DShaderVariable *factor;
    TSCH3DShaderVariable *textureColor;
    TSCH3DShaderVariable *color;
    TSCH3DShaderVariable *modulation;
    TSCH3DShaderVariable *texcoords;
    TSCH3DShaderVariable *textureMatrix;
};

struct MediaStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct MediaStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct MediaStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct ShadowArchive *_field6;
    struct ReflectionArchive *_field7;
    float _field8;
};

struct MergeOperationArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::CellUIDRangeArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    RepeatedField_27dfe32f _field7;
    int _field8;
};

struct MergeOriginMovedArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedField_27dfe32f _field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
    RepeatedField_27dfe32f _field8;
};

struct MergeOwnerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct CFUUIDArchive *_field5;
    struct FormulaStoreArchive *_field6;
};

struct MergeSourceArchive;

struct MeshData {
    id _field1;
    id _field2;
};

struct Message {
    CDUnknownFunctionPointerType *_field1;
};

struct MessageInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    unsigned int type_;
    unsigned int length_;
    struct RepeatedPtrField<TSP::FieldInfo> field_infos_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    RepeatedField_27dfe32f diff_version_;
    int _diff_version_cached_byte_size_;
    struct FieldPath *diff_field_path_;
    RepeatedPtrField_5867f37b fields_to_remove_;
    unsigned int base_message_index_;
};

struct MessageOptions;

struct MovieArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
    float _field10;
    float _field11;
    float _field12;
    unsigned int _field13;
    int _field14;
    float _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    struct DataReference *_field21;
    struct DataReference *_field22;
    unsigned int _field23;
    unsigned int _field24;
    struct Reference *_field25;
    struct Reference *_field26;
    struct Reference *_field27;
    struct Reference *_field28;
    struct Size *_field29;
    struct Size *_field30;
    struct Attribution *_field31;
};

struct MovieSegmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DataReference *_field5;
    double _field6;
    struct Reference *_field7;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSMutableSet {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSObjectComparator<GQDWrapPoint> {
    SEL _field1;
};

struct NSString {
    Class _field1;
};

struct NSThread {
    Class _field1;
    id _field2;
    unsigned char _field3[44];
};

struct NativeContentDescription {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
};

struct NoteArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct NumberCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    basic_string_a1f69cfb *_field6;
    int _field7;
    _Bool _field8;
    struct FormatStructArchive *_field9;
};

struct NumberNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    double _field6;
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct ObjcSharedPtr<NSMutableIndexSet> {
    id _field1;
};

struct ObjcSharedPtr<NSMutableSet> {
    id _field1;
};

struct ObjcSharedPtr<NSObject> {
    NSObject *mValue;
};

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct ObjcSharedPtr<TSCEError> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DGeometry> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DResource> {
    id _field1;
};

struct ObjectBounds {
    box_a3bd9649 mBounds;
    box_a3bd9649 mProjected;
    box_a3bd9649 m2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> mBoxes;
};

struct ObjectInfo {
    struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> _field1;
};

struct ObjectLocation {
    long long _field1;
    long long _field2;
};

struct ObjectSerializationDirectory {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> entries_;
};

struct ObjectSerializationMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *source_document_uuid_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
    struct Reference *data_metadata_map_;
};

struct ObjectStackEntry;

struct ObjectState {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> mAttributes;
    struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> mTextures;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
};

struct ObjectStateIdentifier {
    _Bool _field1;
    long long _field2;
    _Bool _field3;
    id _field4;
};

struct ObjectTransforms {
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field1;
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field2;
};

struct OneofDescriptor;

struct Operation {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    _Bool _field6;
};

struct OperationTransformer {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSK::Operation> _field5;
    _Bool _field6;
};

struct OperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    unsigned int _field6;
};

struct OwnerFormulaMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> _field5;
};

struct OwnerUIDMapperArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct UUID *_field6;
    struct UUID *_field7;
    struct UUID *_field8;
    struct UUID *_field9;
    struct UUID *_field10;
    struct UUID *_field11;
    struct UUID *_field12;
    struct UUID *_field13;
    struct UUID *_field14;
    struct UUID *_field15;
    struct UUID *_field16;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct PODType<unsigned char>;

struct PODType<unsigned short>;

struct PackageMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    unsigned long long last_object_identifier_;
    struct DocumentRevision *revision_;
    struct RepeatedPtrField<TSP::ComponentInfo> components_;
    RepeatedPtrField_fe6aca30 datas_;
    RepeatedField_27dfe32f read_version_;
    int _read_version_cached_byte_size_;
    RepeatedField_27dfe32f write_version_;
    int _write_version_cached_byte_size_;
    RepeatedField_27dfe32f file_format_version_;
    int _file_format_version_cached_byte_size_;
    unsigned long long save_token_;
    struct Reference *data_metadata_map_;
    int preferred_package_type_;
};

struct PaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct PageHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::TargetHintArchive> _field5;
    struct Range *_field6;
    struct Range *_field7;
    struct Reference *_field8;
    int _field9;
    unsigned int _field10;
    struct Reference *_field11;
    struct RepeatedPtrField<TP::AnchorPosArchive> _field12;
    struct TopicNumberHintsArchive *_field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    RepeatedPtrField_bfda3daa _field15;
    RepeatedPtrField_a0d2dbe7 _field16;
    unsigned int _field17;
    int _field18;
    struct RepeatedPtrField<TP::TargetHintArchive> _field19;
    struct RepeatedPtrField<TP::TopicNumberHintsArchive> _field20;
    unsigned int _field21;
    unsigned int _field22;
};

struct ParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct CharacterStylePropertiesArchive *_field6;
    struct ParagraphStylePropertiesArchive *_field7;
    unsigned int _field8;
};

struct ParagraphStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    int _field4;
    float _field5;
    basic_string_a1f69cfb *_field6;
    struct Color *_field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    float _field12;
    float _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct LineSpacingArchive *_field18;
    int _field19;
    float _field20;
    struct Point *_field21;
    float _field22;
    float _field23;
    struct TabsArchive *_field24;
    float _field25;
    unsigned int _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    int _field31;
    basic_string_a1f69cfb *_field32;
    struct StrokeArchive *_field33;
    basic_string_a1f69cfb *_field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    int _field39;
    struct Reference *_field40;
    struct Reference *_field41;
    _Bool _field42;
    int _field43;
};

struct ParagraphStylePropertyChangeSetArchive;

struct PasteboardMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    basic_string_a1f69cfb *app_name_;
    RepeatedPtrField_fe6aca30 datas_;
    struct UUID *source_document_uuid_;
    struct Reference *data_metadata_map_;
};

struct PathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct PointPathSourceArchive *_field5;
    struct ScalarPathSourceArchive *_field6;
    struct BezierPathSourceArchive *_field7;
    struct CalloutPathSourceArchive *_field8;
    struct ConnectionLinePathSourceArchive *_field9;
    struct EditableBezierPathSourceArchive *_field10;
    basic_string_a1f69cfb *_field11;
    basic_string_a1f69cfb *_field12;
    _Bool _field13;
    _Bool _field14;
};

struct PatternedStrokeArchive;

struct PencilAnnotationSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct PencilAnnotationStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct DataReference *_field6;
    struct DataReference *_field7;
    int _field8;
    int _field9;
    struct Path *_field10;
    struct Point *_field11;
    struct Size *_field12;
    struct Size *_field13;
    double _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    struct Color *_field17;
};

struct PlaceholderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    int _field6;
};

struct PlaceholderSmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
    _Bool _field7;
};

struct Point {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    float _field6;
};

struct PointPathSourceArchive;

struct PopUpMenuModel {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> _field5;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field6;
};

struct PostfixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PrefilteredLineVertexProperties {
    tvec3_17f03ce0 *_field1;
    tvec3_17f03ce0 *_field2;
    tvec4_ac57c72d *_field3;
    int _field4;
    box_80622335 _field5;
};

struct PrefixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct OperatorNodeArchive *_field5;
};

struct PrimitiveInfo {
    int _field1;
    int _field2;
    int _field3;
    id _field4;
};

struct PropertyValueStorageContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4[1];
    int _field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct SparseReferenceArray *_field10;
    struct SparseReferenceArray *_field11;
    struct SparseReferenceArray *_field12;
    struct SparseReferenceArray *_field13;
    struct SparseReferenceArray *_field14;
    struct SparseReferenceArray *_field15;
    struct SparseReferenceArray *_field16;
    struct SparseReferenceArray *_field17;
};

struct PrototypeForUndoMasterChangeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct UUID *_field6;
    RepeatedPtrField_bfda3daa _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    RepeatedPtrField_236b8a23 _field9;
};

struct QuantizationConfig {
    unsigned long long _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct Range {
    tvec2_84d5962d _field1;
    _Bool _field2;
};

struct RangeCoordinateArchive;

struct RangeReferenceArchive;

struct RecordingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct Reference *_field6;
    double _field7;
    struct Date *_field8;
    struct RecordingSyncState *_field9;
    int _field10;
};

struct RecordingEventArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    double _field5;
    struct RecordingNavigationEventArchive *_field6;
    struct RecordingLaserEventArchive *_field7;
    struct RecordingPauseEventArchive *_field8;
    struct RecordingMovieEventArchive *_field9;
};

struct RecordingEventTrackArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<KN::RecordingEventArchive> _field6;
};

struct RecordingLaserEventArchive;

struct RecordingMovieEventArchive;

struct RecordingMovieTrackArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<KN::MovieSegmentArchive> _field5;
    _Bool _field6;
};

struct RecordingNavigationEventArchive;

struct RecordingPauseEventArchive;

struct RecordingSyncState {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    _Bool _field6;
};

struct RectArchive;

struct Reference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    int _field6;
    _Bool _field7;
};

struct ReferenceCompletionInfo;

struct ReferenceLineGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartsNSNumberDoubleArchive *_field5;
    basic_string_a1f69cfb *_field6;
    struct ShadowArchive *_field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct StrokeArchive *_field12;
    int _field13;
    int _field14;
};

struct ReferenceNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    struct RangeReferenceArchive *_field6;
    basic_string_a1f69cfb *_field7;
    struct UUID *_field8;
    struct CellUIDArchive *_field9;
    struct CellUIDArchive *_field10;
    unsigned int _field11;
};

struct ReferencePrinter {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> *_field10;
    struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> _field11;
};

struct ReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
};

struct RegionInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UUID *_field5;
    struct IndexedUidsArchive *_field6;
    struct IndexedUidsArchive *_field7;
};

struct RegionMovedInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RegionInfoArchive *_field5;
    struct RegionInfoArchive *_field6;
    struct RegionInfoArchive *_field7;
    _Bool _field8;
    _Bool _field9;
};

struct RemoteDataSpecifierArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    unsigned int _field6;
    unsigned int _field7;
    double _field8;
};

struct RemoteDataValueMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> _field5;
};

struct RenderElementInfo {
    id _field1;
    id _field2;
    id _field3;
    tvec2_3b141483 _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct RenderHints {
    struct TextureSizeHint textureSizeHint;
};

struct RenderState {
    _Bool mBlend;
    int blendMode;
    _Bool depthTest;
    _Bool depthMask;
    _Bool culling;
    _Bool cullBack;
    _Bool polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct RenderbufferAllocatorInfo {
    struct FramebufferAttributes *_field1;
    tvec2_3b141483 *_field2;
    id _field3;
};

struct RepeatedExternalReferenceCompletionInfo;

struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<double> {
    double *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedPtrField<KN::BuildChunkArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::MovieSegmentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::RecordingEventArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::SlideNodeArchive_SlideSpecificHyperlinkMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::ThemeCustomTimingCurveArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TN::UUIDSheetUIStateDictionaryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::AnchorPosArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::PageHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TargetHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TopicNumberEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TopicNumberHintsArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::ASTNodeArrayArchive_ASTUidTract> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellValueArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::FormulaArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::IndexedUidsArchive_IndexedUid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RemoteDataValueMapArchive_RemoteDataMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteRangeEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::RewriteTableIDInfoArchive_TableIDMapEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DLightArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartUIState> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::GridValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GuideArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::Operation> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentDataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataMetadataMap_DataMetadataMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FeatureInfo> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FieldInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::LargeStringArraySegment_OptionalElement> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::MessageInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectSerializationDirectory_Entry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::Path_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Size> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::StringToObjectDictionaryElement> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellRange> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellUIDRangeArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FilterRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FormulaStoreArchive_FormulaStorePair> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TileStorage_Tile> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::FontFeatureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TabArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct RewriteRangeEntryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    RepeatedPtrField_bfda3daa _field7;
    unsigned int _field8;
};

struct RewriteTableIDInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::RewriteTableIDInfoArchive_TableIDMapEntryArchive> _field5;
};

struct RubyFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct SmartFieldArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct SFUZipEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct ScalarPathSourceArchive;

struct Schemata {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    id _field3;
    id _field4;
};

struct SectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    RepeatedPtrField_a0d2dbe7 _field20;
    float _field21;
    unsigned int _field22;
    unsigned int _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    struct Reference *_field27;
    struct Reference *_field28;
    struct Reference *_field29;
    basic_string_a1f69cfb *_field30;
    struct Reference *_field31;
    struct FillArchive *_field32;
    unsigned int _field33;
};

struct SectionHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::PageHintArchive> _field5;
    unsigned int _field6;
};

struct SelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
};

struct SessionLoadResourceResult {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    id _field4;
    id _field5;
};

struct ShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    float _field7;
    int _field8;
    float _field9;
    _Bool _field10;
    int _field11;
    struct DropShadowArchive *_field12;
    struct ContactShadowArchive *_field13;
    struct CurvedShadowArchive *_field14;
};

struct ShapeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct PathSourceArchive *_field7;
    struct LineEndArchive *_field8;
    struct LineEndArchive *_field9;
    float _field10;
};

struct ShapeInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
};

struct ShapeStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeStyleArchive *_field5;
    struct ShapeStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct ShapeStylePropertyChangeSetArchive;

struct SheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    float _field11;
    struct EdgeInsetsArchive *_field12;
    int _field13;
    int _field14;
    float _field15;
    float _field16;
    struct Reference *_field17;
    struct Reference *_field18;
    struct Reference *_field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    RepeatedPtrField_a0d2dbe7 _field24;
};

struct SheetUIStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    float _field6;
    float _field7;
    struct Point *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct Size *_field13;
    struct Size *_field14;
    struct SelectionPathArchive *_field15;
};

struct ShortcutControllerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> _field5;
};

struct ShowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct SlideTreeArchive *_field7;
    struct Size *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    double _field11;
    int _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    double _field17;
    double _field18;
    struct Reference *_field19;
    struct Reference *_field20;
};

struct ShuffleMappingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct Size;

struct SlideArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct Reference *_field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<KN::BuildChunkArchive> _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    struct TransitionArchive *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    RepeatedPtrField_a0d2dbe7 _field13;
    RepeatedPtrField_a0d2dbe7 _field14;
    struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> _field15;
    basic_string_a1f69cfb *_field16;
    struct GeometryArchive *_field17;
    unsigned int _field18;
    unsigned int _field19;
    struct ShapeStylePropertiesArchive *_field20;
    struct GeometryArchive *_field21;
    unsigned int _field22;
    unsigned int _field23;
    struct ShapeStylePropertiesArchive *_field24;
    struct GeometryArchive *_field25;
    unsigned int _field26;
    unsigned int _field27;
    struct ShapeStylePropertiesArchive *_field28;
    struct Reference *_field29;
    RepeatedPtrField_a0d2dbe7 _field30;
    RepeatedPtrField_a0d2dbe7 _field31;
    basic_string_a1f69cfb *_field32;
    basic_string_a1f69cfb *_field33;
    struct Reference *_field34;
    struct RepeatedPtrField<TSD::GuideArchive> _field35;
    struct Reference *_field36;
    struct Reference *_field37;
    RepeatedPtrField_a0d2dbe7 _field38;
    struct Reference *_field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    int _field44;
};

struct SlideCollectionSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct Reference *_field6;
    struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> _field7;
    struct Range *_field8;
};

struct SlideNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct Reference *_field6;
    RepeatedPtrField_5fb0b506 _field7;
    struct RepeatedPtrField<TSP::Size> _field8;
    RepeatedPtrField_236b8a23 _field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    basic_string_a1f69cfb *_field20;
    basic_string_a1f69cfb *_field21;
    unsigned int _field22;
    unsigned int _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    unsigned int _field28;
    struct RepeatedPtrField<KN::SlideNodeArchive_SlideSpecificHyperlinkMapEntry> _field29;
    struct Reference *_field30;
    RepeatedPtrField_a0d2dbe7 _field31;
};

struct SlideStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StyleArchive *_field5;
    struct SlideStylePropertiesArchive *_field6;
    unsigned int _field7;
};

struct SlideStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct TransitionAttributesArchive *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct SlideTreeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
};

struct SmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
};

struct SmartStrokeArchive;

struct SnappySource {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char *_field8;
};

struct SortRuleReferenceTrackerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
};

struct SparseReferenceArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseReferenceArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDArray_Entry> _field5;
    unsigned int _field6;
};

struct SparseUUIDPathArray {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::SparseUUIDPathArray_Entry> _field5;
    unsigned int _field6;
};

struct Spec {
    struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> _field1;
    unsigned int _field2;
};

struct StateSpec {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    int _field4;
    struct Action *_field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    struct ActionFinder *_field9;
};

struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    unsigned long long mIndex;
    struct RenderState mCurrent;
    struct RenderState mStack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    unsigned long long mIndex;
    tmat4x4_3074befe mCurrent;
    tmat4x4_3074befe mStack[8];
};

struct StockArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    double _field6;
    struct RepeatedPtrField<TSCE::StockArchive_AttributeEntry> _field7;
};

struct StringCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct FormatStructArchive *_field6;
    _Bool _field7;
};

struct StringNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
};

struct StrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Color *_field5;
    float _field6;
    int _field7;
    int _field8;
    float _field9;
    struct StrokePatternArchive *_field10;
    struct SmartStrokeArchive *_field11;
    struct FrameArchive *_field12;
    struct PatternedStrokeArchive *_field13;
};

struct StrokePatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    RepeatedField_324622b8 _field7;
    unsigned int _field8;
};

struct StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StrokeArchive *_field5;
    struct StrokeArchive *_field6;
    struct StrokeArchive *_field7;
    int _field8;
};

struct StrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> _field5;
    struct RepeatedPtrField<TST::StrokePresetDataArchive> _field6;
    int _field7;
};

struct StrokeSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct StructuredTextImportRecord {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct StructuredTextImportSettings *_field5;
    basic_string_a1f69cfb *_field6;
    double _field7;
    basic_string_a1f69cfb *_field8;
    unsigned long long _field9;
    struct CellRegion *_field10;
    unsigned long long _field11;
    unsigned long long _field12;
    float _field13;
};

struct StructuredTextImportSettings {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    int _field6;
    RepeatedPtrField_236b8a23 _field7;
    RepeatedPtrField_236b8a23 _field8;
    RepeatedPtrField_236b8a23 _field9;
    RepeatedPtrField_236b8a23 _field10;
    struct IndexSet *_field11;
    unsigned long long _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct StyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
};

struct StyleDiffArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CharacterStylePropertyChangeSetArchive *_field6;
    struct ParagraphStylePropertyChangeSetArchive *_field7;
    struct ShapeStylePropertyChangeSetArchive *_field8;
};

struct StyleOwnerPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct StyleSwapUndoTupleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct UUID *_field10;
};

struct StyleSwapUndoTuplesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a96af6e2 _field5;
};

struct StylesheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field6;
    struct Reference *_field7;
    struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> _field8;
    _Bool _field9;
    _Bool _field10;
};

struct TNChartRangeNode {
    struct TNChartRangeNode *_field1;
    struct TSCERangeCoordinate _field2;
};

struct TOCAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableAttachmentArchive *_field5;
};

struct TOCEntryInstanceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct Reference *_field11;
    basic_string_a1f69cfb *_field12;
    unsigned int _field13;
};

struct TOCEntryStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ParagraphStyleArchive *_field5;
    struct TOCEntryStylePropertiesArchive *_field6;
};

struct TOCEntryStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    _Bool _field6;
    _Bool _field7;
};

struct TOCInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ShapeInfoArchive *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    RepeatedPtrField_c67bb210 _field8;
};

struct TOCLayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
};

struct TOCSettingsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> _field6;
    unsigned int _field7;
};

struct TPSectionEnumerator {
    id _field1;
    unsigned long long _field2;
    struct _NSRange _field3;
    struct _NSRange _field4;
};

struct TSCEASTElement;

struct TSCEASTElementWithChildren;

struct TSCEASTNodeArray {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
};

struct TSCEASTNodeArrayReader;

struct TSCEASTNodeArrayReferenceIteratorState {
    struct TSCEASTNodeReferenceExtractionFunction _field1;
    struct TSCECReference _field2;
};

struct TSCEASTNodeCrossTableCellReference {
    int row;
    short column;
    unsigned int rowIsAbsolute:1;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeCrossTableColumnReference {
    short column;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeCrossTableRowReference {
    int row;
    unsigned int rowIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
};

struct TSCEASTNodeReferenceExtractionFunction {
    CDUnknownFunctionPointerType *_field1;
    struct TSCEASTNodeArray *_field2;
    struct TSCEASTNodeArray _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    struct TSCEASTNodeArrayReader *_field7;
    struct TSCEASTNodeArrayReader *_field8;
    id _field9;
    struct TSCEFormulaContainingCell _field10;
    id _field11;
    _Bool _field12;
    struct TSCEASTNodeArray *_field13;
    struct vector<TSCEASTElementWithChildren *, std::__1::allocator<TSCEASTElementWithChildren *>> _field14;
    vector_06e666a8 _field15;
    struct vector<TSCEASTElement *, std::__1::allocator<TSCEASTElement *>> _field16;
    struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> _field17;
    struct vector<TSCECReference, std::__1::allocator<TSCECReference>> _field18;
    _Bool _field19;
    _Bool _field20;
    struct pair<TSCECReference, bool> _field21;
};

struct TSCEAbstractVector;

struct TSCEBitGrid {
    struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> _tiles;
    unsigned long long _count;
    unsigned long long _lastTileFoundAtIndex;
};

struct TSCEBitGridTile;

struct TSCEBitGridTransaction {
    struct TSCEBitGrid *_field1;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field2;
    struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> _field3;
};

struct TSCEBooleanValue {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct TSCECReference {
    unsigned short referenceType;
    struct TSCECellRef cellRef;
    struct TSCERangeRef rangeRef;
    struct TSCESpanningRangeRef spanningRangeRef;
    UUIDData_5fbc143e tableUID;
    UUIDData_5fbc143e uuidValue;
};

struct TSCECellRandSeed {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct TSCECellRef {
    struct TSUCellCoord coordinate;
    UUIDData_5fbc143e tableUID;
};

struct TSCEDateValue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSCEFormat _field3;
};

struct TSCEDependencyTracker {
    struct _opaque_pthread_mutex_t _field1;
    id _field2;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> _field3;
    unordered_set_c6a929bd _field4;
    struct TSCEIDMap _field5;
    _Bool _field6;
    _Bool _field7;
    struct _opaque_pthread_mutex_t _field8;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field9;
    unordered_set_c4d0cfce _field10;
    struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field11;
    struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> _field12;
    struct TSCECellRef _field13;
    struct _opaque_pthread_mutex_t _field14;
    unordered_set_7ec2a700 _field15;
};

struct TSCEErrorValue {
    CDUnknownFunctionPointerType *_field1;
    struct ObjcSharedPtr<TSCEError> _field2;
};

struct TSCEEvaluationContext {
    struct TSCEEvaluationStack _field1;
    id _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    struct TSCEWarningReportingContext _field7;
    UUIDData_5fbc143e _field8;
    struct TSUCellCoord _field9;
    struct TSCEValueBindingEnvironment _field10;
    struct TSCESymbolTable _field11;
    id _field12;
    _Bool _field13;
    struct TSCEReferenceSet _field14;
    struct TSCERandGenerator *_field15;
    id _field16;
};

struct TSCEEvaluationStack {
    vector_a1208d01 _field1;
    int _field2;
};

struct TSCEFormat {
    int mFormatType;
    _Bool mIsImplicitFormat;
    void *mData;
};

struct TSCEFormula {
    struct TSCEASTNodeArray *mASTNodeArray;
    struct TSCEFormulaTranslationFlags mTranslationFlags;
    UUIDData_5fbc143e _hostTableUID;
    UUIDData_5fbc143e _hostColumnUID;
    UUIDData_5fbc143e _hostRowUID;
};

struct TSCEFormulaContainingCell {
    UUIDData_5fbc143e _field1;
    struct TSUCellCoord _field2;
    UUIDData_5fbc143e _field3;
    struct TSUCellCoord _field4;
    _Bool _field5;
    _Bool _field6;
};

struct TSCEFormulaCreator {
    CDUnknownBlockType _field1;
};

struct TSCEFormulaTranslationFlags {
    unsigned int mExcelImportTranslation:1;
    unsigned int mNumberToDateCoercionRemovalTranslation:1;
    unsigned int mContainsUidFormReferences:1;
};

struct TSCEIDAllocator<unsigned short> {
    unsigned short _field1;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> _field2;
};

struct TSCEIDMap {
    struct _opaque_pthread_mutex_t _field1;
    struct TSCEIDAllocator<unsigned short> _field2;
    struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> _field3;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> _field4;
    struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> _field5;
    struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> _field6;
};

struct TSCEInternalCellReference {
    struct TSUCellCoord _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct TSCENamedReferenceTrieNode {
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> _trackedReferencesByOwner;
    struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> _children;
};

struct TSCENumberValue {
    CDUnknownFunctionPointerType *_vptr$TSCEAbstractValue;
    double _double;
    int _baseUnits[1];
    struct TSCEFormat _format;
    _Bool _isUnitlessZero;
};

struct TSCERandGenerator {
    struct TSCECellRandSeed _field1;
    struct {
        struct CC_SHA1state_st _field1;
        unsigned char _field2[20];
        unsigned char _field3[20];
        unsigned int _field4;
    } _field2;
};

struct TSCERangeCoordinate {
    struct TSUCellCoord mTopLeft;
    struct TSUCellCoord mBottomRight;
};

struct TSCERangeRef {
    struct TSCERangeCoordinate range;
    UUIDData_5fbc143e tableUID;
};

struct TSCEReferenceSet {
    struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> _field1;
    unordered_set_c6a929bd _field2;
    unordered_set_c6a929bd _field3;
    unordered_set_c6a929bd _field4;
    struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> _field5;
    struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> _field6;
    struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> _field7;
    struct TSCEDependencyTracker *_field8;
};

struct TSCEReferenceValue {
    CDUnknownFunctionPointerType *_field1;
    struct TSCETableReference _field2;
    struct TSUCellCoord _field3;
    struct shared_ptr<TSCEValue> _field4;
    _Bool _field5;
    _Bool _field6;
    unsigned char _field7;
    _Bool _field8;
    struct TSCEWarningReportingContext *_field9;
};

struct TSCERegionNode {
    unsigned long long _field1;
    struct TSCERegionNode *_field2;
    void *_field3;
};

struct TSCERelativeCellRef {
    struct {
        int row;
        short column;
    } relativeCoord;
    UUIDData_5fbc143e tableUID;
    unsigned int columnIsAbsolute:1;
    unsigned int rowIsAbsolute:1;
    unsigned int isSpanningColumn:1;
    unsigned int isSpanningRow:1;
};

struct TSCESpanningRangeRef {
    struct TSCERangeRef rangeRef;
    unsigned char rangeContext;
};

struct TSCEStringValue {
    CDUnknownFunctionPointerType *_field1;
    struct ObjcSharedPtr<NSString> _field2;
    struct TSCEFormat _field3;
};

struct TSCESymbolTable {
    id _field1;
    unsigned int _field2;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> _field3;
    struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> _field4;
    struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> _field5;
};

struct TSCETableReference {
    id _field1;
    UUIDData_5fbc143e _field2;
    struct TSUCellCoord _field3;
    struct TSUCellCoord _field4;
};

struct TSCETableReferenceVector {
    struct TSCETableReference _field1;
    id _field2;
    struct TSCERangeCoordinate _field3;
};

struct TSCETaggedDouble;

struct TSCETaggedDoubleList {
    struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> _list;
    unsigned long long _startIdx;
    unsigned long long _size;
};

struct TSCEValue {
    unsigned long long mBuff[10];
    int mType;
};

struct TSCEValueBindingEnvironment {
    struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> _field1;
    struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> _field2;
};

struct TSCEVector {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSCEFormat _field3;
};

struct TSCEVectorIndexPair {
    unsigned short column;
    unsigned short row;
};

struct TSCEWarningReportingContext {
    _Bool _field1;
    _Bool _field2;
    struct ObjcSharedPtr<NSMutableSet> _field3;
};

struct TSCH3DChartRotationLimit {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    struct CGSize layoutSize;
    struct CGSize requestLayoutSize;
    struct CGSize chartBodyLayoutSize;
    struct CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_b1c75024 layoutSettings;
    _Bool forcedValid;
};

struct TSCH3DGLTextureFormat {
    int _field1;
};

struct TSCH3DScenePart {
    id _field1;
    id _field2;
};

struct TSCH3DShaderType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopeType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> mScopes;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct TSCHChartPieLabelGeometries {
    struct TSCHChartPieLabelGeometry _field1;
    struct TSCHChartPieLabelGeometry _field2;
};

struct TSCHChartPieLabelGeometry {
    struct CGAffineTransform _field1;
    struct CGSize _field2;
    struct CGRect _field3;
    struct CGRect _field4;
};

struct TSCHChartPieLabelRects {
    struct CGRect _field1;
    struct CGRect _field2;
};

struct TSCHChartPieWedgeElementLayoutSystem {
    long long coordinateSpace;
    struct CGPoint centerPoint;
};

struct TSCHLegendAnchorLine {
    struct CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSCHTextLayoutResults {
    struct CGRect _field1;
    double _field2;
    _Bool _field3;
};

struct TSDBrushVertexData;

struct TSTCSENodeData {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct TSTCellReorganizePopupInfo {
    unsigned int _field1;
    long long _field2;
};

struct TSTCellReorganizeValue {
    unsigned int :8;
    unsigned int :8;
    union {
        double _field1;
        _Bool _field2;
        unsigned int _field3;
        unsigned int _field4;
        struct TSTCellReorganizePopupInfo _field5;
    } _field1;
};

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
};

struct TSTCellUID {
    UUIDData_5fbc143e _column;
    UUIDData_5fbc143e _row;
};

struct TSTCellUIDRange {
    vector_4dc5f307 _field1;
    vector_4dc5f307 _field2;
};

struct TSTColumnOrRowMap {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    _Bool _field4;
};

struct TSTDurationWrapper {
    double timeInterval;
    CDStruct_b1177b60 durationFormat;
};

struct TSTImportFormulaWarning {
    long long mType;
    NSString *mOriginalFormula;
    NSString *mSupplementaryText;
};

struct TSTImportWarningSetCellWarningFlags {
    unsigned int mCondFormatAboveAvgEqualAverageImportWarning:1;
    unsigned int mCondFormatAboveAvgStdDevImportWarning:1;
    unsigned int mCondFormatComplexFormulaImportWarning:1;
    unsigned int mCondFormatContainsErrorsImportWarning:1;
    unsigned int mCondFormatExprImportWarning:1;
    unsigned int mCondFormatNotContainsErrorsImportWarning:1;
    unsigned int mCondFormatParametersNotAllTheSameTypeImportWarning:1;
    unsigned int mCondFormatStopIfTrueImportWarning:1;
    unsigned int mCondFormatUnsupportedOperatorImportWarning:1;
    unsigned int mCondFormatUnsupportedStylingImportWarning:1;
    unsigned int mCondFormatUnsupportedTimePeriodImportWarning:1;
    unsigned int mUnsupportedConditionalFormatImportWarning:1;
    unsigned int mUnsupportedDataFormatImportWarning:1;
};

struct TSTSimpleRange {
    long long origin;
    unsigned long long length;
};

struct TSTStrokeLayerRun;

struct TSTTableRBTreeNode_s {
    unsigned short _field1;
    unsigned short _field2;
    struct TSTTableRBTreeNode_s *_field3;
    struct TSTTableRBTreeNode_s *_field4;
    struct TSTTableRBTreeNode_s *_field5;
    char _field6;
};

struct TSUCellCoord {
    unsigned short row;
    unsigned char column;
    unsigned char reserved;
};

struct TSUCellRect {
    struct TSUCellCoord origin;
    struct {
        unsigned short numberOfColumns;
        unsigned short numberOfRows;
    } size;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUOpstat_s {
    _Bool running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSUPointerKeyDictionary {
    Class _field1;
    struct __CFDictionary *_field2;
};

struct TSWPAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
};

struct TSWPAttributeEnumerator {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeArray *_field5;
    _Bool _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct TSWPAttributeRecord _field9;
};

struct TSWPAttributeRecord {
    unsigned long long _field1;
    id _field2;
    struct TSWPParagraphData _field3;
};

struct TSWPChangeAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    _Bool _field9;
    id _field10;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
    struct CGColor *_field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct _NSRange _field18;
    id _field19;
    id _field20;
    struct _NSRange _field21;
    struct _NSRange _field22;
    unsigned long long _field23;
    struct _NSRange _field24;
    id _field25;
    id _field26;
};

struct TSWPLineFragment {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    double _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    CDStruct_5b0a1db3 _field8;
    id _field9;
    id _field10;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field11;
    double _field12;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
    id _field21;
    id _field22;
    unsigned int _field23;
    double _field24;
    id _field25;
    id _field26;
    id _field27;
    id _field28;
    id _field29;
    unsigned int _field30;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field31;
    id _field32;
    double _field33;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef;

struct TSWPMarkers {
    struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
};

struct TSWPParagraphAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    struct TSWPParagraphAttributeArray *_field12;
    unsigned long long _field13;
};

struct TSWPParagraphData {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
};

struct TSWPParagraphEnumerator {
    id _field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
    struct _NSRange _field8;
};

struct TSWPParagraphMetrics {
    _Bool _field1;
    struct CGSize _field2;
    unsigned long long _field3;
    double _field4;
};

struct TSWPParagraphTypesetter;

struct TSWPStorageAction;

struct TSWPStorageActionBuilder {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> *_field9;
    struct TSWPStorageAction *_field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    unsigned int _field14;
    unsigned long long _field15;
};

struct TSWPStorageActionGroup {
    int _field1;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field2;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field3;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field4;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field5;
    _Bool _field6;
    struct TSWPMarkers _field7;
};

struct TSWPStorageActionRunner {
    struct TSWPStorageActionState *_field1;
    _Bool _field2;
};

struct TSWPStorageActionState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSWPStorageTransaction *_field3;
    struct TSWPStorageTransaction _field4;
    _Bool _field5;
    id _field6;
    struct TSWPStorageActionRunner _field7;
    unsigned long long _field8;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> *_field9;
    struct TSWPStorageAction *_field10;
    _Bool _field11;
    _Bool _field12;
};

struct TSWPStorageChangeRange;

struct TSWPStorageParagraphIndexChange;

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct TSWPStorageActionGroup _field6;
    unsigned int _field7;
    unsigned long long _field8;
    struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> _field9;
    struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> _field10;
    struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    _Bool _field14;
    id _field15;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field16;
    struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> _field17;
};

struct TSWPStorageTransactionObject;

struct TabArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    float _field5;
    int _field6;
    basic_string_a1f69cfb *_field7;
};

struct TableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct TableRBTree;

struct TableSortOrderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> _field5;
    int _field6;
};

struct TableSortOrderArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    int _field6;
};

struct TableStrokePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
};

struct TableStyleNetworkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    unsigned int _field16;
};

struct TableStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct Reference *_field6;
    int _field7;
};

struct TableStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct FillArchive *_field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    struct Deprecated_TableStrokeArchive *_field8;
    struct Deprecated_TableStrokeArchive *_field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct Deprecated_TableStrokeArchive *_field12;
    struct Deprecated_TableStrokeArchive *_field13;
    struct Deprecated_TableStrokeArchive *_field14;
    struct Deprecated_TableStrokeArchive *_field15;
    struct Deprecated_TableStrokeArchive *_field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    struct Deprecated_TableStrokeArchive *_field25;
    struct Deprecated_TableStrokeArchive *_field26;
    struct Deprecated_TableStrokeArchive *_field27;
    struct Deprecated_TableStrokeArchive *_field28;
    struct StrokePresetListArchive *_field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    basic_string_a1f69cfb *_field35;
    int _field36;
    int _field37;
    struct StrokeArchive *_field38;
    struct StrokeArchive *_field39;
    struct StrokeArchive *_field40;
    struct StrokeArchive *_field41;
    struct StrokeArchive *_field42;
    struct StrokeArchive *_field43;
    struct StrokeArchive *_field44;
    struct StrokeArchive *_field45;
    struct StrokeArchive *_field46;
    struct StrokeArchive *_field47;
    struct StrokeArchive *_field48;
    struct StrokeArchive *_field49;
    struct StrokeArchive *_field50;
    struct StrokeArchive *_field51;
    struct StrokeArchive *_field52;
    struct StrokeArchive *_field53;
    int _field54;
};

struct TableTransposeInfoArchive;

struct TabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSWP::TabArchive> _field5;
};

struct TargetHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Point *_field5;
    struct Size *_field6;
    struct Range *_field7;
    struct Range *_field8;
    unsigned int _field9;
    unsigned int _field10;
    struct DoublePoint *_field11;
    struct DoubleSize *_field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TexCoordTilingShaderEffectState {
    struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> _field1;
};

struct TextPresetDisplayItemArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
};

struct TextStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
};

struct TextualAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
};

struct TextureAttributes {
    int object;
    int format;
    _Bool mipmap;
    _Bool repeat;
    _Bool nearest;
    long long unit;
    struct TextureSizeHint textureSizeHint;
    _Bool is3DTexture;
};

struct TextureCoordinateConverter {
    box_80622335 _field1;
};

struct TextureSizeHint {
    int loadOptimizedMipmaps;
    tvec2_3b141483 sizeLODHint;
};

struct TextureUnitStates {
    struct UpdatableValue<unsigned long> activeTexture;
    struct array<TSCH3D::GLSingleState, 4> states;
};

struct TextureVariables {
    id _field1;
    id _field2;
    id _field3;
};

struct TileRowInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    unsigned int _field9;
};

struct TileStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TST::TileStorage_Tile> _field5;
};

struct TokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct UIGraphicalAttachment *_field5;
    struct Reference *_field6;
};

struct TopicNumberHintsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TP::TopicNumberEntryArchive> _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct TrackedReferenceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ASTNodeArrayArchive *_field5;
    unsigned int _field6;
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    _Bool _field5;
};

struct TransitionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TransitionAttributesArchive *_field5;
};

struct TransitionAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct AnimationAttributesArchive *_field5;
    float _field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    basic_string_a1f69cfb *_field15;
    basic_string_a1f69cfb *_field16;
    float _field17;
    unsigned int _field18;
    double _field19;
    struct Color *_field20;
    float _field21;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIGraphicalAttachment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
};

struct UUID {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        CDStruct_e6eac3cb _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
};

struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
};

struct UUIDPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
};

struct UnarchiverReference;

struct UnarchiverRepeatedReference;

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> *fields_;
};

struct UpdatableValue<unsigned int> {
    unsigned int value;
};

struct UpdatableValue<unsigned long> {
    unsigned long long value;
};

struct UuidReferenceMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidReferenceMapArchive_CellRefsForUuid> _field5;
};

struct UuidSetStoreArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSCE::UuidSetStoreArchive_UuidSet> _field5;
};

struct UuidSetStoreArchive_UuidSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_bfda3daa _field5;
    unsigned int _field6;
};

struct VAOLoadResult {
    _Bool _field1;
    _Bool _field2;
    id _field3;
};

struct ValueEnumerator {
    _Bool mForward;
    unsigned long long mIndex;
    unsigned long long mMax;
    double mValue;
};

struct VariableNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ExpressionNodeArchive *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct ViewStateMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned int _has_bits_[1];
    int _cached_size_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    struct UUID *version_uuid_;
    struct ComponentInfo *component_;
    RepeatedPtrField_c964a194 external_object_uuid_map_entries_;
};

struct WHCCol;

struct WHCRow;

struct WPTableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct TableInfoArchive *_field5;
    struct Reference *_field6;
};

struct WrittenComponentInfo {
    id _field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    id _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    id _field10;
    id _field11;
    _Bool _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    id _field15;
    id _field16;
    id _field17;
    id _field18;
    id _field19;
    id _field20;
};

struct WrittenObjectInfo;

struct ZeroCopyInputStream {
    CDUnknownFunctionPointerType *_field1;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSPReferenceOrderedSetEntry {
    void *_field1;
    struct _TSPReferenceOrderedSetEntry *_field2;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    unsigned long long _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFString;

struct __CTFont;

struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> _field1;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long __value_;
};

struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> *_field1;
};

struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
    struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
    } __p1_;
    struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>> {
        unsigned long long __value_;
    } __p2_;
    struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
        float __value_;
    } __p3_;
};

struct __list_node_base<unsigned long, void *> {
    struct __list_node_base<unsigned long, void *> *__prev_;
    struct __list_node_base<unsigned long, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct __wrap_iter<double *> {
    double *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _xmlBuf;

struct _xmlCharEncodingHandler;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
};

struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> {
    struct ObjcSharedPtr<NSObject> __elems_[8];
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3D::GLSingleState, 2> {
    struct GLSingleState __elems_[2];
};

struct array<TSCH3D::GLSingleState, 4> {
    struct GLSingleState __elems_[4];
};

struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> {
    struct Data _field1[3];
};

struct array<TSCH3D::TextureAttributes, 8> {
    struct TextureAttributes __elems_[8];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<bool, 8> {
    _Bool __elems_[8];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct auto_ptr<TSP::PersistedObjectUUIDMapOperation>;

struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
};

struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 *__ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bitset<5> {
    unsigned long long __first_;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
};

struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> {
    struct __split_buffer<EQKitLayoutContext *, std::__1::allocator<EQKitLayoutContext *>> {
        struct EQKitLayoutContext **_field1;
        struct EQKitLayoutContext **_field2;
        struct EQKitLayoutContext **_field3;
        struct __compressed_pair<EQKitLayoutContext **, std::__1::allocator<EQKitLayoutContext *>> {
            struct EQKitLayoutContext **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutContext>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> {
    struct __split_buffer<EQKitLayoutElementaryStack *, std::__1::allocator<EQKitLayoutElementaryStack *>> {
        struct EQKitLayoutElementaryStack **_field1;
        struct EQKitLayoutElementaryStack **_field2;
        struct EQKitLayoutElementaryStack **_field3;
        struct __compressed_pair<EQKitLayoutElementaryStack **, std::__1::allocator<EQKitLayoutElementaryStack *>> {
            struct EQKitLayoutElementaryStack **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutElementaryStack>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> {
    struct __split_buffer<EQKitLayoutRow *, std::__1::allocator<EQKitLayoutRow *>> {
        struct EQKitLayoutRow **_field1;
        struct EQKitLayoutRow **_field2;
        struct EQKitLayoutRow **_field3;
        struct __compressed_pair<EQKitLayoutRow **, std::__1::allocator<EQKitLayoutRow *>> {
            struct EQKitLayoutRow **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutRow>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> {
    struct __split_buffer<EQKitLayoutStretchedOperator *, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
        struct EQKitLayoutStretchedOperator **_field1;
        struct EQKitLayoutStretchedOperator **_field2;
        struct EQKitLayoutStretchedOperator **_field3;
        struct __compressed_pair<EQKitLayoutStretchedOperator **, std::__1::allocator<EQKitLayoutStretchedOperator *>> {
            struct EQKitLayoutStretchedOperator **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutStretchedOperator>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> {
    struct __split_buffer<EQKitLayoutTable *, std::__1::allocator<EQKitLayoutTable *>> {
        struct EQKitLayoutTable **_field1;
        struct EQKitLayoutTable **_field2;
        struct EQKitLayoutTable **_field3;
        struct __compressed_pair<EQKitLayoutTable **, std::__1::allocator<EQKitLayoutTable *>> {
            struct EQKitLayoutTable **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitLayoutTable>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> {
    struct __split_buffer<EQKitMathMLParserState *, std::__1::allocator<EQKitMathMLParserState *>> {
        int **__first_;
        int **__begin_;
        int **__end_;
        struct __compressed_pair<EQKitMathMLParserState **, std::__1::allocator<EQKitMathMLParserState *>> {
            int **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<EQKitMathMLParserState>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct __split_buffer<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference *>> {
        struct TSCEInternalCellReference **_field1;
        struct TSCEInternalCellReference **_field2;
        struct TSCEInternalCellReference **_field3;
        struct __compressed_pair<TSCEInternalCellReference **, std::__1::allocator<TSCEInternalCellReference *>> {
            struct TSCEInternalCellReference **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCEInternalCellReference>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> {
    struct __split_buffer<TSCH3D::Transform *, std::__1::allocator<TSCH3D::Transform *>> {
        struct Transform **_field1;
        struct Transform **_field2;
        struct Transform **_field3;
        struct __compressed_pair<TSCH3D::Transform **, std::__1::allocator<TSCH3D::Transform *>> {
            struct Transform **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCH3D::Transform>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> {
    struct __split_buffer<TSP::WrittenObjectInfo *, std::__1::allocator<TSP::WrittenObjectInfo *>> {
        struct WrittenObjectInfo **__first_;
        struct WrittenObjectInfo **__begin_;
        struct WrittenObjectInfo **__end_;
        struct __compressed_pair<TSP::WrittenObjectInfo **, std::__1::allocator<TSP::WrittenObjectInfo *>> {
            struct WrittenObjectInfo **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSP::WrittenObjectInfo>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    struct __split_buffer<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>*>> {
        id **_field1;
        id **_field2;
        id **_field3;
        struct __compressed_pair<id<EQKitLayoutNode>**, std::__1::allocator<id<EQKitLayoutNode>*>> {
            id **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<id<EQKitLayoutNode>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> {
    struct __split_buffer<std::__1::pair<const Action *, int>*, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
        struct pair<const Action *, int> **_field1;
        struct pair<const Action *, int> **_field2;
        struct pair<const Action *, int> **_field3;
        struct __compressed_pair<std::__1::pair<const Action *, int>**, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
            struct pair<const Action *, int> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
    struct __split_buffer<std::__1::shared_ptr<StateSpec>*, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
        struct shared_ptr<StateSpec> **_field1;
        struct shared_ptr<StateSpec> **_field2;
        struct shared_ptr<StateSpec> **_field3;
        struct __compressed_pair<std::__1::shared_ptr<StateSpec>**, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
            struct shared_ptr<StateSpec> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<unsigned long, std::__1::allocator<unsigned long>> {
    struct __split_buffer<unsigned long *, std::__1::allocator<unsigned long *>> {
        unsigned long long **_field1;
        unsigned long long **_field2;
        unsigned long long **_field3;
        struct __compressed_pair<unsigned long **, std::__1::allocator<unsigned long *>> {
            unsigned long long **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> _field3;
};

struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
    struct __split_buffer<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        CDUnknownBlockType **_field1;
        CDUnknownBlockType **_field2;
        CDUnknownBlockType **_field3;
        struct __compressed_pair<void (^**)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^*)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
            CDUnknownBlockType **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> {
        unsigned long long _field1;
    } _field3;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __hash_table<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct map<Class, int, std::__1::less<Class>, std::__1::allocator<std::__1::pair<const Class, int>>> {
    struct __tree<std::__1::__value_type<Class, int>, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>, std::__1::allocator<std::__1::__value_type<Class, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Class, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<Class, std::__1::__value_type<Class, int>, std::__1::less<Class>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds, std::__1::less<TSCH3D::SceneObjectSharedPointer>, std::__1::allocator<std::__1::pair<const TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
    struct __tree<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>, std::__1::allocator<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTCell>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, TSPUnknownFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPUnknownFieldTreeNode *>>> {
    struct __tree<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> {
    struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::pair<Class, std::__1::basic_string<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<Class, std::__1::basic_string<char>>>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> {
    struct __tree<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::pair<long long, long long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> {
    struct __tree<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, unsigned short, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned short>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Config::Operator::Form>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::Script::Variant>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKit::ScriptLevel>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitPseudoUnitLength>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Align::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Boolean::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::CFRetainRelease>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Display::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::Edge::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::GroupAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, EQKitTypes::VAlign::Enum>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, double>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitLength, std::__1::allocator<EQKitLength>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Align::Enum, std::__1::allocator<EQKitTypes::Align::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::Notation::Enum, std::__1::allocator<EQKitTypes::Notation::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<EQKitTypes::VAlign::Enum, std::__1::allocator<EQKitTypes::VAlign::Enum>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned long>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, std::__1::__value_type<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>, unsigned short>, std::__1::less<std::__1::pair<id<EQKitLayoutNode>, EQKitTypes::Attributes::Enum>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, std::__1::__value_type<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>, EQKit::Config::Operator::Dictionary::Entry>, std::__1::less<std::__1::pair<unsigned short, EQKit::Config::Operator::Form>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::map<long long, TSPComponent *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSPComponent *>>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, CGRect, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, CGRect>>> {
    struct __tree<std::__1::__value_type<unsigned long, CGRect>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, CGRect>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, CGRect>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, EQKit::Config::Operator::Form, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, EQKit::Config::Operator::Form>>> {
    struct __tree<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, EQKit::Config::Operator::Form>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned short, unsigned long, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned short, unsigned long>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, unsigned long>, std::__1::less<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<TSCECReference, bool> {
    struct TSCECReference _field1;
    _Bool _field2;
};

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
};

struct pair<TSUCellCoord, TSCEFormula>;

struct pair<TSUCellCoord, double>;

struct pair<_NSRange, _NSRange>;

struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
};

struct pair<const Action *, int>;

struct pair<const char *, const char *> {
    char *_field1;
    char *_field2;
};

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct pair<unsigned long, unsigned short>;

struct pair<unsigned short, bool>;

struct path_descr;

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
};

struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> {
    struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> c;
};

struct range<double> {
    double _field1;
    double _field2;
};

struct scoped_array<unsigned char> {
    char *_field1;
};

struct segment_data<double>;

struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>;

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
    struct __tree<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<wchar_t, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<wchar_t>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<StateSpec>;

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSUStringChunk>;

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stack<EQKitLayoutContext, std::__1::deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>>> {
    struct deque<EQKitLayoutContext, std::__1::allocator<EQKitLayoutContext>> _field1;
};

struct stack<EQKitLayoutElementaryStack, std::__1::deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>>> {
    struct deque<EQKitLayoutElementaryStack, std::__1::allocator<EQKitLayoutElementaryStack>> _field1;
};

struct stack<EQKitLayoutRow, std::__1::deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>>> {
    struct deque<EQKitLayoutRow, std::__1::allocator<EQKitLayoutRow>> _field1;
};

struct stack<EQKitLayoutStretchedOperator, std::__1::deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>>> {
    struct deque<EQKitLayoutStretchedOperator, std::__1::allocator<EQKitLayoutStretchedOperator>> _field1;
};

struct stack<EQKitLayoutTable, std::__1::deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>>> {
    struct deque<EQKitLayoutTable, std::__1::allocator<EQKitLayoutTable>> _field1;
};

struct stack<EQKitMathMLParserState, std::__1::deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>>> {
    struct deque<EQKitMathMLParserState, std::__1::allocator<EQKitMathMLParserState>> c;
};

struct stack<id<EQKitLayoutNode>, std::__1::deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>>> {
    struct deque<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> _field1;
};

struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> {
    struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> _field1;
};

struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
};

struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
};

struct stack<unsigned long, std::__1::deque<unsigned long, std::__1::allocator<unsigned long>>> {
    struct deque<unsigned long, std::__1::allocator<unsigned long>> _field1;
};

struct stack<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>>> {
    struct deque<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &), std::__1::allocator<void (^)(id<EQKitLayoutNode>, const EQKit::Layout::Schemata &)>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tsuSaPage {
    CDUnknownFunctionPointerType *_field1;
};

struct tvec1<float> {
    union {
        float _field1;
        float _field2;
        float _field3;
    } _field1;
};

struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
};

struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> {
    struct __hash_table<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSUUID *, std::__1::__hash_value_type<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<NSString>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<NSString>, unsigned int>, TSCE::NSStringEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSTTableDataObject>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSTTableDataObject>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<SFUtility::ObjcSharedPtr<TSTTableDataObject>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<SFUtility::ObjcSharedPtr<TSTTableDataObject>, std::__1::__hash_value_type<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>, std::__1::hash<TSCEFormulaRangeContext>, std::__1::equal_to<TSCEFormulaRangeContext>, std::__1::allocator<std::__1::pair<const TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::hash<TSCEFormulaRangeContext>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFormulaRangeContext, std::__1::__hash_value_type<TSCEFormulaRangeContext, std::__1::map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCERangeCoordinate, std::__1::hash<TSCERangeCoordinate>, std::__1::equal_to<TSCERangeCoordinate>, std::__1::allocator<TSCERangeCoordinate>>>>>>, std::__1::equal_to<TSCEFormulaRangeContext>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::__1::hash<TSCEFunctionIndex>, std::__1::equal_to<TSCEFunctionIndex>, std::__1::allocator<std::__1::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::hash<TSCEFunctionIndex>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEFunctionIndex, std::__1::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__1::equal_to<TSCEFunctionIndex>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<std::__1::pair<const TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::hash<TSCEInternalCellReference>, true>, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>, std::__1::allocator<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::hash<TSCEInternalCellReference>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSCEInternalCellReference, std::__1::__hash_value_type<TSCEInternalCellReference, std::__1::unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>>>, std::__1::equal_to<TSCEInternalCellReference>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSTExpressionNode *, TSTCSENodeData, std::__1::hash<TSTExpressionNode *>, std::__1::equal_to<TSTExpressionNode *>, std::__1::allocator<std::__1::pair<TSTExpressionNode *const, TSTCSENodeData>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::hash<TSTExpressionNode *>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTExpressionNode *, std::__1::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__1::equal_to<TSTExpressionNode *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, NSMutableSet *>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, SFUtility::ObjcSharedPtr<TSUPointerKeyDictionary>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSCEDependencyTrackerFormulaOwnerInfo>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, id<TSCEReferenceResolving>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, std::__1::unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSU::UUIDData<TSP::UUIDData>, unsigned short, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::hash<TSUUUID>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, unsigned short>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TSUCellCoord, TSUColumnRowSize, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
    struct __hash_table<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const TSP::FieldPath, std::__1::__hash_value_type<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const char *, unsigned int, TSP::CStringHash, TSP::CStringEqualTo, std::__1::allocator<std::__1::pair<const char *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, unsigned int>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, unsigned int>, TSP::CStringEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>, std::__1::allocator<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const google::protobuf::Descriptor *, std::__1::__hash_value_type<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, NSMutableArray *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::ReferenceMapInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ReferenceMapInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::ReferenceMapInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, __unsafe_unretained Class, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, __unsafe_unretained Class>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DigestHash, TSP::DigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const std::__1::array<unsigned char, 20>, std::__1::__hash_value_type<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DigestEqualTo, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, TSP::ObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, TSP::ObjectInfo>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, SFUtility::ObjcSharedPtr<NSString>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, SFUtility::ObjcSharedPtr<NSString>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, TSCEValue, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSCEValue>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSCEValue>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSCEValue>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSCEValue>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, __unsafe_unretained Class, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const char *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const char *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const char *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const char *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, const google::protobuf::Message *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, TSUCellRect, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSUCellRect>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, TSUCellRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, TSUCellRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, TSUCellRect>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSCENamedReferenceTrieNode *, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::hash<unsigned short>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, TSU::UUIDData<TSP::UUIDData>, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<unsigned short>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<unsigned short>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned short, unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, unsigned short>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned short, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned short, unsigned short>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned short, std::__1::__hash_value_type<unsigned short, unsigned short>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
    struct __hash_table<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEInternalCellReference>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEInternalCellReference>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
    struct __hash_table<TSCEReferenceType, std::__1::hash<TSCEReferenceType>, std::__1::equal_to<TSCEReferenceType>, std::__1::allocator<TSCEReferenceType>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEReferenceType, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEReferenceType, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEReferenceType>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEReferenceType>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
    struct __hash_table<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellRect>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellRect>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __hash_table<unsigned short, std::__1::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<unsigned short>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned short, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned short, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned short, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned short>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<unsigned short>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<(anonymous namespace)::Range, std::__1::allocator<(anonymous namespace)::Range>> {
    struct Range *__begin_;
    struct Range *__end_;
    struct __compressed_pair<(anonymous namespace)::Range *, std::__1::allocator<(anonymous namespace)::Range>> {
        struct Range *__value_;
    } __end_cap_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
};

struct vector<EQKit::OpticalKern::Spec::Entry, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
    struct Entry *_field1;
    struct Entry *_field2;
    struct __compressed_pair<EQKit::OpticalKern::Spec::Entry *, std::__1::allocator<EQKit::OpticalKern::Spec::Entry>> {
        struct Entry *_field1;
    } _field3;
};

struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__value_;
    } __end_cap_;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
};

struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
};

struct vector<TSCEASTElement *, std::__1::allocator<TSCEASTElement *>> {
    struct TSCEASTElement **_field1;
    struct TSCEASTElement **_field2;
    struct __compressed_pair<TSCEASTElement **, std::__1::allocator<TSCEASTElement *>> {
        struct TSCEASTElement **_field1;
    } _field3;
};

struct vector<TSCEASTElementWithChildren *, std::__1::allocator<TSCEASTElementWithChildren *>> {
    struct TSCEASTElementWithChildren **_field1;
    struct TSCEASTElementWithChildren **_field2;
    struct __compressed_pair<TSCEASTElementWithChildren **, std::__1::allocator<TSCEASTElementWithChildren *>> {
        struct TSCEASTElementWithChildren **_field1;
    } _field3;
};

struct vector<TSCEBitGridTile *, std::__1::allocator<TSCEBitGridTile *>> {
    struct TSCEBitGridTile **__begin_;
    struct TSCEBitGridTile **__end_;
    struct __compressed_pair<TSCEBitGridTile **, std::__1::allocator<TSCEBitGridTile *>> {
        struct TSCEBitGridTile **__value_;
    } __end_cap_;
};

struct vector<TSCECReference, std::__1::allocator<TSCECReference>> {
    struct TSCECReference *_field1;
    struct TSCECReference *_field2;
    struct __compressed_pair<TSCECReference *, std::__1::allocator<TSCECReference>> {
        struct TSCECReference *_field1;
    } _field3;
};

struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__value_;
    } __end_cap_;
};

struct vector<TSCEFormulaID, std::__1::allocator<TSCEFormulaID>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSCEFormulaID *, std::__1::allocator<TSCEFormulaID>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSCEInternalCellReference, std::__1::allocator<TSCEInternalCellReference>> {
    struct TSCEInternalCellReference *_field1;
    struct TSCEInternalCellReference *_field2;
    struct __compressed_pair<TSCEInternalCellReference *, std::__1::allocator<TSCEInternalCellReference>> {
        struct TSCEInternalCellReference *_field1;
    } _field3;
};

struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
};

struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef *_field1;
    struct TSCERangeRef *_field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef *_field1;
    } _field3;
};

struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
};

struct vector<TSCETaggedDouble, std::__1::allocator<TSCETaggedDouble>> {
    struct TSCETaggedDouble *__begin_;
    struct TSCETaggedDouble *__end_;
    struct __compressed_pair<TSCETaggedDouble *, std::__1::allocator<TSCETaggedDouble>> {
        struct TSCETaggedDouble *__value_;
    } __end_cap_;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *__begin_;
    struct TSCEValue *__end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::AxisLabelCacheItem, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
    struct AxisLabelCacheItem *__begin_;
    struct AxisLabelCacheItem *__end_;
    struct __compressed_pair<TSCH3D::AxisLabelCacheItem *, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
        struct AxisLabelCacheItem *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo *__begin_;
    struct BarElementInfo *__end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::__1::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    box_a3bd9649 *__begin_;
    box_a3bd9649 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        box_a3bd9649 *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *_field1;
    plane_849e6053 *_field2;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *_field1;
    } _field3;
};

struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
    struct Lookup *__begin_;
    struct Lookup *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup *, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
        struct Lookup *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__value_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState *__begin_;
    struct ResourceAttributeState *__end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState *__value_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__value_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
};

struct vector<TSDWrapSegment, std::__1::allocator<TSDWrapSegment>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSDWrapSegment *, std::__1::allocator<TSDWrapSegment>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
    struct ExternalReferenceCompletionInfo *_field1;
    struct ExternalReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ExternalReferenceCompletionInfo *, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
        struct ExternalReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
    struct FinalizeHandlerItem **__begin_;
    struct FinalizeHandlerItem **__end_;
    struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
        struct FinalizeHandlerItem **__value_;
    } __end_cap_;
};

struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> {
    struct ObjectStackEntry *__begin_;
    struct ObjectStackEntry *__end_;
    struct __compressed_pair<TSP::ObjectStackEntry *, std::__1::allocator<TSP::ObjectStackEntry>> {
        struct ObjectStackEntry *__value_;
    } __end_cap_;
};

struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
    struct ReferenceCompletionInfo *_field1;
    struct ReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ReferenceCompletionInfo *, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
        struct ReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
    struct RepeatedExternalReferenceCompletionInfo *__begin_;
    struct RepeatedExternalReferenceCompletionInfo *__end_;
    struct __compressed_pair<TSP::RepeatedExternalReferenceCompletionInfo *, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
        struct RepeatedExternalReferenceCompletionInfo *__value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__value_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__value_;
    } __end_cap_;
};

struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__value_;
    } __end_cap_;
};

struct vector<TSTCellUIDRange, std::__1::allocator<TSTCellUIDRange>> {
    struct TSTCellUIDRange *__begin_;
    struct TSTCellUIDRange *__end_;
    struct __compressed_pair<TSTCellUIDRange *, std::__1::allocator<TSTCellUIDRange>> {
        struct TSTCellUIDRange *__value_;
    } __end_cap_;
};

struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol *__begin_;
    struct WHCCol *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol *__value_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow *__begin_;
    struct WHCRow *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow *__value_;
    } __end_cap_;
};

struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
};

struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__value_;
    } __end_cap_;
};

struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__value_;
    } __end_cap_;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSWPAttributeArrayKind, std::__1::allocator<TSWPAttributeArrayKind>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSWPAttributeArrayKind *, std::__1::allocator<TSWPAttributeArrayKind>> {
        int *_field1;
    } _field3;
};

struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef *_field1;
    struct TSWPLineRef *_field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef *_field1;
    } _field3;
};

struct vector<TSWPParagraphMetrics, std::__1::allocator<TSWPParagraphMetrics>> {
    struct TSWPParagraphMetrics *__begin_;
    struct TSWPParagraphMetrics *__end_;
    struct __compressed_pair<TSWPParagraphMetrics *, std::__1::allocator<TSWPParagraphMetrics>> {
        struct TSWPParagraphMetrics *__value_;
    } __end_cap_;
};

struct vector<TSWPStorageAction, std::__1::allocator<TSWPStorageAction>> {
    struct TSWPStorageAction *_field1;
    struct TSWPStorageAction *_field2;
    struct __compressed_pair<TSWPStorageAction *, std::__1::allocator<TSWPStorageAction>> {
        struct TSWPStorageAction *_field1;
    } _field3;
};

struct vector<TSWPStorageActionGroup, std::__1::allocator<TSWPStorageActionGroup>> {
    struct TSWPStorageActionGroup *_field1;
    struct TSWPStorageActionGroup *_field2;
    struct __compressed_pair<TSWPStorageActionGroup *, std::__1::allocator<TSWPStorageActionGroup>> {
        struct TSWPStorageActionGroup *_field1;
    } _field3;
};

struct vector<TSWPStorageChangeRange, std::__1::allocator<TSWPStorageChangeRange>> {
    struct TSWPStorageChangeRange *_field1;
    struct TSWPStorageChangeRange *_field2;
    struct __compressed_pair<TSWPStorageChangeRange *, std::__1::allocator<TSWPStorageChangeRange>> {
        struct TSWPStorageChangeRange *_field1;
    } _field3;
};

struct vector<TSWPStorageParagraphIndexChange, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
    struct TSWPStorageParagraphIndexChange *_field1;
    struct TSWPStorageParagraphIndexChange *_field2;
    struct __compressed_pair<TSWPStorageParagraphIndexChange *, std::__1::allocator<TSWPStorageParagraphIndexChange>> {
        struct TSWPStorageParagraphIndexChange *_field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject *_field1;
    struct TSWPStorageTransactionObject *_field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject *_field1;
    } _field3;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__value_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_58a8085a *__begin_;
    tvec1_58a8085a *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_58a8085a *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
};

struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
};

struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__value_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<id<EQKitLayoutNode>, std::__1::allocator<id<EQKitLayoutNode>>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<id<EQKitLayoutNode>*, std::__1::allocator<id<EQKitLayoutNode>>> {
        id *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__begin_;
    struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__end_;
    struct __compressed_pair<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>*, std::__1::allocator<std::__1::auto_ptr<TSP::PersistedObjectUUIDMapOperation>>> {
        struct auto_ptr<TSP::PersistedObjectUUIDMapOperation> *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a1f69cfb *_field1;
    basic_string_a1f69cfb *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a1f69cfb *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
    struct pair<TSCECReference, bool> *_field1;
    struct pair<TSCECReference, bool> *_field2;
    struct __compressed_pair<std::__1::pair<TSCECReference, bool>*, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
        struct pair<TSCECReference, bool> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSUCellCoord, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>> {
    struct pair<TSUCellCoord, TSCEFormula> *__begin_;
    struct pair<TSUCellCoord, TSCEFormula> *__end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, TSCEFormula>*, std::__1::allocator<std::__1::pair<TSUCellCoord, TSCEFormula>>> {
        struct pair<TSUCellCoord, TSCEFormula> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSUCellCoord, double>, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
    struct pair<TSUCellCoord, double> *__begin_;
    struct pair<TSUCellCoord, double> *__end_;
    struct __compressed_pair<std::__1::pair<TSUCellCoord, double>*, std::__1::allocator<std::__1::pair<TSUCellCoord, double>>> {
        struct pair<TSUCellCoord, double> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<_NSRange, _NSRange>, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
    struct pair<_NSRange, _NSRange> *_field1;
    struct pair<_NSRange, _NSRange> *_field2;
    struct __compressed_pair<std::__1::pair<_NSRange, _NSRange>*, std::__1::allocator<std::__1::pair<_NSRange, _NSRange>>> {
        struct pair<_NSRange, _NSRange> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned short, bool>, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
    struct pair<unsigned short, bool> *__begin_;
    struct pair<unsigned short, bool> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned short, bool>*, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
        struct pair<unsigned short, bool> *__value_;
    } __end_cap_;
};

struct vector<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_field1;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_field2;
    struct __compressed_pair<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>*, std::__1::allocator<std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>>>> {
        struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<TSUStringChunk>, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> *__begin_;
    struct shared_ptr<TSUStringChunk> *__end_;
    struct __compressed_pair<std::__1::shared_ptr<TSUStringChunk>*, std::__1::allocator<std::__1::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> *__value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field2;
    struct __compressed_pair<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>*, std::__1::allocator<std::__1::unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>>>> {
        struct unordered_map<SFUtility::ObjcSharedPtr<NSString>, unsigned int, TSCE::NSStringHash, TSCE::NSStringEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<NSString>, unsigned int>>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} Color_1703f521;

typedef struct {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
} Config_5da22101;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct Collection *_field2;
    struct EQKitCacheLRUCounter _field3;
} Manager_e51557f8;

typedef struct {
    struct EQKitCache<EQKit::OpticalKern::Glyph::Key, std::__1::shared_ptr<EQKit::OpticalKern::Edge::Path>, std::__1::shared_ptr<const EQKit::OpticalKern::Edge::Path>> *_field1;
    struct EQKitCacheLRUCounter _field2;
    _Bool _field3;
    struct QuantizationConfig _field4;
} Manager_36464627;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr *_field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
} Path_1b135553;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ChartMediatorArchive *_field5;
    basic_string_a1f69cfb *_field6;
    struct ChartMediatorFormulaStorage *_field7;
    _Bool _field8;
    _Bool _field9;
} ChartMediatorArchive_65508aa1;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DocumentArchive *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
} DocumentArchive_f565e1a7;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DocumentArchive *_field5;
    struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> _field6;
    basic_string_a1f69cfb *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    basic_string_a1f69cfb *_field12;
    struct Reference *_field13;
    struct Reference *_field14;
    struct Reference *_field15;
    struct Reference *_field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
} DocumentArchive_2216b979;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct DrawableSelectionArchive *_field5;
    struct Reference *_field6;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> _field7;
} ChartSelectionArchive_0103965d;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct FillArchive *_field5;
    struct StrokeArchive *_field6;
    struct ShadowArchive *_field7;
    struct ReflectionArchive *_field8;
    struct LineEndArchive *_field9;
    struct LineEndArchive *_field10;
    float _field11;
} ShapeStylePropertiesArchive_14f5c167;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RangeReferenceArchive *_field5;
    struct ChartSelectionArchive *_field6;
    struct Reference *_field7;
    struct DrawableSelectionArchive *_field8;
} ChartSelectionArchive_b21c617c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
    int _field6;
    int _field7;
    struct Range *_field8;
    int _field9;
} SelectionArchive_4d81a463;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Range *_field5;
    int _field6;
    int _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    struct Reference *_field11;
    int _field12;
} CanvasSelectionArchive_0d79e056;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    struct CellID *_field6;
    struct RepeatedPtrField<TST::CellRange> _field7;
    struct RepeatedPtrField<TST::CellRange> _field8;
    struct CellID *_field9;
    int _field10;
} SelectionArchive_c89327b4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct Reference *_field5;
    RepeatedField_27dfe32f _field6;
    RepeatedField_27dfe32f _field7;
} ChartMediatorArchive_9bee4689;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ThemeArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    basic_string_a1f69cfb *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct RepeatedPtrField<KN::ThemeCustomTimingCurveArchive> _field11;
    _Bool _field12;
} ThemeArchive_846062da;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct ThemeArchive *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
} ThemeArchive_59195ce6;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    basic_string_a1f69cfb *_field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
} DocumentArchive_9de3ea16;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    struct ColumnsArchive *_field10;
    struct PaddingArchive *_field11;
    unsigned int _field12;
    _Bool _field13;
    struct Reference *_field14;
} ShapeStylePropertiesArchive_7f628ad1;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    int _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
} Color_0722d876;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    struct RepeatedPtrField<TSP::Path_Element> _field5;
} Path_91321ae4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct SelectionArchive *_field9;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field10;
    int _field11;
    int _field12;
    unsigned int _field13;
    unsigned int _field14;
    struct ChartSelectionArchive *_field15;
    struct Reference *_field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedField_27dfe32f _field22;
    struct Point *_field23;
    struct Size *_field24;
    struct Size *_field25;
    struct RepeatedPtrField<TSCH::ChartUIState> _field26;
    struct SelectionPathArchive *_field27;
    struct RepeatedPtrField<TN::UUIDSheetUIStateDictionaryArchive> _field28;
    struct Reference *_field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
} UIStateArchive_d4d4fdcb;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[1];
    int _field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    struct Reference *_field7;
} CanvasSelectionArchive_cc53fcdb;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3[2];
    struct Reference *_field4;
    struct Reference *_field5;
    struct Size *_field6;
    struct Point *_field7;
    float _field8;
    float _field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    struct Point *_field11;
    struct Point *_field12;
    struct Reference *_field13;
    float _field14;
    float _field15;
    struct Point *_field16;
    struct RepeatedPtrField<TSCH::ChartUIState> _field17;
    float _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    RepeatedPtrField_a0d2dbe7 _field23;
    RepeatedPtrField_a0d2dbe7 _field24;
    RepeatedPtrField_a0d2dbe7 _field25;
    float _field26;
    float _field27;
    struct Size *_field28;
    float _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    struct Point *_field34;
    struct SelectionPathArchive *_field35;
    RepeatedPtrField_a0d2dbe7 _field36;
    float _field37;
    float _field38;
    struct Reference *_field39;
    _Bool _field40;
    int _field41;
} UIStateArchive_c8a5529a;

typedef struct {
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field1;
    struct set<wchar_t, std::__1::less<wchar_t>, std::__1::allocator<wchar_t>> _field2;
} Config_b4c5d39d;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned long long _field2;
    double _field3;
} CDStruct_45a6b6f8;

typedef struct {
    _Bool forceOmitLegend;
    _Bool forceOmitTitle;
    _Bool forceOmitAxisTitle;
    _Bool forceOmitLabelPlacement;
    _Bool forceTitleAtTop;
    _Bool enable3DTightBounds;
    _Bool enable3DScaledDepthBounds;
    long long maxDepthRatioType;
    unsigned long long max3DLimitingSeries;
} CDStruct_b1c75024;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_7bd98050;

typedef struct {
    unsigned char byte0;
    unsigned char byte1;
    unsigned char byte2;
    unsigned char byte3;
    unsigned char byte4;
    unsigned char byte5;
    unsigned char byte6;
    unsigned char byte7;
    unsigned char byte8;
    unsigned char byte9;
    unsigned char byte10;
    unsigned char byte11;
    unsigned char byte12;
    unsigned char byte13;
    unsigned char byte14;
    unsigned char byte15;
} CDStruct_e6eac3cb;

typedef struct {
    unsigned int useCount;
    id ticket;
} CDStruct_2a021fcd;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    unsigned int _field1;
    long long _field2;
} CDStruct_31de062f;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
} CDStruct_188655c5;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_ba543347;

typedef struct {
    unsigned int mUseAutomaticUnits:1;
    int mDurationUnitSmallest;
    int mDurationUnitLargest;
    int mDurationStyle;
} CDStruct_b1177b60;

typedef struct {
    unsigned int formulaID:24;
} CDStruct_ed6d627d;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    _Bool _field4;
} CDStruct_d230bf23;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
} CDStruct_41cea37a;

typedef struct {
    double spaceBefore;
    double attachmentHeight;
    double ascent;
    double descent;
    double leadingAbove;
    double leadingBelow;
    double spaceAfter;
} CDStruct_5b0a1db3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double skew;
    double skewOffset;
    double scale;
} CDStruct_d6fcdff4;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    int _field1;
    unsigned long long _field2;
    _Bool _field3;
} CDStruct_b9fbe577;

typedef struct {
    int columnOffset;
    int rowOffset;
} CDStruct_945081a1;

typedef struct {
    int _field1;
    short _field2;
    unsigned int :1;
    unsigned int :1;
} CDStruct_382da14b;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct CDStruct_183601bc;

typedef struct {
    double _field1;
    struct CGPoint _field2;
    long long _field3;
    double _field4;
} CDStruct_46b2202e;

typedef struct {
    long long _field1;
    unsigned long long _field2;
    _Bool _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct _NSRange _field9;
    unsigned long long _field10;
} CDStruct_64113493;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    struct CGAffineTransform _field1;
    struct CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    struct CGPoint _field1;
    _Bool _field2;
} CDStruct_40a92360;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_460b8ffe;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct TSUCellCoord topLeft;
    struct TSUCellCoord bottomRight;
} CDStruct_d8c645bd;

typedef struct {
    struct _NSRange _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont *_field10;
    struct CGColor *_field11;
    id _field12;
    _Bool _field13;
    int _field14;
    double _field15;
    struct CGColor *_field16;
    double _field17;
} CDStruct_3b6efdb6;

typedef struct {
    struct _NSRange _field1;
    long long _field2;
} CDStruct_9ae92562;

typedef struct {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
} CDStruct_e0d92598;

typedef struct {
    int mFormatType;
    union {
        struct {
            unsigned int mCurrencyCodeIndex:16;
            unsigned int mDecimalPlaces:8;
            unsigned int mNegativeStyle:3;
            unsigned int mShowThousandsSeparator:1;
            unsigned int mUseAccountingStyle:1;
        } mNumberFormatStruct;
        struct {
            unsigned int mFractionAccuracy:8;
        } mFractionFormatStruct;
        struct {
            unsigned int mBase:8;
            unsigned int mBasePlaces:8;
            unsigned int mBaseUseMinusSign:1;
        } mBaseFormatStruct;
        struct {
            unsigned int mSuppressDateFormat:1;
            unsigned int mSuppressTimeFormat:1;
            NSString *mDateTimeFormat;
        } mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        struct {
            NSUUID *mCustomFormatKey;
            TSUCustomFormat *mCustomFormat;
            unsigned int mLegacyID;
            unsigned char mAppliedConditionKey;
        } mCustomFormatStruct;
        struct {
            double mMinimum;
            double mMaximum;
            double mIncrement;
            int mDisplayFormatType;
            unsigned int mOrientation:2;
            unsigned int mPosition:2;
        } mControlFormatStruct;
        struct {
            int mInitialValue;
            unsigned int mMultipleChoiceListFormatID;
            id mData;
        } mMultipleChoiceListFormatStruct;
    } ;
} CDStruct_28403e59;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    _Bool _field6;
} CDStruct_7e4c5a1e;

typedef struct {
    struct CGRect _field1;
    double _field2;
    CDStruct_5b0a1db3 _field3;
    double _field4;
    struct CGRect _field5;
    double _field6;
    CDStruct_5b0a1db3 _field7;
} CDStruct_d12891c8;

typedef struct {
    struct CGRect cachedRect;
    struct CGRect originalCachedRect;
    unsigned int isValid;
} CDStruct_5bfcb38a;

// Ambiguous groups
typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
} RepeatedField_12b14242;

typedef struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
} RepeatedField_324622b8;

typedef struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
} RepeatedField_c2891982;

typedef struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
} RepeatedField_27dfe32f;

typedef struct RepeatedPtrField<TSCH::GridRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_b5a3b001;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTupleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a96af6e2;

typedef struct RepeatedPtrField<TSCH::StyleSwapUndoTuplesArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_daf2f3db;

typedef struct RepeatedPtrField<TSD::ExteriorTextWrapArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_3504fdd6;

typedef struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_45e8210e;

typedef struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_634a5f45;

typedef struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_1f1a6efb;

typedef struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_fe6aca30;

typedef struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_5fb0b506;

typedef struct RepeatedPtrField<TSP::FieldPath> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_5867f37b;

typedef struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
} RepeatedPtrField_c964a194;

typedef struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_c67bb210;

typedef struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a0d2dbe7;

typedef struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_bfda3daa;

typedef struct RepeatedPtrField<TSP::UUIDPath> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_0a3269f6;

typedef struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_236b8a23;

typedef struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
} StateStack_6cdf83e9;

typedef struct UUIDData<TSP::UUIDData> {
    union {
        unsigned char _uuid[16];
        CDStruct_e6eac3cb _cfuuid;
        struct {
            unsigned long long _lower;
            unsigned long long _upper;
        } ;
    } ;
} UUIDData_5fbc143e;

typedef struct UUIDMap<TSP::UUIDMap> {
    struct __hash_table<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::__unordered_map_hasher<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::hash<TSUUUID>, true>, std::__1::__unordered_map_equal<TSU::UUIDData<TSP::UUIDData>, std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__hash_value_type<TSU::UUIDData<TSP::UUIDData>, TSU::UUIDData<TSP::UUIDData>>>> __table_;
} UUIDMap_b66c2694;

typedef struct __wrap_iter<double *> {
    double *_field1;
} __wrap_iter_8fb6ff7c;

typedef struct array<(anonymous namespace)::TextureVariables, 2> {
    struct TextureVariables _field1[2];
} array_bb63b711;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
} auto_ptr_4370f086;

typedef struct auto_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    unordered_map_38045d47 *__ptr_;
} auto_ptr_945ad503;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
} box_80622335;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
} box_0260e9b3;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
} box_a3bd9649;

typedef struct deque<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __split_buffer<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
        UUIDData_5fbc143e **__first_;
        UUIDData_5fbc143e **__begin_;
        UUIDData_5fbc143e **__end_;
        struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>**, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>*>> {
            UUIDData_5fbc143e **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        unsigned long long __value_;
    } __size_;
} deque_5668141c;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
} line_190fbfc7;

typedef struct map<TSU::UUIDData<TSP::UUIDData>, unsigned long, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<std::__1::pair<const TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
    struct __tree<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>, std::__1::allocator<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSU::UUIDData<TSP::UUIDData>, std::__1::__value_type<TSU::UUIDData<TSP::UUIDData>, unsigned long>, std::__1::less<TSU::UUIDData<TSP::UUIDData>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_2cd530a9;

typedef struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<std::__1::unordered_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<std::__1::unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_33c58e88;

typedef struct multimap<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>, std::__1::less<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>>> {
    struct __tree<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>, std::__1::allocator<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUCellCoord, std::__1::__value_type<TSUCellCoord, std::__1::tuple<unsigned short, unsigned short, TSTCellStorage *>>, std::__1::less<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multimap_fcb6b22c;

typedef struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} multimap_41f9c887;

typedef struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multiset_10d8bac2;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<TSTCell *, TSTCellUID> {
    id _field1;
    struct TSTCellUID _field2;
} pair_4d5b4bcf;

typedef struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
} pair_64bf96b1;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct pair<int, int> {
    int _field1;
    int _field2;
} pair_65f741c2;

typedef struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
} plane_849e6053;

typedef struct range<double> {
    double _field1;
    double _field2;
} range_2a4e38ce;

typedef struct set<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
    struct __tree<EQKitTypes::Attributes::Enum, std::__1::less<EQKitTypes::Attributes::Enum>, std::__1::allocator<EQKitTypes::Attributes::Enum>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<EQKitTypes::Attributes::Enum, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<EQKitTypes::Attributes::Enum>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_25e6ba53;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_3d57cb01;

typedef struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_fd9a82b7;

typedef struct set<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
    struct __tree<TSUCellRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUCellRect>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUCellRect, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_5fd94db8;

typedef struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_713dd2e1;

typedef struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bafc106c;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1a254aea;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b124cf66;

typedef struct shared_ptr<google::protobuf::Message> {
    struct Message *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cd1ed623;

typedef struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b9bbcad9;

typedef struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
} stack_00018fe6;

typedef struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
} stack_e5003a0d;

typedef struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
} tmat2x2_6cc53533;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec1<float> {
    union {
        float _field1;
        float _field2;
        float _field3;
    } _field1;
} tvec1_58a8085a;

typedef struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
} tvec1_dad7e00b;

typedef struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
} tvec4_d23a2b6e;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

typedef struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
} tvec4_f99fd489;

typedef struct unordered_map<TSTCellUID, TSTCell *, std::__1::hash<TSTCellUID>, std::__1::equal_to<TSTCellUID>, std::__1::allocator<std::__1::pair<const TSTCellUID, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>, std::__1::allocator<std::__1::__hash_value_type<TSTCellUID, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTCellUID, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::hash<TSTCellUID>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTCellUID, std::__1::__hash_value_type<TSTCellUID, TSTCell *>, std::__1::equal_to<TSTCellUID>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_cc9c6ffa;

typedef struct unordered_map<TSUCellCoord, TSTCell *, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSTCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSTCell *>, std::__1::equal_to<TSUCellCoord>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_d2ee14f6;

typedef struct unordered_map<TSUCellCoord, TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUCellCoord>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_ddbde191;

typedef struct unordered_map<TSUCellCoord, TSUColumnRowSize, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::hash<TSUCellCoord>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUCellCoord, std::__1::__hash_value_type<TSUCellCoord, TSUColumnRowSize>, std::__1::equal_to<TSUCellCoord>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_89444acf;

typedef struct unordered_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<const long long, bool>, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::__hash_value_type<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const long long, bool>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const long long, std::__1::__hash_value_type<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const long long, std::__1::__hash_value_type<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_38045d47;

typedef struct unordered_set<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
    struct __hash_table<TSCECellRef, std::__1::hash<TSCECellRef>, std::__1::equal_to<TSCECellRef>, std::__1::allocator<TSCECellRef>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellRef, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellRef, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCECellRef>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCECellRef>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_7ec2a700;

typedef struct unordered_set<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
    struct __hash_table<TSCEInternalCellReference, std::__1::hash<TSCEInternalCellReference>, std::__1::equal_to<TSCEInternalCellReference>, std::__1::allocator<TSCEInternalCellReference>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCEInternalCellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCEInternalCellReference, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSCEInternalCellReference>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSCEInternalCellReference>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_c4d0cfce;

typedef struct unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    struct __hash_table<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*>, std::__1::allocator<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSU::UUIDData<TSP::UUIDData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUUUID>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData>>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_c6a929bd;

typedef struct unordered_set<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_eab92ffe;

typedef struct unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
    struct __hash_table<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellCoord, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellCoord, void *>>> _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellCoord>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellCoord>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_c5f37819;

typedef struct unordered_set<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
    struct __hash_table<TSUCellRect, std::__1::hash<TSUCellRect>, std::__1::equal_to<TSUCellRect>, std::__1::allocator<TSUCellRect>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUCellRect, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUCellRect, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TSUCellRect>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TSUCellRect>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_ea210bc4;

typedef struct vector<EQKitTypes::Crossout::Enum, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<EQKitTypes::Crossout::Enum *, std::__1::allocator<EQKitTypes::Crossout::Enum>> {
        int *__value_;
    } __end_cap_;
} vector_e38595b5;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<TNChartFormulaType, std::__1::allocator<TNChartFormulaType>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<TNChartFormulaType *, std::__1::allocator<TNChartFormulaType>> {
        unsigned long long *_field1;
    } _field3;
} vector_2bba1c52;

typedef struct vector<TSCEFormula, std::__1::allocator<TSCEFormula>> {
    struct TSCEFormula *__begin_;
    struct TSCEFormula *__end_;
    struct __compressed_pair<TSCEFormula *, std::__1::allocator<TSCEFormula>> {
        struct TSCEFormula *__value_;
    } __end_cap_;
} vector_eeb872f1;

typedef struct vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>> {
    struct TSCERangeCoordinate *_field1;
    struct TSCERangeCoordinate *_field2;
    struct __compressed_pair<TSCERangeCoordinate *, std::__1::allocator<TSCERangeCoordinate>> {
        struct TSCERangeCoordinate *_field1;
    } _field3;
} vector_60dd006f;

typedef struct vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>> {
    struct TSCERangeRef *_field1;
    struct TSCERangeRef *_field2;
    struct __compressed_pair<TSCERangeRef *, std::__1::allocator<TSCERangeRef>> {
        struct TSCERangeRef *_field1;
    } _field3;
} vector_5a16d233;

typedef struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
} vector_99ef3555;

typedef struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *__begin_;
    struct TSCEValue *__end_;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *__value_;
    } __end_cap_;
} vector_a1208d01;

typedef struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *_field1;
    plane_849e6053 *_field2;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *_field1;
    } _field3;
} vector_5e6a89be;

typedef struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__value_;
    } __end_cap_;
} vector_1798193c;

typedef struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__value_;
    } __end_cap_;
} vector_e28bcd8e;

typedef struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__value_;
    } __end_cap_;
} vector_d7c2985b;

typedef struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__value_;
    } __end_cap_;
} vector_22c20f1a;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
} vector_b5dead7b;

typedef struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__value_;
    } __end_cap_;
} vector_adb99b2c;

typedef struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__value_;
    } __end_cap_;
} vector_cc556b2d;

typedef struct vector<TSTCellUID, std::__1::allocator<TSTCellUID>> {
    struct TSTCellUID *__begin_;
    struct TSTCellUID *__end_;
    struct __compressed_pair<TSTCellUID *, std::__1::allocator<TSTCellUID>> {
        struct TSTCellUID *__value_;
    } __end_cap_;
} vector_7670e6f2;

typedef struct vector<TSTCellUIDRange, std::__1::allocator<TSTCellUIDRange>> {
    struct TSTCellUIDRange *__begin_;
    struct TSTCellUIDRange *__end_;
    struct __compressed_pair<TSTCellUIDRange *, std::__1::allocator<TSTCellUIDRange>> {
        struct TSTCellUIDRange *__value_;
    } __end_cap_;
} vector_d660334b;

typedef struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__value_;
    } __end_cap_;
} vector_613d3e5a;

typedef struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
    UUIDData_5fbc143e *__begin_;
    UUIDData_5fbc143e *__end_;
    struct __compressed_pair<TSU::UUIDData<TSP::UUIDData>*, std::__1::allocator<TSU::UUIDData<TSP::UUIDData>>> {
        UUIDData_5fbc143e *__value_;
    } __end_cap_;
} vector_4dc5f307;

typedef struct vector<TSUCellCoord, std::__1::allocator<TSUCellCoord>> {
    struct TSUCellCoord *__begin_;
    struct TSUCellCoord *__end_;
    struct __compressed_pair<TSUCellCoord *, std::__1::allocator<TSUCellCoord>> {
        struct TSUCellCoord *__value_;
    } __end_cap_;
} vector_38b190b0;

typedef struct vector<TSUCellRect, std::__1::allocator<TSUCellRect>> {
    struct TSUCellRect *__begin_;
    struct TSUCellRect *__end_;
    struct __compressed_pair<TSUCellRect *, std::__1::allocator<TSUCellRect>> {
        struct TSUCellRect *__value_;
    } __end_cap_;
} vector_e87daf7b;

typedef struct vector<TSWPDirtyRange, std::__1::allocator<TSWPDirtyRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPDirtyRange *, std::__1::allocator<TSWPDirtyRange>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
} vector_e3deae5b;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
} vector_b5e32e34;

typedef struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__value_;
    } __end_cap_;
} vector_7c702c4c;

typedef struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> __cap_alloc_;
} vector_553f084a;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
} vector_7584168e;

typedef struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_58a8085a *__begin_;
    tvec1_58a8085a *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_58a8085a *__value_;
    } __end_cap_;
} vector_9ed239ac;

typedef struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
} vector_319661ea;

typedef struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__value_;
    } __end_cap_;
} vector_d73af98f;

typedef struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__value_;
    } __end_cap_;
} vector_522a5b3a;

typedef struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__value_;
    } __end_cap_;
} vector_7200ab52;

typedef struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
} vector_e600bae4;

typedef struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__value_;
    } __end_cap_;
} vector_ccfc515b;

typedef struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
} vector_50d79d4a;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
} vector_afed86a5;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
} vector_aab22ae2;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_06e666a8;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
} vector_8d85e9cb;

typedef struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__value_;
    } __end_cap_;
} vector_3c415888;

#pragma mark Typedef'd Unions

// Ambiguous groups
typedef union {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDUnion_2cf95dea;

typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int _field1;
    int _field2;
    int _field3;
} CDUnion_58123c5d;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

