//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "HDFitnessMachinePairingManagerDelegate.h"
#import "HDFitnessMachineStateTimersDelegate.h"

@class HDFitnessMachineAnalyticsCollector, HDFitnessMachineDataCollector, HDFitnessMachineDataProducer, HDFitnessMachinePairingManager, HDFitnessMachineSession, HDFitnessMachineStateTimers, HDHealthServiceManager, HDProfile, HKObserverSet, NSDate, NSMutableArray, NSObject<OS_dispatch_queue>, NSString;

@interface HDFitnessMachineManager : NSObject <HDFitnessMachinePairingManagerDelegate, HDFitnessMachineStateTimersDelegate>
{
    HDProfile *_profile;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_connections;
    HDFitnessMachineDataCollector *_collector;
    HDFitnessMachinePairingManager *_pairingManager;
    HDFitnessMachineSession *_fitnessMachineSession;
    _Bool _shouldReconnect;
    _Bool _resetInProgress;
    NSMutableArray *_characteristicDataBuffer;
    HKObserverSet *_fitnessMachineSessionObservers;
    HDFitnessMachineDataProducer *_fitnessMachineDataProducer;
    NSDate *_machinePreferredUntilDate;
    HDHealthServiceManager *_serviceManager;
    HDFitnessMachineStateTimers *_fitnessMachineStateTimers;
    HDFitnessMachineAnalyticsCollector *_analyticsCollector;
}

+ (id)fitnessMachineServerId;
@property(retain, nonatomic) HDFitnessMachineAnalyticsCollector *analyticsCollector; // @synthesize analyticsCollector=_analyticsCollector;
@property(retain, nonatomic) HDFitnessMachineStateTimers *fitnessMachineStateTimers; // @synthesize fitnessMachineStateTimers=_fitnessMachineStateTimers;
@property(nonatomic) __weak HDHealthServiceManager *serviceManager; // @synthesize serviceManager=_serviceManager;
@property(readonly, nonatomic) NSDate *machinePreferredUntilDate; // @synthesize machinePreferredUntilDate=_machinePreferredUntilDate;
@property(readonly, nonatomic) HDFitnessMachineDataProducer *fitnessMachineDataProducer; // @synthesize fitnessMachineDataProducer=_fitnessMachineDataProducer;
- (void).cxx_destruct;
- (void)unitTest_receiveFakeCharacteristicUpdate:(id)arg1;
- (id)unitTest_currentFitnessMachineSession;
- (void)unitTest_fakeSession:(id)arg1;
- (void)unitTest_fakeMachineDiscoveryForType:(unsigned long long)arg1;
- (void)hktest_setMachinePreferredUntilDate:(id)arg1;
- (void)_queue_simulateDisconnect;
- (void)simulateDisconnect;
- (void)pairingManagerDidBeginPairing:(id)arg1;
- (void)pairingManagerReadyToConnect:(id)arg1;
- (void)pairingManager:(id)arg1 discoveredHealthService:(id)arg2 machineType:(unsigned long long)arg3;
- (void)pairingManagerReceivedActivityTypeAndPermission:(id)arg1;
- (void)pairingManager:(id)arg1 updatedConnectionStateFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)pairingManagerUpdatedMachineInformation:(id)arg1;
- (id)pairingManagerRequestsOOBData:(id)arg1 error:(id *)arg2;
- (void)pairingManager:(id)arg1 didChangeNFCEnabledState:(_Bool)arg2;
- (void)pairingManager:(id)arg1 failedPairingWithError:(id)arg2;
- (void)pairingManagerWillBeginPairing:(id)arg1 fitnessMachineToken:(id)arg2;
@property(readonly, nonatomic) id <HDMetricsCollector> metricsCollector;
@property(readonly, nonatomic) id <HDFitnessMachineConnectionInitiatorProtocol> connectionInitiatorServer;
- (void)_queue_performBlockOnConnections:(CDUnknownBlockType)arg1;
- (_Bool)_queue_connectionIsRegistered:(id)arg1;
- (void)_queue_removeConnectionWithUUID:(id)arg1;
- (void)_queue_addConnection:(id)arg1;
- (id)_queue_connectionWithUUID:(id)arg1;
- (void)_queue_registerClient:(id)arg1 withConnectionUUID:(id)arg2;
- (void)stateTimersMfaTimeout:(id)arg1;
- (void)stateTimersRetryConnectionTimeout:(id)arg1;
- (void)stateTimersDisconnectTimeout:(id)arg1;
- (void)stateTimersWaitForMachineStartTimeout:(id)arg1;
- (void)stateTimersPauseTimeout:(id)arg1;
- (void)_queue_handleMFASuccess;
- (void)_queue_deliverErrorToAllClients:(id)arg1;
- (void)_queue_deliverFailedWithError:(id)arg1 toConnectionUUID:(id)arg2;
- (void)_queue_deliverConnectionStateChangedFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2 error:(id)arg3 notifyingPairingManager:(_Bool)arg4;
- (void)_queue_deliverMachineStateChangedFromState:(unsigned long long)arg1 date:(id)arg2;
- (void)_queue_deliverMachineInformationUpdatedNotifyingPairingManager:(_Bool)arg1;
- (void)_queue_deliverNFCDetected:(id)arg1;
- (void)_queue_recoverSessionWithConfiguration:(id)arg1;
- (void)_queue_setConnectionState:(unsigned long long)arg1 error:(id)arg2;
- (void)_queue_setMachineState:(unsigned long long)arg1 date:(id)arg2;
- (void)_queue_setDeviceInformation:(id)arg1;
- (void)_queue_tearDownAfterStopEvent;
- (void)_queue_resetConnectionForcing:(_Bool)arg1;
- (void)_queue_flushCharacteristicDataBuffer;
- (void)_queue_handleDataTransferRequirementsUpdated;
- (void)_queue_handleConnectionSuccessIfPossible;
- (void)_queue_handleBluetoothStatusUpdate:(long long)arg1 error:(id)arg2;
- (void)_queue_handleBeginPairing:(id)arg1;
- (void)_queue_handleBluetoothDisconnection;
- (void)_queue_disconnectFitnessMachineFromBluetooth;
- (_Bool)_queue_waitingOnInitialStatusAndData;
- (void)_queue_handleInitialStateIfNecessary;
- (_Bool)_queue_handleInitialMachineDataIfNecessary:(id)arg1;
- (_Bool)_queue_handleInitialMachineStatusIfNecessary:(id)arg1;
- (void)_queue_handleReceivedMachineStatus:(id)arg1;
- (void)_queue_handleReceivedEnhancedFTMSCharacteristic:(id)arg1;
- (void)_queue_handleReceivedDataCharacteristic:(id)arg1;
- (void)_queue_handleReceivedCharacteristic:(id)arg1 device:(id)arg2 error:(id)arg3;
- (void)_queue_handleOrBufferReceivedCharacteristic:(id)arg1 sessionIdentifier:(unsigned long long)arg2 device:(id)arg3 error:(id)arg4;
- (void)_queue_reconnectFitnessMachineWithError:(id)arg1;
- (void)_queue_handleConnectionStatus:(long long)arg1 finished:(_Bool)arg2 error:(id)arg3;
- (unsigned long long)connectionOptionsForSession:(id)arg1 isReconnect:(_Bool)arg2;
- (void)_queue_connectFitnessMachineIsReconnect:(_Bool)arg1;
- (void)removeFitnessMachineSessionObserver:(id)arg1;
- (void)addFitnessMachineSessionObserver:(id)arg1 queue:(id)arg2;
- (void)finishSessionWithConfiguration:(id)arg1;
- (void)recoverSessionWithConfiguration:(id)arg1;
- (id)currentSessionRecoveryConfiguration;
- (void)clientInvalidatedWithConnectionUUID:(id)arg1;
- (void)_queue_endFitnessMachineConnectionForFitnessMachineSessionUUID:(id)arg1 withConnectionUUID:(id)arg2 forcingReset:(_Bool)arg3;
- (void)endFitnessMachineSessionWithUUID:(id)arg1;
- (void)endFitnessMachineConnectionForFitnessMachineSessionUUID:(id)arg1 withConnectionUUID:(id)arg2;
- (void)endFitnessMachineConnectionWithUUID:(id)arg1;
- (void)markClientReadyWithConnectionUUID:(id)arg1;
- (void)registerClient:(id)arg1 withConnectionUUID:(id)arg2;
- (void)_setQueue:(id)arg1;
- (void)dealloc;
- (id)initWithProfile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

