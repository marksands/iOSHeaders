//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "UIDictationConnectionDelegate.h"
#import "UIDictationConnectionTokenFilterProtocol.h"
#import "_UITouchPhaseChangeDelegate.h"

@class CADisplayLink, NSMutableArray, NSString, NSTimer, UIAlertView, UIDictationConnection, UIDictationConnectionPreferences, UIDictationStreamingOperations, UIKeyboardInputMode, UIWindow, _UIDictationPrivacySheetController, _UIDictationTelephonyMonitor;

__attribute__((visibility("hidden")))
@interface UIDictationController : NSObject <UIDictationConnectionDelegate, UIDictationConnectionTokenFilterProtocol, _UITouchPhaseChangeDelegate>
{
    UIDictationConnection *_dictationConnection;
    UIDictationConnectionPreferences *_preferences;
    NSTimer *_recordingLimitTimer;
    UIAlertView *_dictationAvailableSoonAlert;
    _Bool _connectionWasAlreadyAliveForStatisticsLogging;
    UIDictationStreamingOperations *_streamingOperations;
    NSString *_language;
    _Bool _recievingResults;
    _Bool _streamingAnimationActive;
    double _lastAnimationUpdateTimeStamp;
    CDUnknownBlockType _finalResultsOperation;
    CADisplayLink *_streamingAnimationDisplayLink;
    _Bool cancelledByWaitingForLocalResults;
    long long _updatingDocument;
    _Bool _deferredCancellationRequested;
    _Bool _ignoreFinalizePhrases;
    _Bool _isOfflineMetricsSessionActive;
    _Bool _didUseOfflineDictation;
    long long _lastOfflineDictationMetricEvent;
    _UIDictationTelephonyMonitor *_monitor;
    NSString *_prefixTextForStart;
    NSString *_selectionTextForStart;
    NSString *_postfixTextForStart;
    _Bool _performingStreamingEditingOperation;
    _Bool _discardNextHypothesis;
    _Bool _hasPreheated;
    _Bool _wantsAvailabilityMonitoringWhenAppActive;
    NSString *_activationIdentifier;
    NSMutableArray *_pendingEdits;
    NSString *_previousHypothesis;
    NSString *_lastHypothesis;
    NSString *_targetHypothesis;
    UIWindow *_dictationPresenterWindow;
    _UIDictationPrivacySheetController *_dictationPrivacySheetController;
    unsigned long long _reasonType;
    NSString *_lastRecognitionText;
    id _lastCorrectionIdentifier;
    UIKeyboardInputMode *_currentInputModeForDictation;
    UIKeyboardInputMode *_keyboardInputModeToReturn;
    struct _NSRange _insertionRange;
}

+ (void)poppedLastStreamingOperation;
+ (_Bool)usingTypeAndTalk;
+ (id)stringForViewMode:(int)arg1;
+ (id)stringForState:(int)arg1;
+ (void)logDictationString:(id)arg1;
+ (void)didBeginEditingInTextView:(id)arg1;
+ (id)streamingHypothesisForPhrases:(id)arg1;
+ (_Bool)dictationInfoIsOnScreen;
+ (_Bool)_applicationIsActive;
+ (id)activeConnection;
+ (int)viewMode;
+ (_Bool)starkScreenExists;
+ (_Bool)remoteCanDictateCurrentInputMode;
+ (void)updateLandingView;
+ (void)performOperations:(CDUnknownBlockType)arg1 keyboardShifted:(_Bool)arg2;
+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4 useServerCapitalization:(_Bool)arg5;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;
+ (void)siriPreferencesChanged;
+ (void)applicationDidEnterBackgroundNotification;
+ (void)applicationWillResignActive;
+ (void)applicationDidBecomeActive;
+ (id)bestInterpretationForDictationResult:(id)arg1;
+ (id)serializedDictationPhrases:(id)arg1;
+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;
+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;
+ (_Bool)takesPressesEnded:(id)arg1 forTextView:(id)arg2;
+ (_Bool)takesPressesChanged:(id)arg1 forTextView:(id)arg2;
+ (_Bool)takesPressesBegan:(id)arg1 forTextView:(id)arg2;
+ (_Bool)shouldHideCursorForTextView:(id)arg1;
+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;
+ (_Bool)isTextViewOnStarkScreen:(id)arg1;
+ (void)didOneFingerTapInTextView:(id)arg1;
+ (void)keyboardDidUpdateOnScreenStatus;
+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2;
+ (id)UIDictationStartStopReasonTypeDescription:(unsigned long long)arg1;
+ (void)logCorrectionStatisticsForDelegate:(id)arg1;
+ (_Bool)dictationIsFunctional;
+ (_Bool)fetchCurrentInputModeSupportsDictation;
+ (_Bool)checkTraitsSupportDictation:(id)arg1;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 autocapitalization:(long long)arg3 capitalization:(unsigned long long)arg4;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 capitalization:(unsigned long long)arg3;
+ (_Bool)isRunning;
+ (id)sharedInstance;
+ (id)activeInstance;
+ (double)serverManualEndpointingThreshold;
+ (_Bool)usingServerManualEndpointingThreshold;
@property(nonatomic) _Bool wantsAvailabilityMonitoringWhenAppActive; // @synthesize wantsAvailabilityMonitoringWhenAppActive=_wantsAvailabilityMonitoringWhenAppActive;
@property(retain, nonatomic) UIKeyboardInputMode *keyboardInputModeToReturn; // @synthesize keyboardInputModeToReturn=_keyboardInputModeToReturn;
@property(retain, nonatomic) UIKeyboardInputMode *currentInputModeForDictation; // @synthesize currentInputModeForDictation=_currentInputModeForDictation;
@property(copy, nonatomic) id lastCorrectionIdentifier; // @synthesize lastCorrectionIdentifier=_lastCorrectionIdentifier;
@property(copy, nonatomic) NSString *lastRecognitionText; // @synthesize lastRecognitionText=_lastRecognitionText;
@property(nonatomic) unsigned long long reasonType; // @synthesize reasonType=_reasonType;
@property(retain, nonatomic) _UIDictationPrivacySheetController *dictationPrivacySheetController; // @synthesize dictationPrivacySheetController=_dictationPrivacySheetController;
@property(retain, nonatomic) UIWindow *dictationPresenterWindow; // @synthesize dictationPresenterWindow=_dictationPresenterWindow;
@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;
@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;
@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
@property(nonatomic) _Bool performingStreamingEditingOperation; // @synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(copy, nonatomic) NSString *activationIdentifier; // @synthesize activationIdentifier=_activationIdentifier;
- (void)markKeyboardDidReset;
- (void)markKeyboardDeleteMetricEvent;
- (void)markKeyboardInputMetricEvent;
- (void)_markOfflineDictationInputMetricEvent;
- (id)_currentLanguageForOfflineDictationMetrics;
- (id)_assistantCompatibleLanguageCodeForInputMode:(id)arg1;
- (void)_endOfflineMetricsSession;
- (void)_beginOfflineMetricsSession;
- (void)setLanguage:(id)arg1;
- (id)language;
- (void)preheatIfNecessary;
- (_Bool)isRecievingResults;
- (void)dictationConnectionDidFinish:(id)arg1;
- (void)dictationConnectionDidCancel:(id)arg1;
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;
- (void)dictationConnection:(id)arg1 didReceiveSearchResults:(id)arg2 recognizedText:(id)arg3 stable:(_Bool)arg4 final:(_Bool)arg5;
- (id)_containingSearchBarForView:(id)arg1;
- (void)dictationConnection:(id)arg1 didFailRecognitionWithError:(id)arg2;
- (void)dictationConnection:(id)arg1 didFailRecordingWithError:(id)arg2;
- (void)dictationConnectionDidCancelRecording:(id)arg1;
- (void)dictationConnectionDidEndRecording:(id)arg1;
- (void)dictationConnectionDidStartRecording:(id)arg1;
- (void)dictationConnectionWillStartRecording:(id)arg1;
- (void)dictationConnection:(id)arg1 didFilterTokensWithFilterState:(id)arg2 forFinalize:(_Bool)arg3;
- (void)dictationConnection:(id)arg1 filterState:(id)arg2 processFilteredToken:(id)arg3 forFinalize:(_Bool)arg4;
- (_Bool)dictationConnection:(id)arg1 filterState:(id)arg2 shouldCheckpointAtToken:(id)arg3;
- (CDUnknownBlockType)dictationBlockForToken:(id)arg1;
- (id)dictationConnection:(id)arg1 willFilterTokensWithLanguageModel:(id)arg2 forFinalize:(_Bool)arg3;
- (void)dictationConnection:(id)arg1 receivedInterpretation:(id)arg2 languageModel:(id)arg3 secureInput:(_Bool)arg4;
- (void)setupToInsertResultForNewHypothesis:(id)arg1;
- (void)_updateFromSelectedTextRange:(id)arg1 withNewHypothesis:(id)arg2;
- (id)_getBestHypothesisRangeGivenHintRange:(id)arg1 inputDelegate:(id)arg2 hypothesisRange:(struct _NSRange *)arg3 documentTextInRange:(id *)arg4;
- (id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2;
- (id)_rangeByExtendingRange:(id)arg1 backward:(long long)arg2 forward:(long long)arg3 inputDelegate:(id)arg4;
- (void)_displayLinkFired:(id)arg1;
- (void)_startStreamingAnimations;
- (void)_stopStreamingAnimation;
- (void)dictationConnection:(id)arg1 finalizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4 secureInput:(_Bool)arg5;
- (void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3 secureInput:(_Bool)arg4;
- (void)_clearExistingText;
- (void)_deleteBackwardIntoText;
- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)resultWithTrailingSpace:(id)arg1;
- (void)logAlternativeSelected:(id)arg1 correctionIdentifier:(id)arg2;
- (void)didShowAlternatives:(id)arg1;
- (void)logDidAcceptDictationResult:(id)arg1 reasonType:(unsigned long long)arg2;
- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;
- (void)restartDictationForTypeAndTalk;
- (_Bool)dictationIsModifyingText;
- (void)performIgnoringDocumentChanges:(CDUnknownBlockType)arg1;
- (_Bool)isIgnoringDocumentChanges;
- (void)stopDictation;
- (void)stopDictationIgnoreFinalizePhrases;
- (void)stopDictation:(_Bool)arg1;
- (void)cancelDictationForTextStoreChangesInResponder:(id)arg1;
- (void)cancelDictation;
- (struct _NSRange)_getRangeOfString:(id)arg1 inDocumentText:(id)arg2;
- (void)switchToDictationInputMode;
- (void)_touchPhaseChangedForTouch:(id)arg1;
- (void)_presentPrivacySheetWithCompletion:(CDUnknownBlockType)arg1;
- (void)_presentOptInAlertForDictationInputMode;
- (void)_presentOptInAlertWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentOptInAlertWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldPresentOptInAlert;
- (void)_endEnableDictationPromptAnimated:(_Bool)arg1;
- (void)_beginEnableDictationPrompt;
- (void)_createDictationPresenterWindowIfNecessary;
- (void)setDictationInfoOnScreenNotifyKey:(_Bool)arg1;
- (void)stopHelpMessageDisplay;
- (_Bool)_systemLanguageSupportsDictation;
- (void)startHelpMessageDisplay;
- (void)clearTextFieldPlaceholder;
- (void)_displaySecureContentsAsPlainText:(_Bool)arg1 afterDelay:(double)arg2;
- (void)switchToDictationInputModeWithTouch:(id)arg1;
- (void)switchToDictationInputModeWithTouch:(id)arg1 withKeyboardInputMode:(id)arg2;
- (void)switchToDictationLanguage:(id)arg1;
- (void)startDictation;
- (void)_startDictation;
- (void)setupForDictationStart;
- (void)setupForStreamingDictationStart;
- (void)dismissDictationView:(id)arg1;
- (_Bool)dictationEnabled;
- (id)connectionForStatisticsLogging;
- (void)releaseConnectionAfterStatisticsLogging;
- (void)releaseConnectionAfterDictationRequest;
- (void)releaseConnection;
- (id)dictationConnection;
- (void)startRecordingLimitTimer;
- (void)stopDictationByTimer;
- (void)cancelRecordingLimitTimer;
- (void)dealloc;
- (int)state;
- (void)errorAnimationDidFinish;
- (void)setState:(int)arg1;
- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)_runFinalizeOperation:(_Bool)arg1;
- (void)_runFinalizeOperation;
- (void)_setupHypothesisAsFinalResults;
- (void)_setFinalResultHandler:(CDUnknownBlockType)arg1;
- (void)_completeStartDictationWithContinuation:(CDUnknownBlockType)arg1;
- (void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)startConnection;
- (void)completeStartConnection;
- (void)dictationConnection:(id)arg1 updateOptions:(id)arg2;
- (id)selectedTextForInputDelegate:(id)arg1;
- (id)postfixTextForInputDelegate:(id)arg1;
- (id)prefixTextForInputDelegate:(id)arg1;
- (id)fieldIdentifierInputDelegate:(id)arg1;
- (float)audioLevel;
- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;
- (_Bool)supportsDictationLanguage:(id)arg1 error:(id *)arg2;
- (id)languageCodeForAssistantLanguageCode:(id)arg1;
- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;
- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;
- (void)_restartDictation;
- (void)setDictationInputMode:(id)arg1;
- (_Bool)disabledDueToTelephonyActivity;
- (id)streamingOperations;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

