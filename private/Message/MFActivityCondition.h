//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MFActivityCondition.h"
#import "MFActivityConditionBuilder.h"

@class MFCancelationToken, MFObservable, NSString;

@interface MFActivityCondition : NSObject <MFActivityConditionBuilder, MFActivityCondition>
{
    _Bool _requireExternalPower;
    _Bool _requireWiFi;
    _Bool _requireScreenLocked;
    _Bool _requireLowPowerModeDisabled;
    _Bool _satisfied;
    float _minBatteryLevel;
    long long _maxThermalPressureLevel;
    MFCancelationToken *_cancellationToken;
    id <MFScheduler> _scheduler;
}

+ (id)alwaysSatisfiedCondition;
@property(retain, nonatomic) id <MFScheduler> scheduler; // @synthesize scheduler=_scheduler;
@property(retain, nonatomic) MFCancelationToken *cancellationToken; // @synthesize cancellationToken=_cancellationToken;
@property(nonatomic, getter=isSatisfied) _Bool satisfied; // @synthesize satisfied=_satisfied;
@property(nonatomic) long long maxThermalPressureLevel; // @synthesize maxThermalPressureLevel=_maxThermalPressureLevel;
@property(nonatomic) _Bool requireLowPowerModeDisabled; // @synthesize requireLowPowerModeDisabled=_requireLowPowerModeDisabled;
@property(nonatomic) float minBatteryLevel; // @synthesize minBatteryLevel=_minBatteryLevel;
@property(nonatomic) _Bool requireScreenLocked; // @synthesize requireScreenLocked=_requireScreenLocked;
@property(nonatomic) _Bool requireWiFi; // @synthesize requireWiFi=_requireWiFi;
@property(nonatomic) _Bool requireExternalPower; // @synthesize requireExternalPower=_requireExternalPower;
- (void).cxx_destruct;
- (_Bool)_isValidConfiguration;
@property(readonly, nonatomic) MFObservable *conditionsObservable;
- (id)initWithBuilder:(CDUnknownBlockType)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

