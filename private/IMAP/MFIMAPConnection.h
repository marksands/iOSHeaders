//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MFConnection.h"

@class MFIMAPCommandPipeline, MFIMAPDownloadCache, MFInvocationQueue, MFWeakReferenceHolder, NSArray, NSMutableData, NSMutableSet, NSString;

@interface MFIMAPConnection : MFConnection
{
    id <MFIMAPMailboxListFilter> _mailboxListFilter;
    unsigned int _capabilityFlags:24;
    _Bool _verifiedESearchResponse;
    _Bool _gotBadResponse;
    int _tag;
    double _connectTime;
    unsigned int _connectionState:3;
    NSString *_separatorChar;
    NSString *_serverNamespace;
    NSString *_selectedMailbox;
    NSMutableSet *_capabilities;
    NSArray *_lastRequiredHeadersArray;
    NSString *_lastRequiredHeaders;
    unsigned int _commandNumber;
    NSMutableData *_data;
    unsigned int _readBufferSize;
    double _expirationTime;
    MFInvocationQueue *_streamEventQueue;
    NSArray *_additionalHeadersForFetch;
    unsigned int _noModSequence:1;
    struct {
        MFWeakReferenceHolder *holder;
        void *delegate;
        unsigned int shouldHandleUntaggedResponse:1;
        unsigned int didReceiveResponse:1;
        unsigned int didFinishSelect:1;
        unsigned int didDisconnect:1;
        unsigned int didBeginBodyLoad:1;
        unsigned int didReceiveMoreBodyData:1;
        unsigned int didFinishBodyDataLoad:1;
        unsigned int bodyDataReadSize:1;
        unsigned int setServerMessageCount:1;
        unsigned int setHighestModSequence:1;
        unsigned int willRemoveDelegation:1;
        unsigned int shouldStartIdle:1;
    } _delegateState;
    MFIMAPDownloadCache *_downloadCache;
    MFIMAPCommandPipeline *_fetchPipeline;
    unsigned long long _idleCommandSequenceNumber;
    id <MFCancelable> _idleSubscriptionCancelable;
}

+ (void)setReadSizeParameters;
+ (void)initialize;
+ (id)_UIDPlusInfoFromIMAPResponses:(id)arg1;
@property(retain, nonatomic) id <MFCancelable> idleSubscriptionCancelable; // @synthesize idleSubscriptionCancelable=_idleSubscriptionCancelable;
@property(nonatomic) unsigned long long idleCommandSequenceNumber; // @synthesize idleCommandSequenceNumber=_idleCommandSequenceNumber;
@property(nonatomic) int tag; // @synthesize tag=_tag;
@property(readonly, nonatomic) _Bool gotBadResponse; // @synthesize gotBadResponse=_gotBadResponse;
@property(readonly, nonatomic) double connectTime; // @synthesize connectTime=_connectTime;
- (void)didFinishCommands:(CDStruct_1f207a6d *)arg1 count:(unsigned long long)arg2;
- (_Bool)sendResponsesForUIDs:(id)arg1 fields:(id)arg2 flagSearchResults:(id)arg3 toQueue:(id)arg4;
- (id)searchUIDs:(id)arg1 withFlagRequests:(id)arg2;
- (_Bool)sendUidResponsesForSearchArguments:(id)arg1 toQueue:(id)arg2;
- (_Bool)sendUidAndFlagResponsesForUIDs:(id)arg1 sequenceIdentifierProvider:(id)arg2 flagSearchResults:(id)arg3 toQueue:(id)arg4;
- (_Bool)sendSkeletonResponsesForUIDs:(id)arg1 includeTo:(_Bool)arg2 toQueue:(id)arg3;
- (_Bool)sendResponsesForUIDFetchForUIDs:(id)arg1 fields:(id)arg2 toQueue:(id)arg3;
- (_Bool)sendResponsesForCommand:(CDStruct_1f207a6d *)arg1 toQueue:(id)arg2;
- (id)_responseFromSendingCommands:(CDStruct_1f207a6d *)arg1 count:(unsigned long long)arg2;
- (_Bool)_isFetchResponseValid:(id)arg1;
- (id)_fetchArgumentForMessageSkeletonsWithHeaders:(id)arg1;
- (id)_fetchArgumentForMessageUidsAndFlags;
- (id)_readDataOfLength:(long long)arg1;
- (unsigned int)literalChunkSize;
- (void)notifyDelegateOfBodyLoadCompletion:(id)arg1 section:(id)arg2;
- (void)notifyDelegateOfBodyLoadAppendage:(id)arg1 section:(id)arg2;
- (void)notifyDelegateOfBodyLoadStart:(id)arg1 section:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)lock;
- (_Bool)startTLSForAccount:(id)arg1;
- (_Bool)authenticateUsingAccount:(id)arg1 authenticator:(id)arg2;
- (id)parenthesizedStringWithObjects:(id)arg1;
- (id)messageSetForNumbers:(id)arg1;
- (id)messageSetForNumbers:(id)arg1 range:(struct _NSRange)arg2;
- (id)messageSetForNumbers:(id)arg1 range:(struct _NSRange)arg2 maxTokens:(unsigned long long)arg3 indexOfLastNumber:(unsigned long long *)arg4;
- (id)messageSetForRange:(CDStruct_c0454aff)arg1 butNotNumbers:(id)arg2;
- (id)messageSetForRange:(CDStruct_c0454aff)arg1;
- (_Bool)_doUidFetchWithRange:(CDStruct_c0454aff)arg1 arguments:(id)arg2 validateMessage:(_Bool)arg3 responses:(id)arg4;
- (void)setReadBufferSize:(unsigned int)arg1;
- (unsigned int)readBufferSize;
- (void)setReadBufferSizeFromElapsedTime:(double)arg1 bytesRead:(unsigned long long)arg2;
- (_Bool)performCustomCommand:(id)arg1 withArguments:(id)arg2;
- (id)fetchUniqueRemoteIDsForUids:(id)arg1;
- (id)fetchMessageIdsForUids:(id)arg1;
- (id)fetchHeadersForUid:(unsigned int)arg1;
- (void)fetchTotalSize:(unsigned long long *)arg1 andMessageCount:(unsigned int *)arg2;
- (id)fetchArgumentForMessageSkeletonsWithTo:(_Bool)arg1;
@property(copy) NSArray *additionalHeadersForFetch;
- (id)_headersToFetchIncludingThoseRequiredForRouting:(_Bool)arg1 withRecipients:(_Bool)arg2;
- (_Bool)appendData:(id)arg1 toMailboxNamed:(id)arg2 flags:(id)arg3 dateReceived:(id)arg4 newMessageInfo:(id *)arg5;
- (_Bool)copyUids:(id)arg1 toMailboxNamed:(id)arg2 newMessageInfo:(id *)arg3;
- (id)_responseFromSendingCommand:(CDStruct_1f207a6d *)arg1 andPossiblyCreateMailbox:(id)arg2;
- (_Bool)deleteMessagesOlderThanNumberOfDays:(int)arg1;
- (_Bool)storeFlags:(id)arg1 state:(_Bool)arg2 forRange:(CDStruct_c0454aff)arg3;
- (_Bool)storeFlags:(id)arg1 state:(_Bool)arg2 forUids:(id)arg3;
- (_Bool)storeFlags:(id)arg1 state:(_Bool)arg2 forMessageSet:(id)arg3;
- (id)searchUidSet:(id)arg1 forNewMessageIDs:(id)arg2;
- (unsigned int)getMailboxIDForUID:(unsigned int)arg1;
- (void)_updateSearchCapabilityWithAccount:(id)arg1;
- (unsigned long long)countForSearchOfUidSet:(id)arg1 forTerms:(id)arg2 success:(_Bool *)arg3;
- (unsigned long long)countForSearchOfIDSet:(id)arg1 forTerms:(id)arg2 success:(_Bool *)arg3;
- (id)searchIDSet:(id)arg1 forTerms:(id)arg2 success:(_Bool *)arg3;
- (id)searchUidSet:(id)arg1 forTerms:(id)arg2 success:(_Bool *)arg3;
- (id)copyArgumentForSearchTerm:(id)arg1;
- (_Bool)_sendMailboxCommand:(int)arg1 withArguments:(id)arg2;
- (id)quotaPercentagesForMailbox:(id)arg1;
- (_Bool)getQuotaForRootName:(id)arg1;
- (_Bool)unsubscribeMailbox:(id)arg1;
- (_Bool)subscribeMailbox:(id)arg1;
- (_Bool)renameMailbox:(id)arg1 toMailbox:(id)arg2;
- (_Bool)deleteMailbox:(id)arg1;
- (_Bool)createMailbox:(id)arg1;
- (id)selectedMailbox;
- (_Bool)selectMailbox:(id)arg1 withAccount:(id)arg2;
- (_Bool)examineMailbox:(id)arg1;
- (void)fetchStatusForMailboxes:(id)arg1 args:(id)arg2;
- (_Bool)expungeUids:(id)arg1;
- (_Bool)expunge;
- (void)locked_scheduleIdleResetAfterDelay:(double)arg1;
- (void)scheduleIdleReset;
- (void)locked_scheduleIdle;
@property(readonly, nonatomic, getter=isIdle) _Bool idle;
- (void)finishIdle;
- (void)locked_finishIdle;
- (void)locked_startIdle;
- (void)handleBytesAvailable;
- (void)handleStreamEvent:(unsigned long long)arg1;
- (void)unselect;
- (_Bool)closeAndLogout;
- (void)close;
- (id)subscribedListingForMailbox:(id)arg1 options:(int)arg2;
- (id)listingForMailbox:(id)arg1 options:(int)arg2 getSpecialUse:(_Bool)arg3 statusDataItems:(id)arg4 statusEntriesByMailbox:(id *)arg5;
- (id)_listingForMailbox:(id)arg1 options:(int)arg2 getSpecialUse:(_Bool)arg3 statusDataItems:(id)arg4 statusEntriesByMailbox:(id *)arg5 withCommand:(int)arg6;
- (id)_doListCommand:(int)arg1 withReference:(id)arg2 mailboxName:(id)arg3 options:(int)arg4 getSpecialUse:(_Bool)arg5 statusDataItems:(id)arg6 statusEntriesByMailbox:(id *)arg7;
- (id)_doNamespaceCommand;
- (id)serverPathPrefix;
- (id)separatorChar;
- (_Bool)logout;
- (_Bool)loginWithAccount:(id)arg1 password:(id)arg2;
- (int)_doIMAPLoginForAccount:(id)arg1 quotedUsername:(id)arg2 password:(id)arg3;
- (void)_updateCapabilitiesForAccount:(id)arg1 withAuthenticationResponse:(id)arg2;
- (id)_serverErrorForAccount:(id)arg1 response:(id)arg2 command:(CDStruct_1f207a6d *)arg3;
- (_Bool)authenticateUsingAccount:(id)arg1;
- (void)noop;
- (_Bool)supportsCapability:(int)arg1;
- (id)capabilities;
- (id)_errorForResponse:(id)arg1 commandParams:(CDStruct_1f207a6d *)arg2;
- (id)_copyNextTaggedOrContinuationResponseForCommand:(CDStruct_1f207a6d *)arg1;
- (id)_copyNextServerResponseForCommand:(CDStruct_1f207a6d *)arg1;
- (unsigned long long)_sendCommands:(CDStruct_1f207a6d *)arg1 count:(unsigned long long)arg2 response:(id *)arg3;
- (int)fillLiteralBuffer:(char *)arg1 count:(unsigned long long)arg2 dataLength:(unsigned long long)arg3 nonSynchronizingLiteral:(_Bool *)arg4;
- (_Bool)loginDisabled;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (int)connectionState;
- (void)disconnect;
- (void)disconnectAndNotifyDelegate:(_Bool)arg1;
- (_Bool)connectUsingAccount:(id)arg1;
- (_Bool)_tryConnectionUsingAccount:(id)arg1;
- (_Bool)_doBasicConnectionUsingAccount:(id)arg1;
- (void)_enableCompressionIfSupported;
- (void)_sendApplePushForAccountIfSupported:(id)arg1;
- (void)_sendClientInfoIfSupported;
- (void)_fetchCapabilities;
- (void)_addCapabilities:(id)arg1;
- (void)_clearCapabilities;
- (void)setMailboxListFilter:(id)arg1;
- (id)mailboxListFilter;
@property(readonly, retain, nonatomic) MFIMAPDownloadCache *downloadCache; // @synthesize downloadCache=_downloadCache;
@property(readonly, retain, nonatomic) MFIMAPCommandPipeline *fetchPipeline; // @synthesize fetchPipeline=_fetchPipeline;
@property(nonatomic) __weak id <MFIMAPConnectionDelegate> delegate;
- (id)copyDiagnosticInformation;
- (void)dealloc;
- (id)init;
- (_Bool)sendResponsesForCondStoreFlagFetchForUIDs:(id)arg1 withSequenceIdentifier:(id *)arg2 toQueue:(id)arg3;
- (void)parseESearchResponseWithContext:(id)arg1;
- (void)parseSearchReturn:(id)arg1;
- (id)parseIndexSetFromSequenceSet:(id)arg1;
- (id)eSearchIDSet:(id)arg1 areMessageSequenceNumbers:(_Bool)arg2 forTerms:(id)arg3 success:(_Bool *)arg4 returning:(int)arg5;
- (id)eSearchIDSet:(id)arg1 areMessageSequenceNumbers:(_Bool)arg2 arguments:(id)arg3 success:(_Bool *)arg4 returning:(int)arg5;
- (id)uidsReferencedBy:(id)arg1;
- (id)_getFirstLevelMessageIDsForReference:(id)arg1;
- (id)_uidsForMessageIDs:(id)arg1 excludeDeleted:(_Bool)arg2;
- (id)_searchUidsForMessageIDs:(id)arg1 excludeDeleted:(_Bool)arg2;
- (id)_getReferencesForMessageSet:(id)arg1;
- (id)_messageIDsFromFetchResultData:(id)arg1;
- (long long)_moveMessageSet:(id)arg1 toMailboxName:(id)arg2 command:(int)arg3 newMessageInfo:(id *)arg4;
- (long long)moveSequenceSet:(id)arg1 toMailboxName:(id)arg2 newMessageInfo:(id *)arg3;
- (long long)moveUIDSet:(id)arg1 toMailboxNamed:(id)arg2 newMessageInfo:(id *)arg3;

@end

