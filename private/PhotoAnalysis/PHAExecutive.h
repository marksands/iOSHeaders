//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSXPCListenerDelegate.h"
#import "PHPhotoLibraryAvailabilityObserver.h"

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_source>, NSObject<OS_voucher>, NSObject<OS_xpc_object>, NSString, PFSerialQueue<PFDTransactionDispatchQueue>, PHAActivityLog, PHAPhotoLibraryList, PHASleepWakeMonitor;

@interface PHAExecutive : NSObject <PHPhotoLibraryAvailabilityObserver, NSXPCListenerDelegate>
{
    _Bool _isPhotoAnalysisAgent;
    _Bool _backgroundAnalysisActivityTriggered;
    PFSerialQueue<PFDTransactionDispatchQueue> *_executiveStateQueue;
    // Error parsing type: AB, name: _turboMode
    NSObject<OS_voucher> *_turboModeBoostVoucher;
    NSMutableArray *_processingLog;
    PHAActivityLog *_currentLog;
    struct os_unfair_lock_s _connectedClientsLock;
    _Bool _shouldDeferActivity;
    unsigned char _state;
    PHAActivityLog *_activityLog;
    NSMutableSet *_clients;
    NSMutableDictionary *_managersByLibraryPath;
    PHAPhotoLibraryList *_photoLibraryList;
    PHASleepWakeMonitor *_sleepWakeMonitor;
    long long _countOfCoordinatorsRunningBackgroundAnalysis;
    NSObject<OS_dispatch_source> *_backgroundAnalysisMonitorTimer;
    NSObject<OS_xpc_object> *_backgroundAnalysisActivity;
}

+ (void)registerEmptyBackgroundActivity;
@property(retain) NSObject<OS_xpc_object> *backgroundAnalysisActivity; // @synthesize backgroundAnalysisActivity=_backgroundAnalysisActivity;
@property(retain) NSObject<OS_dispatch_source> *backgroundAnalysisMonitorTimer; // @synthesize backgroundAnalysisMonitorTimer=_backgroundAnalysisMonitorTimer;
@property long long countOfCoordinatorsRunningBackgroundAnalysis; // @synthesize countOfCoordinatorsRunningBackgroundAnalysis=_countOfCoordinatorsRunningBackgroundAnalysis;
@property(retain) PHASleepWakeMonitor *sleepWakeMonitor; // @synthesize sleepWakeMonitor=_sleepWakeMonitor;
@property(retain) PHAPhotoLibraryList *photoLibraryList; // @synthesize photoLibraryList=_photoLibraryList;
@property unsigned char state; // @synthesize state=_state;
@property(retain) NSMutableDictionary *managersByLibraryPath; // @synthesize managersByLibraryPath=_managersByLibraryPath;
@property(retain) NSMutableSet *clients; // @synthesize clients=_clients;
@property(readonly) PHAActivityLog *activityLog; // @synthesize activityLog=_activityLog;
- (void).cxx_destruct;
- (void)_cleanupAfterBackgroundActivityFinishedForDefer:(_Bool)arg1 skipActivityStateCheck:(_Bool)arg2 message:(id)arg3;
- (void)_registerBackgroundActivity;
- (void)_installBackgroundAnalysisMonitor;
- (void)_stopAllBackgroundAnalysisWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startBackgroundAnalysis;
- (void)handleOperation:(id)arg1;
- (void)photoLibraryDidBecomeUnavailable:(id)arg1;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)stopBackgroundActivityForManager:(id)arg1;
- (void)triggerBackgroundActivity;
- (void)checkQuiescenceForManager:(id)arg1;
- (void)dumpAnalysisStatusWithContext:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_localeDidChangeNotification:(id)arg1;
- (void)dispatchAsyncToExecutiveStateQueue:(CDUnknownBlockType)arg1;
- (void)terminateManagerIfQuiescentAndNoConnectedClients:(id)arg1;
- (void)removeClientHandler:(id)arg1;
- (id)clientInfoForManager:(id)arg1;
- (_Bool)hasConnectedClientsForManager:(id)arg1;
- (_Bool)hasPhotosConnectionForManager:(id)arg1;
- (void)terminateManagerForPhotoLibraryURL:(id)arg1;
- (id)managerForPhotoLibraryURL:(id)arg1;
- (id)_urlForSystemPhotoLibrary;
- (id)statusAsDictionary;
- (void)dumpStatusToLog;
- (void)addProcessingActivityToStatusDictionary:(id)arg1;
- (void)shutdown;
- (void)_backgroundActivityDidBegin;
- (_Bool)_photoAnalysisEnabled;
- (void)startup;
- (void)setTurboMode;
- (_Bool)isTurboMode;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

