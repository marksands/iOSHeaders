//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSManagedObject.h"

#import "RMUniquelySerializableManagedObject.h"

@class NSArray, NSData, NSDate, NSString, RMCoreOrganization;

@interface RMCoreTransportPayload : NSManagedObject <RMUniquelySerializableManagedObject>
{
}

+ (id)fetchOrCreateWithDictionaryRepresentation:(id)arg1 inContext:(id)arg2 error:(id *)arg3;
+ (id)_fetchRequestForPayloadsWithGenerationHash:(id)arg1 currentHash:(id)arg2 previoushHash:(id)arg3;
+ (id)fetchTransportPayloadContext:(id)arg1 withIdentifier:(id)arg2 error:(id *)arg3;
+ (id)fetchLastTransportPayloadInContext:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
+ (id)fetchTransportPayloadInContext:(id)arg1 withGenerationHash:(id)arg2 currentHash:(id)arg3 previoushHash:(id)arg4 error:(id *)arg5;
+ (id)fetchRequestForPayloadsOfType:(id)arg1;
- (_Bool)canBeReplacedByPayload:(id)arg1;
- (_Bool)canChainPayload:(id)arg1;
- (void)delete;
- (id)dictionaryRepresentation;
- (void)updateWithDictionaryRepresentation:(id)arg1;
@property(copy, nonatomic) NSArray *destinations; // @dynamic destinations;
- (void)willSave;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(copy, nonatomic) NSString *currentHash; // @dynamic currentHash;
@property(readonly, copy) NSString *debugDescription;
@property(copy, nonatomic) NSString *generationHash; // @dynamic generationHash;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) NSString *identifier; // @dynamic identifier;
@property(retain, nonatomic) RMCoreOrganization *organization; // @dynamic organization;
@property(copy, nonatomic) NSData *payloadData; // @dynamic payloadData;
@property(copy, nonatomic) NSString *previousHash; // @dynamic previousHash;
@property(nonatomic) _Bool shouldRevert; // @dynamic shouldRevert;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSDate *timestamp; // @dynamic timestamp;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

