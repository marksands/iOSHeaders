//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class UIFont, UIImage;

@interface ASCompetitionScoreViewConfiguration : NSObject
{
    _Bool _showsScoreUnits;
    _Bool _uppercaseNames;
    _Bool _shouldAlwaysShowScore;
    _Bool _wantsScaledBaselineAlignment;
    long long _alignment;
    long long _division;
    UIFont *_nameFont;
    UIFont *_winningScoreFont;
    UIFont *_losingScoreFont;
    UIFont *_unitFont;
    UIFont *_winCountFont;
    double _winCountLabelBaselineOffset;
    double _winCountOffsetFromTop;
    double _nameLabelBaselineOffset;
    double _scoreLabelBaselineOffset;
    double _sideMargin;
    double _bottomMargin;
    double _minimumMiddleSpacing;
    double _opponentScoreViewWidth;
    UIImage *_winningScoreBadge;
    UIImage *_losingScoreBadge;
    struct CGSize _preferredWinCountSize;
}

+ (id)defaultCompanionFriendListConfiguration;
+ (id)defaultCompanionFriendDetailConfiguration;
+ (id)defaultGizmoFriendDetailConfiguration;
+ (id)defaultGizmoCompetitionProgressNotificationConfiguration;
+ (id)defaultGizmoCompetitionStartNotificationConfiguration;
+ (id)defaultGizmoFriendListConfiguration;
@property(nonatomic) _Bool wantsScaledBaselineAlignment; // @synthesize wantsScaledBaselineAlignment=_wantsScaledBaselineAlignment;
@property(nonatomic) _Bool shouldAlwaysShowScore; // @synthesize shouldAlwaysShowScore=_shouldAlwaysShowScore;
@property(nonatomic) _Bool uppercaseNames; // @synthesize uppercaseNames=_uppercaseNames;
@property(nonatomic) _Bool showsScoreUnits; // @synthesize showsScoreUnits=_showsScoreUnits;
@property(retain, nonatomic) UIImage *losingScoreBadge; // @synthesize losingScoreBadge=_losingScoreBadge;
@property(retain, nonatomic) UIImage *winningScoreBadge; // @synthesize winningScoreBadge=_winningScoreBadge;
@property(nonatomic) double opponentScoreViewWidth; // @synthesize opponentScoreViewWidth=_opponentScoreViewWidth;
@property(nonatomic) double minimumMiddleSpacing; // @synthesize minimumMiddleSpacing=_minimumMiddleSpacing;
@property(nonatomic) double bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property(nonatomic) double sideMargin; // @synthesize sideMargin=_sideMargin;
@property(nonatomic) double scoreLabelBaselineOffset; // @synthesize scoreLabelBaselineOffset=_scoreLabelBaselineOffset;
@property(nonatomic) double nameLabelBaselineOffset; // @synthesize nameLabelBaselineOffset=_nameLabelBaselineOffset;
@property(nonatomic) double winCountOffsetFromTop; // @synthesize winCountOffsetFromTop=_winCountOffsetFromTop;
@property(nonatomic) struct CGSize preferredWinCountSize; // @synthesize preferredWinCountSize=_preferredWinCountSize;
@property(nonatomic) double winCountLabelBaselineOffset; // @synthesize winCountLabelBaselineOffset=_winCountLabelBaselineOffset;
@property(retain, nonatomic) UIFont *winCountFont; // @synthesize winCountFont=_winCountFont;
@property(retain, nonatomic) UIFont *unitFont; // @synthesize unitFont=_unitFont;
@property(retain, nonatomic) UIFont *losingScoreFont; // @synthesize losingScoreFont=_losingScoreFont;
@property(retain, nonatomic) UIFont *winningScoreFont; // @synthesize winningScoreFont=_winningScoreFont;
@property(retain, nonatomic) UIFont *nameFont; // @synthesize nameFont=_nameFont;
@property(nonatomic) long long division; // @synthesize division=_division;
@property(nonatomic) long long alignment; // @synthesize alignment=_alignment;
- (void).cxx_destruct;

@end

