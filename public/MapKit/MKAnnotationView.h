//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIView.h"

#import "MKAnnotationRepresentation.h"
#import "MKLocatableObject.h"
#import "_MKKVOProxyDelegate.h"

@class CALayer, GEORouteMatch, MKCalloutView, MKUserLocationAnnotationViewProxy, NSMutableArray, NSString, UIImage, VKAnchorWrapper, _MKAnnotationViewAnchor, _MKAnnotationViewCustomFeatureAnnotation, _MKKVOProxy;

@interface MKAnnotationView : UIView <_MKKVOProxyDelegate, MKAnnotationRepresentation, MKLocatableObject>
{
    struct CLLocationCoordinate2D _presentationCoordinate;
    double _presentationCourse;
    CDUnknownBlockType _presentationCoordinateChangedCallback;
    struct CLLocationCoordinate2D _coordinate;
    MKUserLocationAnnotationViewProxy *_userLocationProxy;
    double _rotationRadians;
    _MKAnnotationViewAnchor *_anchor;
    GEORouteMatch *_routeMatch;
    double _mapRotationRadians;
    unsigned long long _hiddenReasons;
    NSMutableArray *_hiddenCompletionBlocks;
    double _realAlpha;
    struct CGPoint _realOffset;
    double _mapPitchRadians;
    CDStruct_80aa614a _mapDisplayStyle;
    float _selectionPriority;
    _MKKVOProxy *_annotationObserver;
    _MKAnnotationViewCustomFeatureAnnotation *_customFeatureAnnotation;
    id <MKAnnotation> _annotation;
    float _displayPriority;
    struct CGRect _collisionFrame;
    NSString *_clusteringIdentifier;
    UIImage *_image;
    MKCalloutView *_calloutView;
    UIView *_leftCalloutAccessoryView;
    UIView *_rightCalloutAccessoryView;
    UIView *_detailCalloutAccessoryView;
    long long _collisionMode;
    NSString *_reuseIdentifier;
    MKAnnotationView *_clusterAnnotationView;
    unsigned long long _mapType;
    unsigned long long _zIndex;
    struct CGPoint _centerOffset;
    struct CGPoint _calloutOffset;
    unsigned long long _dragState;
    struct {
        unsigned int pendingSelectionAnimated:1;
        unsigned int disabled:1;
        unsigned int selected:1;
        unsigned int canShowCallout:1;
        unsigned int isHighlighted:1;
        unsigned int canDisplayDisclosureInCallout:1;
        unsigned int canDisplayPlacemarkInCallout:1;
        unsigned int draggable:1;
        unsigned int useBalloonCallouts:1;
        unsigned int customTransformApplied:1;
        unsigned int internalTransformApplied:1;
        unsigned int animatingToCoordinate:1;
        unsigned int tracking:1;
        unsigned int pendingOffsetAnimation:1;
        unsigned int pendingHideAnimation:1;
        unsigned int setSelectState:2;
    } _flags;
    CALayer *_imageLayer;
    _Bool _animatingToCoordinate;
    _Bool _tracking;
    _Bool _pendingSelectionAnimated;
    double _direction;
    struct CGPoint _leftCalloutOffset;
    struct CGPoint _rightCalloutOffset;
}

+ (_Bool)_followsTerrain;
+ (_Bool)_isInitiallyHiddenWhenAdded;
+ (id)_disclosureCalloutButton;
+ (float)_defaultDisplayPriority;
+ (unsigned long long)_selectedZIndex;
+ (unsigned long long)_zIndex;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)currentLocationTitle;
+ (Class)calloutViewClass;
@property(nonatomic) long long collisionMode; // @synthesize collisionMode=_collisionMode;
@property(readonly, nonatomic) __weak MKAnnotationView *clusterAnnotationView; // @synthesize clusterAnnotationView=_clusterAnnotationView;
@property(copy, nonatomic) NSString *clusteringIdentifier; // @synthesize clusteringIdentifier=_clusteringIdentifier;
@property(nonatomic) float displayPriority; // @synthesize displayPriority=_displayPriority;
@property(nonatomic, getter=_isPendingSelectionAnimated, setter=_setPendingSelectionAnimated:) _Bool pendingSelectionAnimated; // @synthesize pendingSelectionAnimated=_pendingSelectionAnimated;
@property(nonatomic, getter=_selectionPriority, setter=_setSelectionPriority:) float selectionPriority; // @synthesize selectionPriority=_selectionPriority;
@property(nonatomic, getter=_mapDisplayStyle, setter=_setMapDisplayStyle:) CDStruct_80aa614a mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(nonatomic, getter=_mapPitchRadians, setter=_setMapPitchRadians:) double mapPitchRadians; // @synthesize mapPitchRadians=_mapPitchRadians;
@property(nonatomic, getter=_mapRotationRadians, setter=_setMapRotationRadians:) double mapRotationRadians; // @synthesize mapRotationRadians=_mapRotationRadians;
@property(retain, nonatomic, setter=_setRouteMatch:) GEORouteMatch *_routeMatch; // @synthesize _routeMatch;
@property(retain, nonatomic) UIView *detailCalloutAccessoryView; // @synthesize detailCalloutAccessoryView=_detailCalloutAccessoryView;
@property(retain, nonatomic) UIView *rightCalloutAccessoryView; // @synthesize rightCalloutAccessoryView=_rightCalloutAccessoryView;
@property(retain, nonatomic) UIView *leftCalloutAccessoryView; // @synthesize leftCalloutAccessoryView=_leftCalloutAccessoryView;
@property(nonatomic) struct CGPoint rightCalloutOffset; // @synthesize rightCalloutOffset=_rightCalloutOffset;
@property(nonatomic) struct CGPoint leftCalloutOffset; // @synthesize leftCalloutOffset=_leftCalloutOffset;
@property(readonly, nonatomic, getter=_collisionFrame) struct CGRect collisionFrame; // @synthesize collisionFrame=_collisionFrame;
@property(retain, nonatomic, getter=_calloutView, setter=_setCalloutView:) MKCalloutView *_calloutView; // @synthesize _calloutView;
@property(nonatomic, getter=_isTracking, setter=_setTracking:) _Bool _tracking; // @synthesize _tracking;
@property(nonatomic, getter=_isAnimatingToCoordinate, setter=_setAnimatingToCoordinate:) _Bool _animatingToCoordinate; // @synthesize _animatingToCoordinate;
@property(nonatomic, setter=_setPresentationCourse:) double _presentationCourse; // @synthesize _presentationCourse;
@property(copy, nonatomic, setter=_setPresentationCoordinateChangedCallback:) CDUnknownBlockType _presentationCoordinateChangedCallback; // @synthesize _presentationCoordinateChangedCallback;
@property(nonatomic, setter=_setDirection:) double _direction; // @synthesize _direction;
- (void).cxx_destruct;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)prepareForSnapshotting;
- (_Bool)isCollidingWithAnnotationView:(id)arg1 previouslyCollided:(_Bool)arg2;
- (void)_mkObserveValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_removeAnnotationObservation;
- (void)_addAnnotationObservation;
- (id)_customFeatureAnnotation;
@property(nonatomic, getter=_useBalloonCallouts, setter=_setUseBalloonCallouts:) _Bool useBalloonCallouts;
- (void)_didUpdatePosition;
- (void)_updateFromMap;
- (double)_pointsForDistance:(double)arg1;
- (id)_vkNavigationPuckMarker;
- (void)_setVKNavigationPuckMarker:(id)arg1;
- (id)_mapView;
- (id)_containerView;
- (_Bool)_canChangeOrientation;
- (unsigned long long)_orientationCount;
- (_Bool)_hasAlternateOrientation;
- (void)_transitionFrom:(long long)arg1 to:(long long)arg2 duration:(double)arg3;
- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;
- (void)_userTrackingModeDidChange:(id)arg1;
- (void)_enableRotationForHeadingMode:(double)arg1;
- (id)_annotationContainer;
- (struct CGPoint)_offsetToAnnotationView:(id)arg1;
- (void)_setPositionOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)_setHidden:(_Bool)arg1 forReason:(unsigned long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_setHidden:(_Bool)arg1 forReason:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)_performStateUpdatesIfNeeded;
- (void)_performOffsetAnimationIfNeeded;
- (void)_performHideAnimationIfNeeded;
- (_Bool)_isHiddenForReason:(unsigned long long)arg1;
- (double)alpha;
- (void)setAlpha:(double)arg1;
- (void)_setHiddenForOffscreen:(_Bool)arg1;
- (_Bool)isHidden;
- (void)setHidden:(_Bool)arg1;
- (id)snapshotViewAfterScreenUpdates:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)_resetZIndexNotify:(_Bool)arg1;
- (void)_resetZIndex;
- (unsigned long long)_effectiveZIndex;
- (void)_setZIndex:(unsigned long long)arg1;
- (void)_setZIndex:(unsigned long long)arg1 notify:(_Bool)arg2;
- (unsigned long long)_zIndex;
- (void)_setMapType:(unsigned long long)arg1;
- (unsigned long long)_mapType;
- (_Bool)isPersistent;
- (void)_setCanDisplayPlacemarkInCallout:(_Bool)arg1;
- (_Bool)_canDisplayPlacemarkInCallout;
- (void)_setCanDisplayDisclosureInCallout:(_Bool)arg1;
- (_Bool)_canDisplayDisclosureInCallout;
- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long dragState;
@property(nonatomic, getter=isDraggable) _Bool draggable;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) struct CGRect _significantFrame;
@property(readonly, nonatomic, getter=_significantBounds) struct CGRect significantBounds;
- (struct CGRect)_mapkit_visibleRect;
@property(readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;
@property(readonly, nonatomic) VKAnchorWrapper *anchor;
- (_Bool)_shouldDeselectWhenDragged;
- (void)_invalidateCachedCoordinate;
@property(nonatomic, setter=_setPresentationCoordinate:) struct CLLocationCoordinate2D _presentationCoordinate; // @synthesize _presentationCoordinate;
@property(readonly, nonatomic) struct CLLocationCoordinate2D coordinate;
@property(nonatomic) struct CGPoint calloutOffset;
@property(nonatomic) struct CGPoint centerOffset;
- (void)_didDragWithVelocity:(struct CGPoint)arg1;
- (struct CGPoint)_draggingDropOffset;
@property(nonatomic) _Bool canShowCallout;
- (_Bool)updateCalloutViewIfNeededAnimated:(_Bool)arg1;
- (_Bool)_shouldShowCalloutIfSelected;
- (void)_setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isSelected) _Bool selected;
@property(retain, nonatomic) UIImage *image;
- (id)_contentLayer;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(retain, nonatomic) id <MKAnnotation> annotation;
- (void)_removePopover;
- (id)_getPopover:(id)arg1;
- (void)_unhideForDisplay;
- (void)prepareForDisplay;
- (void)prepareForReuse;
@property(readonly, nonatomic) NSString *reuseIdentifier;
- (id)viewRepresentation;
- (void)dealloc;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (long long)compareForCollision:(id)arg1;
- (long long)compareForClustering:(id)arg1;
- (void)setClusterAnnotationView:(id)arg1;
- (void)_updateAnchorPosition:(struct CGPoint)arg1 alignToPixels:(_Bool)arg2;
- (_Bool)isSelectable;
- (_Bool)shouldShowCallout;
- (void)configureCustomFeature:(id)arg1;
- (void)invalidateCustomFeatureForced:(_Bool)arg1;
- (_Bool)isProvidingCustomFeature;
- (id)customFeatureAnnotation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

