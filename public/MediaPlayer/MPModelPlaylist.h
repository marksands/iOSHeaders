//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <MediaPlayer/MPModelObject.h>

@class MPModelCurator, MPTiledArtworkRequest, NSDate, NSDateComponents, NSString, NSURL;

@interface MPModelPlaylist : MPModelObject
{
}

+ (id)__cloudVersionHash_KEY;
+ (id)__lastDevicePlaybackDate_KEY;
+ (id)__keepLocalManagedStatus_KEY;
+ (id)__keepLocalEnableState_KEY;
+ (id)__tiledArtworkRequest_KEY;
+ (id)__libraryAddedDate_KEY;
+ (id)__libraryAdded_KEY;
+ (id)__editorialArtworkCatalogBlock_KEY;
+ (id)__artworkCatalogBlock_KEY;
+ (id)__lastModifiedDateComponents_KEY;
+ (id)__releaseDateComponents_KEY;
+ (id)__shareShortURL_KEY;
+ (id)__shareURL_KEY;
+ (id)__shortEditorNotes_KEY;
+ (id)__editorNotes_KEY;
+ (id)__trackCount_KEY;
+ (id)__type_KEY;
+ (id)__userEditableComponents_KEY;
+ (id)__subscribed_KEY;
+ (id)__visiblePlaylist_KEY;
+ (id)__publicPlaylist_KEY;
+ (id)__owner_KEY;
+ (id)__curatorPlaylist_KEY;
+ (id)__hasExplicitContent_KEY;
+ (id)__hasCleanContent_KEY;
+ (id)__curator_KEY;
+ (id)__descriptionText_KEY;
+ (id)__name_KEY;
+ (id)kindWithVariants:(unsigned long long)arg1 playlistEntryKind:(id)arg2 options:(unsigned long long)arg3;
+ (id)kindWithPlaylistEntryKind:(id)arg1 options:(unsigned long long)arg2;
+ (id)requiredLibraryAddStatusObservationProperties;
+ (_Bool)supportsLibraryAddStatusObservation;
+ (_Bool)supportsLibraryRemoval;
+ (id)requiredLibraryRemovalProperties;
+ (_Bool)supportsKeepLocalStatusObservation;
+ (id)requiredKeepLocalStatusObservationProperties;
+ (id)requiredStoreLibraryPersonalizationProperties;
+ (_Bool)storeItemMetadataRequestNeedsPersonalizationForIdentifiers:(id)arg1;
+ (id)storeItemMetadataRequestItemIdentifierForIdentifiers:(id)arg1;
- (id)tracksTiledArtworkCatalogWithRows:(unsigned long long)arg1 columns:(unsigned long long)arg2;
- (id)trackArtworkCatalogsWithCount:(long long)arg1;
- (id)editorialArtworkCatalog;
- (id)artworkCatalog;
- (id)humanDescription;
- (id)contentItemCollectionInfo;
- (struct MPLibraryAddStatusObserverConfiguration)libraryAddStatusObserverConfiguration;
- (long long)libraryRemovalSupportedOptions;
- (id)newKeepLocalStatusObserverConfiguration;
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;
- (id)relativeModelObjectForStoreLibraryPersonalization;
- (id)personalizationScopedPropertiesForProperties:(id)arg1;

// Remaining properties
@property(copy, nonatomic) CDUnknownBlockType artworkCatalogBlock; // @dynamic artworkCatalogBlock;
@property(copy, nonatomic) NSString *cloudVersionHash; // @dynamic cloudVersionHash;
@property(copy, nonatomic) MPModelCurator *curator; // @dynamic curator;
@property(nonatomic, getter=isCuratorPlaylist) _Bool curatorPlaylist; // @dynamic curatorPlaylist;
@property(copy, nonatomic) NSString *descriptionText; // @dynamic descriptionText;
@property(copy, nonatomic) NSString *editorNotes; // @dynamic editorNotes;
@property(copy, nonatomic) CDUnknownBlockType editorialArtworkCatalogBlock; // @dynamic editorialArtworkCatalogBlock;
@property(nonatomic) _Bool hasCleanContent; // @dynamic hasCleanContent;
@property(nonatomic) _Bool hasExplicitContent; // @dynamic hasExplicitContent;
@property(nonatomic) long long keepLocalEnableState; // @dynamic keepLocalEnableState;
@property(nonatomic) long long keepLocalManagedStatus; // @dynamic keepLocalManagedStatus;
@property(copy, nonatomic) NSDate *lastDevicePlaybackDate; // @dynamic lastDevicePlaybackDate;
@property(copy, nonatomic) NSDateComponents *lastModifiedDateComponents; // @dynamic lastModifiedDateComponents;
@property(nonatomic, getter=isLibraryAdded) _Bool libraryAdded; // @dynamic libraryAdded;
@property(copy, nonatomic) NSDate *libraryAddedDate; // @dynamic libraryAddedDate;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic, getter=isOwner) _Bool owner; // @dynamic owner;
@property(nonatomic, getter=isPublicPlaylist) _Bool publicPlaylist; // @dynamic publicPlaylist;
@property(copy, nonatomic) NSDateComponents *releaseDateComponents; // @dynamic releaseDateComponents;
@property(copy, nonatomic) NSURL *shareShortURL; // @dynamic shareShortURL;
@property(copy, nonatomic) NSURL *shareURL; // @dynamic shareURL;
@property(copy, nonatomic) NSString *shortEditorNotes; // @dynamic shortEditorNotes;
@property(nonatomic, getter=isSubscribed) _Bool subscribed; // @dynamic subscribed;
@property(copy, nonatomic) MPTiledArtworkRequest *tiledArtworkRequest; // @dynamic tiledArtworkRequest;
@property(nonatomic) unsigned long long trackCount; // @dynamic trackCount;
@property(nonatomic) long long type; // @dynamic type;
@property(nonatomic) long long userEditableComponents; // @dynamic userEditableComponents;
@property(nonatomic, getter=isVisiblePlaylist) _Bool visiblePlaylist; // @dynamic visiblePlaylist;

@end

