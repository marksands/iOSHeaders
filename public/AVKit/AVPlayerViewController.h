//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "AVContentTransitioningDelegate.h"
#import "AVFullScreenViewControllerDelegate.h"
#import "AVPictureInPictureControllerDelegate.h"
#import "AVPlaybackControlsVisibilityControllerDelegate.h"
#import "AVTransitionControllerDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIPopoverPresentationControllerDelegate.h"

@class AVAppBasedStatusBarAppearanceController, AVFullScreenViewController, AVObservationController, AVPictureInPictureController, AVPlaybackControlsController, AVPlaybackControlsVisibilityController, AVPlayer, AVPlayerController, AVPlayerView, AVPlayerViewControllerContentView, AVPlayerViewControllerCustomControlsView, AVTransitionController, NSArray, NSDictionary, NSMutableDictionary, NSString, UIPopoverPresentationController, UIScreen, UIView, UIWindow, __AVPlayerLayerView;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, AVPlaybackControlsVisibilityControllerDelegate, AVFullScreenViewControllerDelegate, AVContentTransitioningDelegate, AVTransitionControllerDelegate>
{
    _Bool _playerShouldAutoplay;
    _Bool _showsPlaybackControls;
    _Bool _requiresLinearPlayback;
    long long _videoGravity;
    _Bool _allowsPictureInPicturePlayback;
    _Bool _hasClientSetVideoGravity;
    _Bool _hasClientSetTransitioningDelegate;
    NSDictionary *_pixelBufferAttributes;
    AVPictureInPictureController *_pictureInPictureController;
    UIPopoverPresentationController *_mediaSelectionPopoverPresentationController;
    AVTransitionController *_transitionController;
    AVPlaybackControlsVisibilityController *_playbackControlsVisibilityController;
    AVPlaybackControlsController *_playbackControlsController;
    AVAppBasedStatusBarAppearanceController *_appBasedStatusBarAppearanceController;
    AVPlayerView *_playerViewControllerView;
    __AVPlayerLayerView *_playerLayerView;
    _Bool _playbackControlsViewControllerPictureInPictureButtonEnabled;
    _Bool _transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart;
    id <AVPlayerViewControllerDelegate> _delegate;
    struct {
        _Bool playerViewControllerWillStartPictureInPicture;
        _Bool playerViewControllerDidStartPictureInPicture;
        _Bool playerViewController_failedToStartPictureInPictureWithError;
        _Bool playerViewControllerWillStopPictureInPicture;
        _Bool playerViewControllerDidStopPictureInPicture;
        _Bool playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart;
        _Bool playerViewController_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler;
        _Bool playerViewController_shouldExitFullScreenWithReason;
        _Bool playerViewControllerMetricsCollectionEventOccured;
        _Bool playerViewControllerWillTransitionToVisibilityOfPlaybackControlsWithAnimationCoordinator;
    } _delegateRespondsTo;
    _Bool _showsExitFullScreenButton;
    id <AVPlayerViewControllerContentTransitioning_NewsOnly> _contentTransitioningDelegate;
    UIView *_customContentTransitioningInfoPanel;
    _Bool _startNextContentTransitionButtonEnabled;
    _Bool _startPreviousContentTransitionButtonEnabled;
    _Bool _updatesNowPlayingInfoCenter;
    _Bool _entersFullScreenWhenPlaybackBegins;
    _Bool _exitsFullScreenWhenPlaybackEnds;
    _Bool _shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
    _Bool __wasInitializedWithPlayerLayerView;
    _Bool __hasBegunObservation;
    _Bool _canPausePlaybackWhenExitingFullScreen;
    _Bool _playbackControlsIncludeVolumeControls;
    AVPlayer *_player;
    NSMutableDictionary *__targetVideoGravitiesForLayoutClass;
    AVPlayerController *_playerController;
    UIWindow *_secondScreenWindow;
    UIScreen *_playbackTargetScreen;
    CDUnknownBlockType _finishPreparingForInteractiveDismissalHandler;
    CDUnknownBlockType _interactiveDismissalCompletionHandler;
    AVPlayer *_contentTransitioningPlayer;
    AVObservationController *__observationController;
    long long __numberOfTrackedUserInteractions;
    NSArray *_customControlItems;
}

+ (id)keyPathsForValuesAffectingPixelBufferAttributes;
+ (id)keyPathsForValuesAffectingVideoBounds;
+ (id)keyPathsForValuesAffectingReadyForDisplay;
+ (id)keyPathsForValuesAffectingVideoGravity;
+ (id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+ (id)keyPathsForValuesAffectingPictureInPictureSuspended;
+ (id)keyPathsForValuesAffectingPictureInPictureActive;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;
@property(copy, nonatomic) NSArray *customControlItems; // @synthesize customControlItems=_customControlItems;
@property(nonatomic) _Bool playbackControlsIncludeVolumeControls; // @synthesize playbackControlsIncludeVolumeControls=_playbackControlsIncludeVolumeControls;
@property(nonatomic) _Bool canPausePlaybackWhenExitingFullScreen; // @synthesize canPausePlaybackWhenExitingFullScreen=_canPausePlaybackWhenExitingFullScreen;
@property(nonatomic, setter=_setNumberOfTrackedUserInteractions:) long long _numberOfTrackedUserInteractions; // @synthesize _numberOfTrackedUserInteractions=__numberOfTrackedUserInteractions;
@property(nonatomic) _Bool _hasBegunObservation; // @synthesize _hasBegunObservation=__hasBegunObservation;
@property(readonly, nonatomic) AVObservationController *_observationController; // @synthesize _observationController=__observationController;
@property(retain, nonatomic) AVPlayer *contentTransitioningPlayer; // @synthesize contentTransitioningPlayer=_contentTransitioningPlayer;
@property(nonatomic, setter=_setWasInitializedWithPlayerLayerView:) _Bool _wasInitializedWithPlayerLayerView; // @synthesize _wasInitializedWithPlayerLayerView=__wasInitializedWithPlayerLayerView;
@property(copy, nonatomic) CDUnknownBlockType interactiveDismissalCompletionHandler; // @synthesize interactiveDismissalCompletionHandler=_interactiveDismissalCompletionHandler;
@property(copy, nonatomic) CDUnknownBlockType finishPreparingForInteractiveDismissalHandler; // @synthesize finishPreparingForInteractiveDismissalHandler=_finishPreparingForInteractiveDismissalHandler;
@property(nonatomic) _Bool shouldUseNetworkingResourcesForLiveStreamingWhilePaused; // @synthesize shouldUseNetworkingResourcesForLiveStreamingWhilePaused=_shouldUseNetworkingResourcesForLiveStreamingWhilePaused;
@property(retain, nonatomic) UIScreen *playbackTargetScreen; // @synthesize playbackTargetScreen=_playbackTargetScreen;
@property(retain, nonatomic) UIWindow *secondScreenWindow; // @synthesize secondScreenWindow=_secondScreenWindow;
@property(nonatomic) _Bool exitsFullScreenWhenPlaybackEnds; // @synthesize exitsFullScreenWhenPlaybackEnds=_exitsFullScreenWhenPlaybackEnds;
@property(nonatomic) _Bool entersFullScreenWhenPlaybackBegins; // @synthesize entersFullScreenWhenPlaybackBegins=_entersFullScreenWhenPlaybackBegins;
@property(nonatomic) _Bool updatesNowPlayingInfoCenter; // @synthesize updatesNowPlayingInfoCenter=_updatesNowPlayingInfoCenter;
@property(retain, nonatomic) AVPlayerController *playerController; // @synthesize playerController=_playerController;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (long long)contentTransitionTypeForTransitionDirection:(long long)arg1;
- (void)contentTransitioningViewDidChangeTransitionStatus:(id)arg1 oldState:(long long)arg2 oldTransitionDirection:(long long)arg3 oldProgress:(double)arg4;
- (id)contentTransitioningPlayerContentViewForTransition:(id)arg1;
- (_Bool)contentTransitioningView:(id)arg1 shouldBeginTransitionWithDirection:(long long)arg2;
- (_Bool)contentTransitioningViewShouldBeginDragging:(id)arg1 locationInView:(struct CGPoint)arg2;
- (_Bool)contentTransitioningEnabled:(id)arg1;
- (id)keyCommandResponderForFullScreenViewController:(id)arg1;
- (void)fullScreenViewControllerNeedsAppBasedStatusBarAppearanceUpdate:(id)arg1;
- (long long)preferredStatusStyleForFullScreenViewController:(id)arg1;
- (_Bool)prefersStatusBarHiddenForFullScreenViewController:(id)arg1;
- (void)fullScreenViewController:(id)arg1 viewWillTransitionToSize:(struct CGSize)arg2 coordinator:(id)arg3;
- (id)viewForFullScreenViewController:(id)arg1;
- (void)fullScreenViewControllerWillEndFullScreenPresentation:(id)arg1;
- (void)fullScreenViewControllerWillBeginFullScreenPresentation:(id)arg1;
- (void)playbackControlsVisibilityController:(id)arg1 animateAlongsideVisibilityAnimationsWithAnimationCoordinator:(id)arg2 appearingViews:(id)arg3 disappearingViews:(id)arg4;
- (void)playbackControlsVisibilityController:(id)arg1 updateStatusBarAppearanceUsingAnimator:(id)arg2;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1;
- (void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2;
- (void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1;
- (void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_modalPresentationStyleIsFullScreen;
- (_Bool)_isTransitioningToOrFromFullScreen;
- (void)transitionController:(id)arg1 transitionWillComplete:(_Bool)arg2;
- (id)transitionControllerBackgroundColorForInteractivelyTransitioningPresentedViewController:(id)arg1;
- (_Bool)transitionControllerCanCreateVideoOnlyWindow:(id)arg1;
- (id)transitionControllerContentSourceViewController:(id)arg1;
- (_Bool)transitionControllerCanBeginInteractivePresentationTransition:(id)arg1;
- (_Bool)transitionControllerCanBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractiveDismissalTransition:(id)arg1;
- (void)transitionControllerBeginInteractivePresentationTransition:(id)arg1;
- (void)transitionController:(id)arg1 prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg2;
- (id)transitionController:(id)arg1 targetViewForDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginDismissingViewController:(id)arg2;
- (void)transitionController:(id)arg1 willBeginPresentingViewController:(id)arg2;
- (_Bool)transitionController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (void)_transitionFromFullScreenAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_transitionToFullScreenAnimated:(_Bool)arg1 interactive:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_canEnterFullScreen;
- (void)_transitionFromFullScreenWithReason:(long long)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_isDescendantOfRootViewController;
- (id)_transitionController;
- (id)_transitionControllerIfLoaded;
@property(readonly, nonatomic) AVFullScreenViewController *fullScreenViewController;
- (void)showFullScreenPresentationFromView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_contentViewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_setPlayerLayerView:(id)arg1;
- (void)_notifyDelegateOfMetricsCollectionEvent:(long long)arg1;
- (void)_mediaSelectionDoneButtonTapped:(id)arg1;
- (void)_togglePictureInPicture;
- (_Bool)_isTrackingUserInteractionWithInteractiveView;
- (_Bool)_isTrackingUserInteraction;
- (void)_endTrackingUserInteraction;
- (void)_beginTrackingUserInteraction;
- (void)_handleUserInteractionObservationRecognizer:(id)arg1;
- (void)_handleDoubleDoubleTapGesture:(id)arg1;
- (void)_handleSingleTapGesture:(id)arg1;
- (void)_handleDoubleTapGesture:(id)arg1;
- (void)_updatePlaybackControlsController;
- (void)_updatePlayerLayerViewAndContentOverlayViewExcludingScreen:(id)arg1;
- (void)_updatePlayerLayerViewAndContentOverlayView;
- (void)_updateExternalPlaybackIndicatorView;
- (void)_updateAudioOnlyIndicatorView;
- (_Bool)_isAudioOnlyContent;
- (void)_updateUnsupportedContentIndicatorView;
- (_Bool)_isUnsupportedContent;
- (void)_addObservers;
- (void)_handleFastForwardKeyReleasedCommand:(id)arg1;
- (void)_handleFastForwardKeyPressedCommand:(id)arg1;
- (void)_handleRewindKeyReleasedCommand:(id)arg1;
- (void)_handleRewindKeyPressedCommand:(id)arg1;
- (void)_handleVolumeDownKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeDownKeyPressedCommand:(id)arg1;
- (void)_handleVolumeUpKeyReleasedCommand:(id)arg1;
- (void)_handleVolumeUpKeyPressedCommand:(id)arg1;
- (void)_handleShowPreviousFrameKeyCommand:(id)arg1;
- (void)_handleGoToBeginningKeyCommand:(id)arg1;
- (void)_handleShowNextFrameKeyCommand:(id)arg1;
- (void)_handleSkipAhead15SecondsKeyCommand:(id)arg1;
- (void)_handleSkipBack15SecondsKeyCommand:(id)arg1;
- (void)_handlePlayPauseKeyCommand:(id)arg1;
- (void)_handleExitFullScreenKeyCommand:(id)arg1;
- (id)keyCommands;
- (_Bool)canBecomeFirstResponder;
- (void)setTransitioningDelegate:(id)arg1;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (_Bool)modalPresentationCapturesStatusBarAppearance;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)setView:(id)arg1;
@property(readonly, nonatomic) UIViewController *viewControllerForFullScreenPresentation;
@property(copy, nonatomic) CDUnknownBlockType playButtonHandlerForLazyPlayerLoading;
- (id)playbackControlsController;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
@property(nonatomic) _Bool volumeControlsCanShowSlider;
- (_Bool)playbackControlsIncludeVolumeControlsControls;
@property(nonatomic) _Bool playbackControlsIncludeDisplayModeControls;
@property(nonatomic) _Bool playbackControlsIncludeTransportControls;
@property(nonatomic) _Bool canHideInteractiveContentOverlayView;
@property(nonatomic) _Bool requiresLinearPlayback;
- (void)_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:(_Bool)arg1;
- (_Bool)_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused;
@property(nonatomic) _Bool showsMinimalPlaybackControlsWhenEmbeddedInline;
@property(nonatomic) _Bool allowsEnteringFullScreen;
@property(nonatomic) _Bool canHidePlaybackControls;
@property(readonly, nonatomic) AVPlayerViewControllerCustomControlsView *customControlsView;
@property(readonly, nonatomic) UIView *interactiveContentOverlayView;
@property(copy, nonatomic) NSDictionary *pixelBufferAttributes;
@property(nonatomic) __weak id <AVPlayerViewControllerDelegate> delegate;
@property(nonatomic) _Bool allowsPictureInPicturePlayback;
@property(readonly, nonatomic) UIView *contentOverlayView;
@property(readonly, nonatomic) struct CGRect videoBounds;
@property(readonly, nonatomic, getter=isReadyForDisplay) _Bool readyForDisplay;
- (void)setVideoGravity:(id)arg1 forLayoutClass:(unsigned long long)arg2;
@property(readonly, nonatomic) NSMutableDictionary *_targetVideoGravitiesForLayoutClass; // @synthesize _targetVideoGravitiesForLayoutClass=__targetVideoGravitiesForLayoutClass;
@property(copy, nonatomic) NSString *videoGravity;
@property(nonatomic) _Bool showsPlaybackControls;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(readonly, nonatomic) UIView *iAdPrerollView;
@property(retain, nonatomic) UIView *customContentTransitioningInfoPanel;
- (long long)_transitionDirectionForContentTransitionType:(long long)arg1;
- (void)updateStartLeftRightContentTransitionButtonsEnabled;
@property(nonatomic, getter=isStartPreviousContentTransitionButtonEnabled) _Bool startPreviousContentTransitionButtonEnabled;
@property(nonatomic, getter=isStartNextContentTransitionButtonEnabled) _Bool startNextContentTransitionButtonEnabled;
- (void)setVideoGravityForTransitioningContent:(id)arg1;
- (void)startContentTransition:(long long)arg1;
@property(readonly, nonatomic, getter=isContentTransitionInteractive) _Bool contentTransitionInteractive;
@property(readonly, nonatomic) long long activeContentTransitionType;
@property(readonly, nonatomic) UIView *contentTransitioningOverlayView;
@property(nonatomic) __weak id <AVPlayerViewControllerContentTransitioning_NewsOnly> contentTransitioningDelegate;
@property(readonly, nonatomic) _Bool pictureInPictureWasStartedWhenEnteringBackground;
@property(readonly, nonatomic, getter=isPictureInPictureSuspended) _Bool pictureInPictureSuspended;
@property(readonly, nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive;
@property(readonly, nonatomic, getter=isPictureInPicturePossible) _Bool pictureInPicturePossible;
- (void)stopPictureInPicture;
- (void)startPictureInPicture;
- (void)exitFullScreenAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)enterFullScreenAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool showsExitFullScreenButton;
- (id)initWithPlayerLayerView:(id)arg1;
@property(readonly, nonatomic) AVPlaybackControlsVisibilityController *playbackControlsVisibilityController;
- (void)toggleMuted:(id)arg1;
- (void)pictureInPictureButtonTapped:(id)arg1;
- (void)fullScreenButtonTapped:(id)arg1;
- (void)mediaSelectionButtonTapped:(id)arg1;
- (void)togglePlayback:(id)arg1;
- (void)videoGravityButtonTapped:(id)arg1;
- (void)doneButtonTapped:(id)arg1;
@property(readonly, nonatomic, getter=isPresentedFullScreen) _Bool presentedFullScreen;
@property(readonly, nonatomic, getter=isPresentingFullScreenFromInline) _Bool presentingFullScreenFromInline;
- (void)prepareForFinishingInteractiveTransition:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) AVPlayerViewControllerContentView *contentView;
@property(readonly, nonatomic) _Bool hasActiveTransition;
@property(nonatomic) _Bool entersFullScreenWhenTapped;
- (void)flashAutoplayControls;
- (void)exitAutoplayPhase;
- (void)enterAutoplayPhase;
@property(nonatomic) long long preferredUnobscuredArea;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

